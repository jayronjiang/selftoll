###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       06/Apr/2017  11:01:02
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\Box.c
#    Command line =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\Box.c
#        -lCN
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pe174 -o
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Core\CM3\CoreSupport\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Core\CM3\DeviceSupport\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\include\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Driver\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Driver\NXP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Line\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\OS\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\OS\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Source\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_People's Republic of China.936
#    List file    =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\Box.lst
#    Object file  =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\Box.o
#
###############################################################################

E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\Box.c
      1          /*******************************************************************************************************
      2          *
      3          *                                 (c) Copyright 2004-2007, John Tonny
      4          *
      5          *                                           All Rights Reserved
      6          *
      7          ********************************************************************************************************
      8          *
      9          *--------------文件信息---------------------------------------------------------------------------------
     10          *文   件   名: Box.C
     11          *创   建   人: John Tonny
     12          *最后修改日期: 2009年11月01日
     13          *描        述:
     14          *
     15          *--------------历史版本信息-----------------------------------------------------------------------------
     16          * 创建人: John Tonny
     17          * 版  本: V1.0
     18          * 日　期: 2009年11月01日
     19          * 描　述: 原始版本
     20          *
     21          *-------------------------------------------------------------------------------------------------------
     22          * 修改人:
     23          * 版  本:
     24          * 日　期:
     25          * 描　述:
     26          *
     27          *--------------当前版本修订-----------------------------------------------------------------------------
     28          * 修改人:
     29          * 日　期:
     30          * 描　述:
     31          *
     32          *-------------------------------------------------------------------------------------------------------
     33          *******************************************************************************************************/
     34          
     35          #define BOX_GLOBALS
     36          #include "includes.h"

   \                                 In section .bss, align 4
   \   __absolute MEM_POOL m_BoxPool
   \                     m_BoxPool:
   \   00000000                      DS8 72

   \                                 In section .bss, align 4
   \   __absolute OS_SEM *g_pActionSem
   \                     g_pActionSem:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute OS_SEM *g_pSMotoSem
   \                     g_pSMotoSem:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute OS_SEM *g_pDMotoSem
   \                     g_pDMotoSem:
   \   00000000                      DS8 4
     37          
     38          
     39          /********************************************************************************************************
     40          ** 函数名称: Box_Init
     41          ** 功能描述:
     42          ** 输 　 入:
     43          **
     44          ** 输　  出:
     45          **
     46          ** 全局变量:
     47          ** 调用模块:
     48          **
     49          ** 作　  者: John Tonny
     50          ** 日　  期: 2005年05月01日
     51          **------------------------------------------------------------------------------------------------------
     52          ** 修 改 人:
     53          ** 日　  期:
     54          **------------------------------------------------------------------------------------------------------
     55          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     56          CPU_BOOLEAN Box_Init(void)
     57          {
   \                     Box_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
     58            CPU_SIZE_T      octets_reqd;
     59            LIB_ERR         lib_err;
     60          
     61            CPU_SR_ALLOC();
   \   00000004   0x2400             MOVS     R4,#+0
     62            
     63            
     64            CPU_CRITICAL_ENTER();
   \   00000006   0x.... 0x....      BL       CPU_SR_Save
   \   0000000A   0x0004             MOVS     R4,R0
   \   0000000C   0x.... 0x....      BL       CPU_IntDisMeasStart
     65            Mem_PoolCreate((MEM_POOL   *)&m_BoxPool,
     66                           (void       *) 0,
     67                           (CPU_SIZE_T  ) 0,
     68                           (CPU_SIZE_T  ) 4,
     69                           (CPU_SIZE_T  ) 64,
     70                           (CPU_SIZE_T  ) 1,
     71                           (CPU_SIZE_T *)&octets_reqd,
     72                           (LIB_ERR    *)&lib_err);
   \   00000010   0xA804             ADD      R0,SP,#+16
   \   00000012   0x9003             STR      R0,[SP, #+12]
   \   00000014   0xA805             ADD      R0,SP,#+20
   \   00000016   0x9002             STR      R0,[SP, #+8]
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x9001             STR      R0,[SP, #+4]
   \   0000001C   0x2040             MOVS     R0,#+64
   \   0000001E   0x9000             STR      R0,[SP, #+0]
   \   00000020   0x2304             MOVS     R3,#+4
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000002A   0x.... 0x....      BL       Mem_PoolCreate
     73            
     74            if (lib_err != LIB_MEM_ERR_NONE) {
   \   0000002E   0xF9BD 0x0010      LDRSH    R0,[SP, #+16]
   \   00000032   0xF242 0x7110      MOVW     R1,#+10000
   \   00000036   0x4288             CMP      R0,R1
   \   00000038   0xD006             BEQ.N    ??Box_Init_0
     75                CPU_CRITICAL_EXIT();
   \   0000003A   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   0000003E   0x0020             MOVS     R0,R4
   \   00000040   0x.... 0x....      BL       CPU_SR_Restore
     76                return (DEF_FAIL);    
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0xE038             B.N      ??Box_Init_1
     77            }
     78            CPU_CRITICAL_EXIT();
   \                     ??Box_Init_0: (+1)
   \   00000048   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   0000004C   0x0020             MOVS     R0,R4
   \   0000004E   0x.... 0x....      BL       CPU_SR_Restore
     79                
     80            
     81            g_pActionSem = (OS_SEM *)Mem_PoolBlkGet((MEM_POOL    *)&m_BoxPool,
     82                                            (CPU_SIZE_T   ) sizeof(OS_SEM),
     83                                            (LIB_ERR     *)&lib_err);
   \   00000052   0xAA04             ADD      R2,SP,#+16
   \   00000054   0x2128             MOVS     R1,#+40
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable13
   \   0000005A   0x.... 0x....      BL       Mem_PoolBlkGet
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable13_1
   \   00000062   0x6008             STR      R0,[R1, #+0]
     84            
     85            if(g_pActionSem){
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0x2800             CMP      R0,#+0
   \   0000006C   0xD006             BEQ.N    ??Box_Init_2
     86              if(BSP_OS_SemCreate((BSP_OS_SEM *)g_pActionSem,
     87                                        (BSP_OS_SEM_VAL)0,
     88                                        (CPU_CHAR *)0)==DEF_FAIL){  
   \   0000006E   0x2200             MOVS     R2,#+0
   \   00000070   0x2100             MOVS     R1,#+0
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable13_1
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x.... 0x....      BL       BSP_OS_SemCreate
     89              }
     90            }
     91            
     92            
     93            
     94            I2c0Init();
   \                     ??Box_Init_2: (+1)
   \   0000007C   0x.... 0x....      BL       I2c0Init
     95            
     96            DMotoSelectGet(0);
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       DMotoSelectGet
     97            SMotoSelectGet(0);
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x.... 0x....      BL       SMotoSelectGet
     98            BoxSelectGet(0);
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x.... 0x....      BL       BoxSelectGet
     99            KeySelectGet(0);
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x.... 0x....      BL       KeySelectGet
    100            
    101            DMotoPwmGet();	
   \   00000098   0x.... 0x....      BL       DMotoPwmGet
    102            SMotoFreqGet();
   \   0000009C   0x.... 0x....      BL       SMotoFreqGet
    103            
    104            ScanParamsGet();    
   \   000000A0   0x.... 0x....      BL       ScanParamsGet
    105            
    106            Timer0Init();
   \   000000A4   0x.... 0x....      BL       Timer0Init
    107            Timer1Init();
   \   000000A8   0x.... 0x....      BL       Timer1Init
    108            Timer2Init();
   \   000000AC   0x.... 0x....      BL       Timer2Init
    109            Timer3Init();
   \   000000B0   0x.... 0x....      BL       Timer3Init
    110            PWM1Init();
   \   000000B4   0x.... 0x....      BL       PWM1Init
    111            
    112             
    113            return DEF_OK;
   \   000000B8   0x2001             MOVS     R0,#+1
   \                     ??Box_Init_1: (+1)
   \   000000BA   0xB006             ADD      SP,SP,#+24
   \   000000BC   0xBD10             POP      {R4,PC}          ;; return
    114              
    115          }
    116          
    117          /********************************************************************************************************
    118          ** 函数名称: Box_Process
    119          ** 功能描述:
    120          ** 输 　 入:
    121          **
    122          ** 输　  出:
    123          **
    124          ** 全局变量:
    125          ** 调用模块:
    126          **
    127          ** 作　  者: John Tonny
    128          ** 日　  期: 2005年05月01日
    129          **------------------------------------------------------------------------------------------------------
    130          ** 修 改 人:
    131          ** 日　  期:
    132          **------------------------------------------------------------------------------------------------------
    133          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    134          void Box_Process(void)
    135          {  
   \                     Box_Process: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
    136            LIB_ERR               lib_err;
    137            OS_ERR                os_err;
    138            CPU_TS                ts;
    139            OS_MSG_SIZE           msgSize;
    140            CPU_INT08U            *pMsg; 
    141            INT8U                 ucCmd;
    142            INT8U                 ucType=DEV_TYPE();
   \   00000006   0x.... 0x....      BL       DEV_TYPE
   \   0000000A   0x0006             MOVS     R6,R0
    143            INT8U                 ucSelected;
    144            
    145            INT32U                ulTmp;
    146            INT8U ucCardPosABit=m_ucKeyBit[CARD_POSA_BIT];
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable14
   \   00000010   0xF890 0x9018      LDRB     R9,[R0, #+24]
    147            
    148            while(DEF_TRUE){
    149              pMsg = (CPU_INT08U *)OSTaskQPend(BOX_CONNECT_TIME_DEFAULT, OS_OPT_PEND_BLOCKING, &msgSize, &ts, &os_err);
   \                     ??Box_Process_0: (+1)
   \   00000014   0xF10D 0x0006      ADD      R0,SP,#+6
   \   00000018   0x9000             STR      R0,[SP, #+0]
   \   0000001A   0xAB03             ADD      R3,SP,#+12
   \   0000001C   0xAA01             ADD      R2,SP,#+4
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x20FA             MOVS     R0,#+250
   \   00000022   0x.... 0x....      BL       OSTaskQPend
   \   00000026   0x0004             MOVS     R4,R0
    150              if(pMsg){
   \   00000028   0x2C00             CMP      R4,#+0
   \   0000002A   0xD043             BEQ.N    ??Box_Process_1
    151                ucCmd=pMsg[0];
   \   0000002C   0x7820             LDRB     R0,[R4, #+0]
   \   0000002E   0x0005             MOVS     R5,R0
    152                if(ucCmd==BOX_CONNECTING_MSG){
   \   00000030   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000032   0x2D01             CMP      R5,#+1
   \   00000034   0xD120             BNE.N    ??Box_Process_2
    153                  if(ucType==SMALL_THICK_OUT_TYPE || ucType==LARGE_THICK_OUT_TYPE || ucType==SMALL_THIN_OUT_TYPE || ucType==LARGE_THIN_OUT_TYPE){
   \   00000036   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000038   0x2E00             CMP      R6,#+0
   \   0000003A   0xD008             BEQ.N    ??Box_Process_3
   \   0000003C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000003E   0x2E04             CMP      R6,#+4
   \   00000040   0xD005             BEQ.N    ??Box_Process_3
   \   00000042   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000044   0x2E08             CMP      R6,#+8
   \   00000046   0xD002             BEQ.N    ??Box_Process_3
   \   00000048   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000004A   0x2E0C             CMP      R6,#+12
   \   0000004C   0xD12B             BNE.N    ??Box_Process_4
    154                    //发卡
    155                    if(CARD_AUTO_MODE()){																																		
   \                     ??Box_Process_3: (+1)
   \   0000004E   0x.... 0x....      BL       CARD_AUTO_MODE
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xD027             BEQ.N    ??Box_Process_4
    156                      //自动模式
    157                      ulTmp=GetKeyOutput();
   \   00000056   0x.... 0x....      BL       GetKeyOutput
   \   0000005A   0x4680             MOV      R8,R0
    158                      if(!CheckBit(ulTmp,ucCardPosABit)){
   \   0000005C   0x4640             MOV      R0,R8
   \   0000005E   0xFA30 0xF009      LSRS     R0,R0,R9
   \   00000062   0x07C0             LSLS     R0,R0,#+31
   \   00000064   0xD41F             BMI.N    ??Box_Process_4
    159                        //无卡
    160                        m_usrGlobalFlag.usrBit.bCardTakeout=1;
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable15
   \   0000006A   0x7800             LDRB     R0,[R0, #+0]
   \   0000006C   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable15
   \   00000074   0x7008             STRB     R0,[R1, #+0]
   \   00000076   0xE016             B.N      ??Box_Process_4
    161                      }
    162                    }      
    163                  }
    164                }else if(ucCmd==BOX_UART_SEND_MSG){
   \                     ??Box_Process_2: (+1)
   \   00000078   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000007A   0x2D04             CMP      R5,#+4
   \   0000007C   0xD113             BNE.N    ??Box_Process_4
    165                  ucSelected=pMsg[3];
   \   0000007E   0x78E0             LDRB     R0,[R4, #+3]
   \   00000080   0x0007             MOVS     R7,R0
    166                  if(CardBoxSetSelected(ucSelected,BOX_POWER_ON_MODE)){
   \   00000082   0x2101             MOVS     R1,#+1
   \   00000084   0x0038             MOVS     R0,R7
   \   00000086   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000088   0x.... 0x....      BL       CardBoxSetSelected
   \   0000008C   0x2800             CMP      R0,#+0
   \   0000008E   0xD00A             BEQ.N    ??Box_Process_4
    167                    UartPack(pMsg[1],pMsg[2],msgSize-4,&pMsg[4],pMsg[3]);
   \   00000090   0x78E0             LDRB     R0,[R4, #+3]
   \   00000092   0x9000             STR      R0,[SP, #+0]
   \   00000094   0x1D23             ADDS     R3,R4,#+4
   \   00000096   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000009A   0x1F02             SUBS     R2,R0,#+4
   \   0000009C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000009E   0x78A1             LDRB     R1,[R4, #+2]
   \   000000A0   0x7860             LDRB     R0,[R4, #+1]
   \   000000A2   0x.... 0x....      BL       UartPack
    168                  }
    169                }
    170                Mem_PoolBlkFree(&m_BoxPool, pMsg, &lib_err);
   \                     ??Box_Process_4: (+1)
   \   000000A6   0xAA02             ADD      R2,SP,#+8
   \   000000A8   0x0021             MOVS     R1,R4
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable16
   \   000000AE   0x.... 0x....      BL       Mem_PoolBlkFree
    171                if (lib_err != LIB_MEM_ERR_NONE){
    172                  //error
    173                }
    174                continue;
   \   000000B2   0xE7AF             B.N      ??Box_Process_0
    175              }    
    176            
    177            #if BOARD_OLD_EN==0
    178              CardBoxCountEvent();
   \                     ??Box_Process_1: (+1)
   \   000000B4   0x.... 0x....      BL       CardBoxCountEvent
    179              CardBoxConnectEvent();
   \   000000B8   0x.... 0x....      BL       CardBoxConnectEvent
   \   000000BC   0xE7AA             B.N      ??Box_Process_0
    180            #else
    181              CardBoxConnectCountEvent();
    182            #endif
    183            }
    184          
    185          }
    186          
    187          /********************************************************************************************************
    188          ** oˉêy??3?: CardBoxConnectEvent
    189          ** 1|?ü?èê?:
    190          ** ê? ?? è?:
    191          **
    192          ** ê???  3?:
    193          **
    194          ** è???±?á?:
    195          ** μ÷ó??￡?é:
    196          **
    197          ** ×÷??  ??: John Tonny
    198          ** è???  ?ú: 2005?ê05??01è?
    199          **------------------------------------------------------------------------------------------------------
    200          ** DT ?? è?:
    201          ** è???  ?ú:
    202          **------------------------------------------------------------------------------------------------------
    203          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    204          void CardBoxConnectEvent(void)
    205          {
   \                     CardBoxConnectEvent: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB088             SUB      SP,SP,#+32
    206            INT8U ucData[32];
    207            INT8U ucSelected;
    208            INT8U ucBoxNums;
    209            
    210            INT8U ucType;
    211            
    212            ucType=DEV_TYPE();
   \   00000004   0x.... 0x....      BL       DEV_TYPE
   \   00000008   0x0006             MOVS     R6,R0
    213            if(ucType==LARGE_THICK_OUT_TYPE || ucType==LARGE_THIN_OUT_TYPE){
   \   0000000A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000000C   0x2E04             CMP      R6,#+4
   \   0000000E   0xD002             BEQ.N    ??CardBoxConnectEvent_0
   \   00000010   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000012   0x2E0C             CMP      R6,#+12
   \   00000014   0xD102             BNE.N    ??CardBoxConnectEvent_1
    214              ucBoxNums=CARDMACHINE_CARDBOX_NUMS;
   \                     ??CardBoxConnectEvent_0: (+1)
   \   00000016   0x2003             MOVS     R0,#+3
   \   00000018   0x0005             MOVS     R5,R0
   \   0000001A   0xE001             B.N      ??CardBoxConnectEvent_2
    215            }else{
    216              ucBoxNums=1;
   \                     ??CardBoxConnectEvent_1: (+1)
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x0005             MOVS     R5,R0
    217            }
    218          	
    219            for(ucSelected=0;ucSelected<ucBoxNums;ucSelected++){
   \                     ??CardBoxConnectEvent_2: (+1)
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x0004             MOVS     R4,R0
   \                     ??CardBoxConnectEvent_3: (+1)
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002C   0x4288             CMP      R0,R1
   \   0000002E   0xF080 0x80DE      BCS.W    ??CardBoxConnectEvent_4
    220              if(m_usrBoxInfo[ucSelected].usrFlag.usrBit.bBoxLoad){
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0x0161             LSLS     R1,R4,#+5
   \   0000003A   0x4408             ADD      R0,R0,R1
   \   0000003C   0x7B80             LDRB     R0,[R0, #+14]
   \   0000003E   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xF000 0x80D1      BEQ.W    ??CardBoxConnectEvent_5
    221                //装载
    222                if(m_usrBoxInfo[ucSelected].ucTimes){
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   0000004C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004E   0x0161             LSLS     R1,R4,#+5
   \   00000050   0x4408             ADD      R0,R0,R1
   \   00000052   0x7B00             LDRB     R0,[R0, #+12]
   \   00000054   0x2800             CMP      R0,#+0
   \   00000056   0xD00D             BEQ.N    ??CardBoxConnectEvent_6
    223                   m_usrBoxInfo[ucSelected].ucTimes--;
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   0000005C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005E   0x0161             LSLS     R1,R4,#+5
   \   00000060   0x4408             ADD      R0,R0,R1
   \   00000062   0x7B00             LDRB     R0,[R0, #+12]
   \   00000064   0x1E40             SUBS     R0,R0,#+1
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   0000006A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000006C   0x0162             LSLS     R2,R4,#+5
   \   0000006E   0x4411             ADD      R1,R1,R2
   \   00000070   0x7308             STRB     R0,[R1, #+12]
   \   00000072   0xE0BA             B.N      ??CardBoxConnectEvent_5
    224                }else{
    225                  //连接重试
    226                  if(m_usrBoxInfo[ucSelected].usrConnectResponse.ucRetrys>0){
   \                     ??CardBoxConnectEvent_6: (+1)
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000078   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007A   0x0161             LSLS     R1,R4,#+5
   \   0000007C   0x4408             ADD      R0,R0,R1
   \   0000007E   0x7F00             LDRB     R0,[R0, #+28]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD00D             BEQ.N    ??CardBoxConnectEvent_7
    227                    m_usrBoxInfo[ucSelected].usrConnectResponse.ucRetrys--;
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000088   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008A   0x0161             LSLS     R1,R4,#+5
   \   0000008C   0x4408             ADD      R0,R0,R1
   \   0000008E   0x7F00             LDRB     R0,[R0, #+28]
   \   00000090   0x1E40             SUBS     R0,R0,#+1
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000096   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000098   0x0162             LSLS     R2,R4,#+5
   \   0000009A   0x4411             ADD      R1,R1,R2
   \   0000009C   0x7708             STRB     R0,[R1, #+28]
   \   0000009E   0xE011             B.N      ??CardBoxConnectEvent_8
    228                  }else{
    229                    CardBoxInfoReset(ucSelected);
   \                     ??CardBoxConnectEvent_7: (+1)
   \   000000A0   0x0020             MOVS     R0,R4
   \   000000A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A4   0x.... 0x....      BL       CardBoxInfoReset
    230                    m_usrBoxInfo[ucSelected].usrFlag.usrBit.bCommErr=1;          
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000AE   0x0161             LSLS     R1,R4,#+5
   \   000000B0   0x4408             ADD      R0,R0,R1
   \   000000B2   0x7BC0             LDRB     R0,[R0, #+15]
   \   000000B4   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000BC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000BE   0x0162             LSLS     R2,R4,#+5
   \   000000C0   0x4411             ADD      R1,R1,R2
   \   000000C2   0x73C8             STRB     R0,[R1, #+15]
    231                  }
    232                  
    233                  
    234                  if(m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums>0){
   \                     ??CardBoxConnectEvent_8: (+1)
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000C8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000CA   0x0161             LSLS     R1,R4,#+5
   \   000000CC   0x4408             ADD      R0,R0,R1
   \   000000CE   0x7F40             LDRB     R0,[R0, #+29]
   \   000000D0   0x2800             CMP      R0,#+0
   \   000000D2   0xD00C             BEQ.N    ??CardBoxConnectEvent_9
    235                    m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums--;
   \   000000D4   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000D8   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000DA   0x0161             LSLS     R1,R4,#+5
   \   000000DC   0x4408             ADD      R0,R0,R1
   \   000000DE   0x7F40             LDRB     R0,[R0, #+29]
   \   000000E0   0x1E40             SUBS     R0,R0,#+1
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000E6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E8   0x0162             LSLS     R2,R4,#+5
   \   000000EA   0x4411             ADD      R1,R1,R2
   \   000000EC   0x7748             STRB     R0,[R1, #+29]
    236                  }
    237                  
    238                  if(!m_usrBoxInfo[ucSelected].usrFlag.usrBit.bConnected){
   \                     ??CardBoxConnectEvent_9: (+1)
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000F2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000F4   0x0161             LSLS     R1,R4,#+5
   \   000000F6   0x4408             ADD      R0,R0,R1
   \   000000F8   0x7B80             LDRB     R0,[R0, #+14]
   \   000000FA   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   000000FE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000100   0x2800             CMP      R0,#+0
   \   00000102   0xD111             BNE.N    ??CardBoxConnectEvent_10
    239                    m_usrBoxInfo[ucSelected].usrFlag.usrBit.bSelftest=1;																							//×??ì
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000108   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000010A   0x0161             LSLS     R1,R4,#+5
   \   0000010C   0x4408             ADD      R0,R0,R1
   \   0000010E   0x7B80             LDRB     R0,[R0, #+14]
   \   00000110   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000118   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000011A   0x0162             LSLS     R2,R4,#+5
   \   0000011C   0x4411             ADD      R1,R1,R2
   \   0000011E   0x7388             STRB     R0,[R1, #+14]
    240                    ucData[0]=0x40;
   \   00000120   0x2040             MOVS     R0,#+64
   \   00000122   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000126   0xE04E             B.N      ??CardBoxConnectEvent_11
    241                  }else{
    242                    ucData[0]=0x00;
   \                     ??CardBoxConnectEvent_10: (+1)
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    243                    if(!m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums){
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000132   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000134   0x0161             LSLS     R1,R4,#+5
   \   00000136   0x4408             ADD      R0,R0,R1
   \   00000138   0x7F40             LDRB     R0,[R0, #+29]
   \   0000013A   0x2800             CMP      R0,#+0
   \   0000013C   0xD143             BNE.N    ??CardBoxConnectEvent_11
    244                      if(m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrRetrys){
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000142   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000144   0x0161             LSLS     R1,R4,#+5
   \   00000146   0x4408             ADD      R0,R0,R1
   \   00000148   0x7F80             LDRB     R0,[R0, #+30]
   \   0000014A   0x2800             CMP      R0,#+0
   \   0000014C   0xD02D             BEQ.N    ??CardBoxConnectEvent_12
    245                        m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrRetrys--;
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000152   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000154   0x0161             LSLS     R1,R4,#+5
   \   00000156   0x4408             ADD      R0,R0,R1
   \   00000158   0x7F80             LDRB     R0,[R0, #+30]
   \   0000015A   0x1E40             SUBS     R0,R0,#+1
   \   0000015C   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000160   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000162   0x0162             LSLS     R2,R4,#+5
   \   00000164   0x4411             ADD      R1,R1,R2
   \   00000166   0x7788             STRB     R0,[R1, #+30]
    246                        if(m_usrBoxInfo[ucSelected].usrFlag.usrBit.bSelftest){					
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   0000016C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000016E   0x0161             LSLS     R1,R4,#+5
   \   00000170   0x4408             ADD      R0,R0,R1
   \   00000172   0x7B80             LDRB     R0,[R0, #+14]
   \   00000174   0xF3C0 0x00C0      UBFX     R0,R0,#+3,#+1
   \   00000178   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017A   0x2800             CMP      R0,#+0
   \   0000017C   0xD00A             BEQ.N    ??CardBoxConnectEvent_13
    247                          ucData[0]=0x40;
   \   0000017E   0x2040             MOVS     R0,#+64
   \   00000180   0xF88D 0x0000      STRB     R0,[SP, #+0]
    248                          m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums=21;
   \   00000184   0x2015             MOVS     R0,#+21
   \   00000186   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   0000018A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000018C   0x0162             LSLS     R2,R4,#+5
   \   0000018E   0x4411             ADD      R1,R1,R2
   \   00000190   0x7748             STRB     R0,[R1, #+29]
   \   00000192   0xE018             B.N      ??CardBoxConnectEvent_11
    249                        }else{
    250                          m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums=CARDBOX_POS_ERR_NUMS;
   \                     ??CardBoxConnectEvent_13: (+1)
   \   00000194   0x2008             MOVS     R0,#+8
   \   00000196   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   0000019A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000019C   0x0162             LSLS     R2,R4,#+5
   \   0000019E   0x4411             ADD      R1,R1,R2
   \   000001A0   0x7748             STRB     R0,[R1, #+29]
    251                          ucData[0]=0x80;
   \   000001A2   0x2080             MOVS     R0,#+128
   \   000001A4   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   000001A8   0xE00D             B.N      ??CardBoxConnectEvent_11
    252                        }
    253                      }else{
    254                        m_usrBoxInfo[ucSelected].usrFlag.usrBit.bPosErr=1;
   \                     ??CardBoxConnectEvent_12: (+1)
   \   000001AA   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000001AE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001B0   0x0161             LSLS     R1,R4,#+5
   \   000001B2   0x4408             ADD      R0,R0,R1
   \   000001B4   0x7BC0             LDRB     R0,[R0, #+15]
   \   000001B6   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000001BA   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000001BE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001C0   0x0162             LSLS     R2,R4,#+5
   \   000001C2   0x4411             ADD      R1,R1,R2
   \   000001C4   0x73C8             STRB     R0,[R1, #+15]
    255                      }
    256                    }
    257                  }			
    258                  if(!m_usrBoxInfo[ucSelected].usrFlag.usrBit.bSelftest && !m_usrBoxInfo[ucSelected].usrFlag.usrBit.bCardPos){					
   \                     ??CardBoxConnectEvent_11: (+1)
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000001CA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000001CC   0x0161             LSLS     R1,R4,#+5
   \   000001CE   0x4408             ADD      R0,R0,R1
   \   000001D0   0x7B80             LDRB     R0,[R0, #+14]
   \   000001D2   0x2128             MOVS     R1,#+40
   \   000001D4   0x4208             TST      R0,R1
   \   000001D6   0xD102             BNE.N    ??CardBoxConnectEvent_14
    259                    ucData[0]=0x80;
   \   000001D8   0x2080             MOVS     R0,#+128
   \   000001DA   0xF88D 0x0000      STRB     R0,[SP, #+0]
    260                  }
    261                  CardBoxBasicInfoSend(ucData[0],ucSelected);
   \                     ??CardBoxConnectEvent_14: (+1)
   \   000001DE   0x0021             MOVS     R1,R4
   \   000001E0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001E2   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000001E6   0x.... 0x....      BL       CardBoxBasicInfoSend
    262                }
    263              }
    264            }
   \                     ??CardBoxConnectEvent_5: (+1)
   \   000001EA   0x1C64             ADDS     R4,R4,#+1
   \   000001EC   0xE71A             B.N      ??CardBoxConnectEvent_3
    265          }
   \                     ??CardBoxConnectEvent_4: (+1)
   \   000001EE   0xB008             ADD      SP,SP,#+32
   \   000001F0   0xBD70             POP      {R4-R6,PC}       ;; return
    266                   
    267          /********************************************************************************************************
    268          ** oˉêy??3?: CardBoxCountEvent
    269          ** 1|?ü?èê?: μ±D′è??¨êy?′íê3é￡?ò??±???′D′è?￡??±μ???μ??????ò×°??2?í?μ??¨?D
    270          ** ê? ?? è?:
    271          **
    272          ** ê???  3?:
    273          **
    274          ** è???±?á?:
    275          ** μ÷ó??￡?é:
    276          **
    277          ** ×÷??  ??: John Tonny
    278          ** è???  ?ú: 2005?ê05??01è?
    279          **------------------------------------------------------------------------------------------------------
    280          ** DT ?? è?:
    281          ** è???  ?ú:
    282          **------------------------------------------------------------------------------------------------------
    283          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    284          void CardBoxCountEvent(void)
    285          {
   \                     CardBoxCountEvent: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    286            INT8U ucType;
    287            INT8U ucBoxNums;
    288            INT8U ucSelected;
    289            
    290            CPU_SR_ALLOC();
   \   00000002   0x2600             MOVS     R6,#+0
    291            
    292            ucType=DEV_TYPE();
   \   00000004   0x.... 0x....      BL       DEV_TYPE
   \   00000008   0x0004             MOVS     R4,R0
    293            if(ucType==LARGE_THICK_OUT_TYPE || ucType==LARGE_THIN_OUT_TYPE){
   \   0000000A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000C   0x2C04             CMP      R4,#+4
   \   0000000E   0xD002             BEQ.N    ??CardBoxCountEvent_0
   \   00000010   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000012   0x2C0C             CMP      R4,#+12
   \   00000014   0xD102             BNE.N    ??CardBoxCountEvent_1
    294              ucBoxNums=CARDMACHINE_CARDBOX_NUMS;
   \                     ??CardBoxCountEvent_0: (+1)
   \   00000016   0x2003             MOVS     R0,#+3
   \   00000018   0x0007             MOVS     R7,R0
   \   0000001A   0xE001             B.N      ??CardBoxCountEvent_2
    295            }else{
    296              ucBoxNums=1;
   \                     ??CardBoxCountEvent_1: (+1)
   \   0000001C   0x2001             MOVS     R0,#+1
   \   0000001E   0x0007             MOVS     R7,R0
    297            }
    298            
    299            for(ucSelected=0;ucSelected<ucBoxNums;ucSelected++){
   \                     ??CardBoxCountEvent_2: (+1)
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x0005             MOVS     R5,R0
   \                     ??CardBoxCountEvent_3: (+1)
   \   00000024   0x0028             MOVS     R0,R5
   \   00000026   0x0039             MOVS     R1,R7
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002C   0x4288             CMP      R0,R1
   \   0000002E   0xD251             BCS.N    ??CardBoxCountEvent_4
    300              if(!m_usrBoxInfo[ucSelected].usrFlag.usrBit.bBoxLoad || !m_usrBoxInfo[ucSelected].usrFlag.usrBit.bConnected){
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0x0169             LSLS     R1,R5,#+5
   \   00000038   0x4408             ADD      R0,R0,R1
   \   0000003A   0x7B80             LDRB     R0,[R0, #+14]
   \   0000003C   0xF010 0x0005      ANDS     R0,R0,#0x5
   \   00000040   0x2805             CMP      R0,#+5
   \   00000042   0xD145             BNE.N    ??CardBoxCountEvent_5
    301                continue;
    302              }
    303              
    304              if(m_usrBoxInfo[ucSelected].usrCountResponse.ucEnabled){		
   \                     ??CardBoxCountEvent_6: (+1)
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000048   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004A   0x0169             LSLS     R1,R5,#+5
   \   0000004C   0x4408             ADD      R0,R0,R1
   \   0000004E   0x7C00             LDRB     R0,[R0, #+16]
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD03D             BEQ.N    ??CardBoxCountEvent_5
    305                if(m_usrBoxInfo[ucSelected].usrCountResponse.ulMachineId==m_usrBoxInfo[ucSelected].ulMachineId){		
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000058   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005A   0x0169             LSLS     R1,R5,#+5
   \   0000005C   0x4408             ADD      R0,R0,R1
   \   0000005E   0x6940             LDR      R0,[R0, #+20]
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000064   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000066   0x016A             LSLS     R2,R5,#+5
   \   00000068   0x4411             ADD      R1,R1,R2
   \   0000006A   0x6849             LDR      R1,[R1, #+4]
   \   0000006C   0x4288             CMP      R0,R1
   \   0000006E   0xD12B             BNE.N    ??CardBoxCountEvent_7
    306                  OS_ENTER_CRITICAL();
   \   00000070   0x.... 0x....      BL       CPU_SR_Save
   \   00000074   0x0006             MOVS     R6,R0
   \   00000076   0x.... 0x....      BL       CPU_IntDisMeasStart
    307                  if(m_usrBoxInfo[ucSelected].usrCountResponse.ucRetrys>0){
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   0000007E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000080   0x0169             LSLS     R1,R5,#+5
   \   00000082   0x4408             ADD      R0,R0,R1
   \   00000084   0x7E80             LDRB     R0,[R0, #+26]
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD00D             BEQ.N    ??CardBoxCountEvent_8
    308                    m_usrBoxInfo[ucSelected].usrCountResponse.ucRetrys--;
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   0000008E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000090   0x0169             LSLS     R1,R5,#+5
   \   00000092   0x4408             ADD      R0,R0,R1
   \   00000094   0x7E80             LDRB     R0,[R0, #+26]
   \   00000096   0x1E40             SUBS     R0,R0,#+1
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   0000009C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000009E   0x016A             LSLS     R2,R5,#+5
   \   000000A0   0x4411             ADD      R1,R1,R2
   \   000000A2   0x7688             STRB     R0,[R1, #+26]
   \   000000A4   0xE005             B.N      ??CardBoxCountEvent_9
    309                  }else{
    310                    BuzzSet(7,30,15,BUZZ_COUNT_WRITE_ERR_PRIOR);
   \                     ??CardBoxCountEvent_8: (+1)
   \   000000A6   0x2314             MOVS     R3,#+20
   \   000000A8   0x220F             MOVS     R2,#+15
   \   000000AA   0x211E             MOVS     R1,#+30
   \   000000AC   0x2007             MOVS     R0,#+7
   \   000000AE   0x.... 0x....      BL       BuzzSet
    311                  }
    312                  OS_EXIT_CRITICAL();
   \                     ??CardBoxCountEvent_9: (+1)
   \   000000B2   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   000000B6   0x0030             MOVS     R0,R6
   \   000000B8   0x.... 0x....      BL       CPU_SR_Restore
    313                  CardCountUpdateSend(1,ucSelected);
   \   000000BC   0x0029             MOVS     R1,R5
   \   000000BE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x.... 0x....      BL       CardCountUpdateSend
   \   000000C6   0xE003             B.N      ??CardBoxCountEvent_5
    314                }else{
    315                  CardBoxCountReset(ucSelected);
   \                     ??CardBoxCountEvent_7: (+1)
   \   000000C8   0x0028             MOVS     R0,R5
   \   000000CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CC   0x.... 0x....      BL       CardBoxCountReset
    316                }
    317              }	
    318            }
   \                     ??CardBoxCountEvent_5: (+1)
   \   000000D0   0x1C6D             ADDS     R5,R5,#+1
   \   000000D2   0xE7A7             B.N      ??CardBoxCountEvent_3
    319          }
   \                     ??CardBoxCountEvent_4: (+1)
   \   000000D4   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    320          
    321          /********************************************************************************************************
    322          ** oˉêy??3?: CardBoxConnectCountEvent
    323          ** 1|?ü?èê?: μ±D′è??¨êy?′íê3é￡?ò??±???′D′è?￡??±μ???μ??????ò×°??2?í?μ??¨?D
    324          ** ê? ?? è?:
    325          **
    326          ** ê???  3?:
    327          **
    328          ** è???±?á?:
    329          ** μ÷ó??￡?é:
    330          **
    331          ** ×÷??  ??: John Tonny
    332          ** è???  ?ú: 2005?ê05??01è?
    333          **------------------------------------------------------------------------------------------------------
    334          ** DT ?? è?:
    335          ** è???  ?ú:
    336          **------------------------------------------------------------------------------------------------------
    337          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    338          void CardBoxConnectCountEvent(void)
    339          {
   \                     CardBoxConnectCountEvent: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB088             SUB      SP,SP,#+32
    340            INT8U ucData[32];
    341            INT8U ucType;
    342            INT8U ucBoxNums;
    343            INT8U ucSelected;
    344            INT8U i;  
    345            
    346            CPU_SR_ALLOC();
   \   00000006   0x2700             MOVS     R7,#+0
    347            
    348            ucType=DEV_TYPE();
   \   00000008   0x.... 0x....      BL       DEV_TYPE
   \   0000000C   0x0004             MOVS     R4,R0
    349            if(ucType==LARGE_THICK_OUT_TYPE || ucType==LARGE_THIN_OUT_TYPE){
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C04             CMP      R4,#+4
   \   00000012   0xD002             BEQ.N    ??CardBoxConnectCountEvent_0
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x2C0C             CMP      R4,#+12
   \   00000018   0xD102             BNE.N    ??CardBoxConnectCountEvent_1
    350              ucBoxNums=CARDMACHINE_CARDBOX_NUMS;
   \                     ??CardBoxConnectCountEvent_0: (+1)
   \   0000001A   0x2003             MOVS     R0,#+3
   \   0000001C   0x0005             MOVS     R5,R0
   \   0000001E   0xE001             B.N      ??CardBoxConnectCountEvent_2
    351            }else{
    352              ucBoxNums=1;
   \                     ??CardBoxConnectCountEvent_1: (+1)
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x0005             MOVS     R5,R0
    353            }
    354              
    355            ucSelected=g_ucBoxCurSelected;  
   \                     ??CardBoxConnectCountEvent_2: (+1)
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable16_2
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x4680             MOV      R8,R0
    356            for(i=0;i<ucBoxNums;i++){
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x0006             MOVS     R6,R0
   \                     ??CardBoxConnectCountEvent_3: (+1)
   \   00000030   0x0030             MOVS     R0,R6
   \   00000032   0x0029             MOVS     R1,R5
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000038   0x4288             CMP      R0,R1
   \   0000003A   0xF080 0x8194      BCS.W    ??CardBoxConnectCountEvent_4
    357              if(m_usrBoxInfo[ucSelected].usrFlag.usrBit.bBoxLoad){
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000042   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000046   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   0000004A   0x4408             ADD      R0,R0,R1
   \   0000004C   0x7B80             LDRB     R0,[R0, #+14]
   \   0000004E   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000052   0x2800             CMP      R0,#+0
   \   00000054   0xF000 0x817B      BEQ.W    ??CardBoxConnectCountEvent_5
    358                if(!CardBoxSetSelected(ucSelected,BOX_POWER_ON_MODE)){
   \   00000058   0x2101             MOVS     R1,#+1
   \   0000005A   0x4640             MOV      R0,R8
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x.... 0x....      BL       CardBoxSetSelected
   \   00000062   0x2800             CMP      R0,#+0
   \   00000064   0xD10A             BNE.N    ??CardBoxConnectCountEvent_6
    359                  ucSelected++;
   \   00000066   0xF118 0x0801      ADDS     R8,R8,#+1
    360                  if(ucSelected>=ucBoxNums){
   \   0000006A   0x4640             MOV      R0,R8
   \   0000006C   0x0029             MOVS     R1,R5
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000072   0x4288             CMP      R0,R1
   \   00000074   0xD301             BCC.N    ??CardBoxConnectCountEvent_7
    361                    ucSelected=0;
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x4680             MOV      R8,R0
    362                  }
    363                  continue;
   \                     ??CardBoxConnectCountEvent_7: (+1)
   \   0000007A   0xE172             B.N      ??CardBoxConnectCountEvent_8
    364                }
    365                //装载
    366                if(m_usrBoxInfo[ucSelected].ucTimes){
   \                     ??CardBoxConnectCountEvent_6: (+1)
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000080   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000084   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   00000088   0x4408             ADD      R0,R0,R1
   \   0000008A   0x7B00             LDRB     R0,[R0, #+12]
   \   0000008C   0x2800             CMP      R0,#+0
   \   0000008E   0xD01C             BEQ.N    ??CardBoxConnectCountEvent_9
    367                  m_usrBoxInfo[ucSelected].ucTimes--;
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000094   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000098   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   0000009C   0x4408             ADD      R0,R0,R1
   \   0000009E   0x7B00             LDRB     R0,[R0, #+12]
   \   000000A0   0x1E40             SUBS     R0,R0,#+1
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000A6   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000AA   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   000000AE   0x4411             ADD      R1,R1,R2
   \   000000B0   0x7308             STRB     R0,[R1, #+12]
    368                  
    369                  ucSelected++;
   \   000000B2   0xF118 0x0801      ADDS     R8,R8,#+1
    370                  if(ucSelected>=ucBoxNums){
   \   000000B6   0x4640             MOV      R0,R8
   \   000000B8   0x0029             MOVS     R1,R5
   \   000000BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000BC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000BE   0x4288             CMP      R0,R1
   \   000000C0   0xF0C0 0x814F      BCC.W    ??CardBoxConnectCountEvent_8
    371                    ucSelected=0;
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x4680             MOV      R8,R0
   \   000000C8   0xE14B             B.N      ??CardBoxConnectCountEvent_8
    372                  }
    373                }else{
    374                  //连接重试
    375                  if(m_usrBoxInfo[ucSelected].usrConnectResponse.ucRetrys>0){
   \                     ??CardBoxConnectCountEvent_9: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000CE   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000D2   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   000000D6   0x4408             ADD      R0,R0,R1
   \   000000D8   0x7F00             LDRB     R0,[R0, #+28]
   \   000000DA   0x2800             CMP      R0,#+0
   \   000000DC   0xD011             BEQ.N    ??CardBoxConnectCountEvent_10
    376                    m_usrBoxInfo[ucSelected].usrConnectResponse.ucRetrys--;
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000E2   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000E6   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   000000EA   0x4408             ADD      R0,R0,R1
   \   000000EC   0x7F00             LDRB     R0,[R0, #+28]
   \   000000EE   0x1E40             SUBS     R0,R0,#+1
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000F4   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000F8   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   000000FC   0x4411             ADD      R1,R1,R2
   \   000000FE   0x7708             STRB     R0,[R1, #+28]
   \   00000100   0xE015             B.N      ??CardBoxConnectCountEvent_11
    377                  }else{
    378                    CardBoxInfoReset(ucSelected);
   \                     ??CardBoxConnectCountEvent_10: (+1)
   \   00000102   0x4640             MOV      R0,R8
   \   00000104   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000106   0x.... 0x....      BL       CardBoxInfoReset
    379                    m_usrBoxInfo[ucSelected].usrFlag.usrBit.bCommErr=1;          
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   0000010E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000112   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   00000116   0x4408             ADD      R0,R0,R1
   \   00000118   0x7BC0             LDRB     R0,[R0, #+15]
   \   0000011A   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000122   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000126   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   0000012A   0x4411             ADD      R1,R1,R2
   \   0000012C   0x73C8             STRB     R0,[R1, #+15]
    380                  }
    381                  
    382                  if(m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums>0){
   \                     ??CardBoxConnectCountEvent_11: (+1)
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000132   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000136   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   0000013A   0x4408             ADD      R0,R0,R1
   \   0000013C   0x7F40             LDRB     R0,[R0, #+29]
   \   0000013E   0x2800             CMP      R0,#+0
   \   00000140   0xD010             BEQ.N    ??CardBoxConnectCountEvent_12
    383                    m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums--;
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000146   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000014A   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   0000014E   0x4408             ADD      R0,R0,R1
   \   00000150   0x7F40             LDRB     R0,[R0, #+29]
   \   00000152   0x1E40             SUBS     R0,R0,#+1
   \   00000154   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000158   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000015C   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   00000160   0x4411             ADD      R1,R1,R2
   \   00000162   0x7748             STRB     R0,[R1, #+29]
    384                  }
    385                  
    386                  if(!m_usrBoxInfo[ucSelected].usrFlag.usrBit.bConnected){
   \                     ??CardBoxConnectCountEvent_12: (+1)
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000168   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000016C   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   00000170   0x4408             ADD      R0,R0,R1
   \   00000172   0x7B80             LDRB     R0,[R0, #+14]
   \   00000174   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   00000178   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017A   0x2800             CMP      R0,#+0
   \   0000017C   0xD115             BNE.N    ??CardBoxConnectCountEvent_13
    387                    m_usrBoxInfo[ucSelected].usrFlag.usrBit.bSelftest=1;																							//×??ì
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000182   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000186   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   0000018A   0x4408             ADD      R0,R0,R1
   \   0000018C   0x7B80             LDRB     R0,[R0, #+14]
   \   0000018E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000196   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000019A   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   0000019E   0x4411             ADD      R1,R1,R2
   \   000001A0   0x7388             STRB     R0,[R1, #+14]
    388                    ucData[0]=0x40;
   \   000001A2   0x2040             MOVS     R0,#+64
   \   000001A4   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   000001A8   0xE060             B.N      ??CardBoxConnectCountEvent_14
    389                  }else{
    390                    ucData[0]=0x00;
   \                     ??CardBoxConnectCountEvent_13: (+1)
   \   000001AA   0x2000             MOVS     R0,#+0
   \   000001AC   0xF88D 0x0000      STRB     R0,[SP, #+0]
    391                    if(!m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums){
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000001B4   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001B8   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   000001BC   0x4408             ADD      R0,R0,R1
   \   000001BE   0x7F40             LDRB     R0,[R0, #+29]
   \   000001C0   0x2800             CMP      R0,#+0
   \   000001C2   0xD153             BNE.N    ??CardBoxConnectCountEvent_14
    392                      if(m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrRetrys){
   \   000001C4   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000001C8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001CC   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   000001D0   0x4408             ADD      R0,R0,R1
   \   000001D2   0x7F80             LDRB     R0,[R0, #+30]
   \   000001D4   0x2800             CMP      R0,#+0
   \   000001D6   0xD037             BEQ.N    ??CardBoxConnectCountEvent_15
    393                        m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrRetrys--;
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000001DC   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001E0   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   000001E4   0x4408             ADD      R0,R0,R1
   \   000001E6   0x7F80             LDRB     R0,[R0, #+30]
   \   000001E8   0x1E40             SUBS     R0,R0,#+1
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000001EE   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000001F2   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   000001F6   0x4411             ADD      R1,R1,R2
   \   000001F8   0x7788             STRB     R0,[R1, #+30]
    394                        if(m_usrBoxInfo[ucSelected].usrFlag.usrBit.bSelftest){					
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000001FE   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000202   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   00000206   0x4408             ADD      R0,R0,R1
   \   00000208   0x7B80             LDRB     R0,[R0, #+14]
   \   0000020A   0xF3C0 0x00C0      UBFX     R0,R0,#+3,#+1
   \   0000020E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000210   0x2800             CMP      R0,#+0
   \   00000212   0xD00C             BEQ.N    ??CardBoxConnectCountEvent_16
    395                          ucData[0]=0x40;
   \   00000214   0x2040             MOVS     R0,#+64
   \   00000216   0xF88D 0x0000      STRB     R0,[SP, #+0]
    396                          m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums=21;
   \   0000021A   0x2015             MOVS     R0,#+21
   \   0000021C   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000220   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000224   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   00000228   0x4411             ADD      R1,R1,R2
   \   0000022A   0x7748             STRB     R0,[R1, #+29]
   \   0000022C   0xE01E             B.N      ??CardBoxConnectCountEvent_14
    397                        }else{
    398                          m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums=CARDBOX_POS_ERR_NUMS;
   \                     ??CardBoxConnectCountEvent_16: (+1)
   \   0000022E   0x2008             MOVS     R0,#+8
   \   00000230   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000234   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000238   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   0000023C   0x4411             ADD      R1,R1,R2
   \   0000023E   0x7748             STRB     R0,[R1, #+29]
    399                          ucData[0]=0x80;
   \   00000240   0x2080             MOVS     R0,#+128
   \   00000242   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000246   0xE011             B.N      ??CardBoxConnectCountEvent_14
    400                        }
    401                      }else{
    402                        m_usrBoxInfo[ucSelected].usrFlag.usrBit.bPosErr=1;
   \                     ??CardBoxConnectCountEvent_15: (+1)
   \   00000248   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   0000024C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000250   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   00000254   0x4408             ADD      R0,R0,R1
   \   00000256   0x7BC0             LDRB     R0,[R0, #+15]
   \   00000258   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000025C   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000260   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000264   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   00000268   0x4411             ADD      R1,R1,R2
   \   0000026A   0x73C8             STRB     R0,[R1, #+15]
    403                      }
    404                    }
    405                  }			
    406                  if(!m_usrBoxInfo[ucSelected].usrFlag.usrBit.bSelftest && !m_usrBoxInfo[ucSelected].usrFlag.usrBit.bCardPos){					
   \                     ??CardBoxConnectCountEvent_14: (+1)
   \   0000026C   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000270   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000274   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   00000278   0x4408             ADD      R0,R0,R1
   \   0000027A   0x7B80             LDRB     R0,[R0, #+14]
   \   0000027C   0x2128             MOVS     R1,#+40
   \   0000027E   0x4208             TST      R0,R1
   \   00000280   0xD102             BNE.N    ??CardBoxConnectCountEvent_17
    407                    ucData[0]=0x80;
   \   00000282   0x2080             MOVS     R0,#+128
   \   00000284   0xF88D 0x0000      STRB     R0,[SP, #+0]
    408                  }
    409                  CardBoxBasicInfoSend(ucData[0],ucSelected);
   \                     ??CardBoxConnectCountEvent_17: (+1)
   \   00000288   0x4641             MOV      R1,R8
   \   0000028A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000028C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000290   0x.... 0x....      BL       CardBoxBasicInfoSend
    410                  
    411                  if(m_usrBoxInfo[ucSelected].usrCountResponse.ucEnabled){		
   \   00000294   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000298   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000029C   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   000002A0   0x4408             ADD      R0,R0,R1
   \   000002A2   0x7C00             LDRB     R0,[R0, #+16]
   \   000002A4   0x2800             CMP      R0,#+0
   \   000002A6   0xD047             BEQ.N    ??CardBoxConnectCountEvent_18
    412                    if(m_usrBoxInfo[ucSelected].usrCountResponse.ulMachineId==m_usrBoxInfo[ucSelected].ulMachineId){		
   \   000002A8   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000002AC   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002B0   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   000002B4   0x4408             ADD      R0,R0,R1
   \   000002B6   0x6940             LDR      R0,[R0, #+20]
   \   000002B8   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000002BC   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002C0   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   000002C4   0x4411             ADD      R1,R1,R2
   \   000002C6   0x6849             LDR      R1,[R1, #+4]
   \   000002C8   0x4288             CMP      R0,R1
   \   000002CA   0xD131             BNE.N    ??CardBoxConnectCountEvent_19
    413                      OS_ENTER_CRITICAL();
   \   000002CC   0x.... 0x....      BL       CPU_SR_Save
   \   000002D0   0x0007             MOVS     R7,R0
   \   000002D2   0x.... 0x....      BL       CPU_IntDisMeasStart
    414                      if(m_usrBoxInfo[ucSelected].usrCountResponse.ucRetrys>0){
   \   000002D6   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000002DA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002DE   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   000002E2   0x4408             ADD      R0,R0,R1
   \   000002E4   0x7E80             LDRB     R0,[R0, #+26]
   \   000002E6   0x2800             CMP      R0,#+0
   \   000002E8   0xD011             BEQ.N    ??CardBoxConnectCountEvent_20
    415                        m_usrBoxInfo[ucSelected].usrCountResponse.ucRetrys--;
   \   000002EA   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000002EE   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002F2   0xEA5F 0x1148      LSLS     R1,R8,#+5
   \   000002F6   0x4408             ADD      R0,R0,R1
   \   000002F8   0x7E80             LDRB     R0,[R0, #+26]
   \   000002FA   0x1E40             SUBS     R0,R0,#+1
   \   000002FC   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000300   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000304   0xEA5F 0x1248      LSLS     R2,R8,#+5
   \   00000308   0x4411             ADD      R1,R1,R2
   \   0000030A   0x7688             STRB     R0,[R1, #+26]
   \   0000030C   0xE005             B.N      ??CardBoxConnectCountEvent_21
    416                      }else{
    417                        BuzzSet(7,30,15,BUZZ_COUNT_WRITE_ERR_PRIOR);
   \                     ??CardBoxConnectCountEvent_20: (+1)
   \   0000030E   0x2314             MOVS     R3,#+20
   \   00000310   0x220F             MOVS     R2,#+15
   \   00000312   0x211E             MOVS     R1,#+30
   \   00000314   0x2007             MOVS     R0,#+7
   \   00000316   0x.... 0x....      BL       BuzzSet
    418                      }
    419                      OS_EXIT_CRITICAL();
   \                     ??CardBoxConnectCountEvent_21: (+1)
   \   0000031A   0x.... 0x....      BL       CPU_IntDisMeasStop
   \   0000031E   0x0038             MOVS     R0,R7
   \   00000320   0x.... 0x....      BL       CPU_SR_Restore
    420                      CardCountUpdateSend(1,ucSelected);
   \   00000324   0x4641             MOV      R1,R8
   \   00000326   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000328   0x2001             MOVS     R0,#+1
   \   0000032A   0x.... 0x....      BL       CardCountUpdateSend
   \   0000032E   0xE003             B.N      ??CardBoxConnectCountEvent_18
    421                    }else{
    422                      CardBoxCountReset(ucSelected);
   \                     ??CardBoxConnectCountEvent_19: (+1)
   \   00000330   0x4640             MOV      R0,R8
   \   00000332   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000334   0x.... 0x....      BL       CardBoxCountReset
    423                    }
    424                  }
    425                  ucSelected++;
   \                     ??CardBoxConnectCountEvent_18: (+1)
   \   00000338   0xF118 0x0801      ADDS     R8,R8,#+1
    426                  if(ucSelected>=ucBoxNums){
   \   0000033C   0x4640             MOV      R0,R8
   \   0000033E   0x0029             MOVS     R1,R5
   \   00000340   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000342   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000344   0x4288             CMP      R0,R1
   \   00000346   0xD301             BCC.N    ??CardBoxConnectCountEvent_22
    427                    ucSelected=0;
   \   00000348   0x2000             MOVS     R0,#+0
   \   0000034A   0x4680             MOV      R8,R0
    428                  }
    429                  break;
   \                     ??CardBoxConnectCountEvent_22: (+1)
   \   0000034C   0xE00B             B.N      ??CardBoxConnectCountEvent_4
    430                }
    431              }else{
    432                ucSelected++;
   \                     ??CardBoxConnectCountEvent_5: (+1)
   \   0000034E   0xF118 0x0801      ADDS     R8,R8,#+1
    433                if(ucSelected>=ucBoxNums){
   \   00000352   0x4640             MOV      R0,R8
   \   00000354   0x0029             MOVS     R1,R5
   \   00000356   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000358   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000035A   0x4288             CMP      R0,R1
   \   0000035C   0xD301             BCC.N    ??CardBoxConnectCountEvent_8
    434                  ucSelected=0;
   \   0000035E   0x2000             MOVS     R0,#+0
   \   00000360   0x4680             MOV      R8,R0
    435                }
    436              }
    437            }  
   \                     ??CardBoxConnectCountEvent_8: (+1)
   \   00000362   0x1C76             ADDS     R6,R6,#+1
   \   00000364   0xE664             B.N      ??CardBoxConnectCountEvent_3
    438            g_ucBoxCurSelected=ucSelected;
   \                     ??CardBoxConnectCountEvent_4: (+1)
   \   00000366   0x.... 0x....      LDR.W    R0,??DataTable16_2
   \   0000036A   0xF880 0x8000      STRB     R8,[R0, #+0]
    439          }
   \   0000036E   0xB008             ADD      SP,SP,#+32
   \   00000370   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    440          
    441          /********************************************************************************************************
    442          ** 函数名称: BoxConnected
    443          ** 功能描述:
    444          ** 输 　 入:
    445          **
    446          ** 输　  出:
    447          **
    448          ** 全局变量:
    449          ** 调用模块:
    450          **
    451          ** 作　  者: John Tonny
    452          ** 日　  期: 2005年05月01日
    453          **------------------------------------------------------------------------------------------------------
    454          ** 修 改 人:
    455          ** 日　  期:
    456          **------------------------------------------------------------------------------------------------------
    457          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    458          void BoxConnected(INT8U ucSelected)
    459          {
   \                     BoxConnected: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB08C             SUB      SP,SP,#+48
   \   00000004   0x0004             MOVS     R4,R0
    460            INT8U ucData[32];
    461            INT8U ucMsg;
    462            
    463            if(!m_usrBoxInfo[ucSelected].usrFlag.usrBit.bConnected){
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   0000000A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000C   0x0161             LSLS     R1,R4,#+5
   \   0000000E   0x4408             ADD      R0,R0,R1
   \   00000010   0x7B80             LDRB     R0,[R0, #+14]
   \   00000012   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD139             BNE.N    ??BoxConnected_0
    464              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bConnected=1;
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x0161             LSLS     R1,R4,#+5
   \   00000024   0x4408             ADD      R0,R0,R1
   \   00000026   0x7B80             LDRB     R0,[R0, #+14]
   \   00000028   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x0162             LSLS     R2,R4,#+5
   \   00000034   0x4411             ADD      R1,R1,R2
   \   00000036   0x7388             STRB     R0,[R1, #+14]
    465                  
    466              ucMsg=BOX_CONNECTING_MSG;
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0xF88D 0x0008      STRB     R0,[SP, #+8]
    467          
    468              BoxPostMsg(&ucMsg,1);
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0xA802             ADD      R0,SP,#+8
   \   00000042   0x.... 0x....      BL       BoxPostMsg
    469              
    470              ucData[0]=ucSelected+0x30;
   \   00000046   0xF114 0x0030      ADDS     R0,R4,#+48
   \   0000004A   0xF88D 0x000C      STRB     R0,[SP, #+12]
    471              SprintF(&ucData[1],4,m_usrBoxInfo[ucSelected].ucCounts);
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000052   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000054   0x0161             LSLS     R1,R4,#+5
   \   00000056   0x5C42             LDRB     R2,[R0, R1]
   \   00000058   0x2104             MOVS     R1,#+4
   \   0000005A   0xF10D 0x000D      ADD      R0,SP,#+13
   \   0000005E   0x.... 0x....      BL       SprintF
    472            #if COUNT_ID_EN==0          
    473              Uart0Pack(INFTYPE_CARD_COUNT,m_ucMachineAddr,0,ucData,5,1);
    474            #else
    475              SprintF(&ucData[5],8,m_usrBoxInfo[ucSelected].ulMachineId);
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0x0161             LSLS     R1,R4,#+5
   \   0000006A   0x4408             ADD      R0,R0,R1
   \   0000006C   0x6842             LDR      R2,[R0, #+4]
   \   0000006E   0x2108             MOVS     R1,#+8
   \   00000070   0xF10D 0x0011      ADD      R0,SP,#+17
   \   00000074   0x.... 0x....      BL       SprintF
    476              Uart0Pack(INFTYPE_CARD_COUNT,m_ucMachineAddr,0,ucData,13,1);
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0x9001             STR      R0,[SP, #+4]
   \   0000007C   0x200D             MOVS     R0,#+13
   \   0000007E   0x9000             STR      R0,[SP, #+0]
   \   00000080   0xAB03             ADD      R3,SP,#+12
   \   00000082   0x2200             MOVS     R2,#+0
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable16_3
   \   00000088   0x7801             LDRB     R1,[R0, #+0]
   \   0000008A   0x2062             MOVS     R0,#+98
   \   0000008C   0x.... 0x....      BL       Uart0Pack
    477            #endif          
    478            }
    479          }
   \                     ??BoxConnected_0: (+1)
   \   00000090   0xB00C             ADD      SP,SP,#+48
   \   00000092   0xBD10             POP      {R4,PC}          ;; return
    480          
    481                   
    482          /********************************************************************************************************
    483          ** oˉêy??3?: CardBoxBasicInfoSend
    484          ** 1|?ü?èê?:
    485          ** ê? ?? è?:
    486          **
    487          ** ê???  3?:
    488          **
    489          ** è???±?á?:
    490          ** μ÷ó??￡?é:
    491          **
    492          ** ×÷??  ??: John Tonny
    493          ** è???  ?ú: 2005?ê05??01è?
    494          **------------------------------------------------------------------------------------------------------
    495          ** DT ?? è?:
    496          ** è???  ?ú:
    497          **------------------------------------------------------------------------------------------------------
    498          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    499          void CardBoxBasicInfoSend(INT8U ucMode,INT8U ucSelected)
    500          {
   \                     CardBoxBasicInfoSend: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    501            INT8U ucData[8];
    502            INT8U ucType=DEV_TYPE();
   \   00000008   0x.... 0x....      BL       DEV_TYPE
   \   0000000C   0x0006             MOVS     R6,R0
    503            
    504            if(ucType==SMALL_THICK_IN_TYPE || ucType==SMALL_THICK_GIN_TYPE || ucType==SMALL_THIN_IN_TYPE || ucType==SMALL_THIN_GIN_TYPE){
   \   0000000E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000010   0x2E01             CMP      R6,#+1
   \   00000012   0xD008             BEQ.N    ??CardBoxBasicInfoSend_0
   \   00000014   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000016   0x2E03             CMP      R6,#+3
   \   00000018   0xD005             BEQ.N    ??CardBoxBasicInfoSend_0
   \   0000001A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000001C   0x2E09             CMP      R6,#+9
   \   0000001E   0xD002             BEQ.N    ??CardBoxBasicInfoSend_0
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2E0B             CMP      R6,#+11
   \   00000024   0xD103             BNE.N    ??CardBoxBasicInfoSend_1
    505              ucData[0]=CARDMACHINE_SMALL_IN_TYPE;
   \                     ??CardBoxBasicInfoSend_0: (+1)
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   0000002C   0xE00E             B.N      ??CardBoxBasicInfoSend_2
    506            }else if(ucType==SMALL_THICK_OUT_TYPE || ucType==LARGE_THICK_OUT_TYPE || ucType==SMALL_THIN_OUT_TYPE || ucType==LARGE_THIN_OUT_TYPE){
   \                     ??CardBoxBasicInfoSend_1: (+1)
   \   0000002E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000030   0x2E00             CMP      R6,#+0
   \   00000032   0xD008             BEQ.N    ??CardBoxBasicInfoSend_3
   \   00000034   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000036   0x2E04             CMP      R6,#+4
   \   00000038   0xD005             BEQ.N    ??CardBoxBasicInfoSend_3
   \   0000003A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000003C   0x2E08             CMP      R6,#+8
   \   0000003E   0xD002             BEQ.N    ??CardBoxBasicInfoSend_3
   \   00000040   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000042   0x2E0C             CMP      R6,#+12
   \   00000044   0xD102             BNE.N    ??CardBoxBasicInfoSend_2
    507              ucData[0]=CARDMACHINE_SMALL_OUT_TYPE;
   \                     ??CardBoxBasicInfoSend_3: (+1)
   \   00000046   0x2002             MOVS     R0,#+2
   \   00000048   0xF88D 0x0004      STRB     R0,[SP, #+4]
    508            }
    509            ucData[0]|=ucMode;
   \                     ??CardBoxBasicInfoSend_2: (+1)
   \   0000004C   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   00000050   0x4320             ORRS     R0,R4,R0
   \   00000052   0xF88D 0x0004      STRB     R0,[SP, #+4]
    510            if(m_usrBoxInfo[ucSelected].usrFlag.usrBit.bPosErr){
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   0000005A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005C   0x0169             LSLS     R1,R5,#+5
   \   0000005E   0x4408             ADD      R0,R0,R1
   \   00000060   0x7BC0             LDRB     R0,[R0, #+15]
   \   00000062   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   00000066   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD005             BEQ.N    ??CardBoxBasicInfoSend_4
    511              ucData[0]&=0x3F;
   \   0000006C   0xF89D 0x0004      LDRB     R0,[SP, #+4]
   \   00000070   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   00000074   0xF88D 0x0004      STRB     R0,[SP, #+4]
    512            }
    513          
    514            if(m_ucCardBoxTxSeq==0x80){
   \                     ??CardBoxBasicInfoSend_4: (+1)
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable16_4
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0x2880             CMP      R0,#+128
   \   00000080   0xD103             BNE.N    ??CardBoxBasicInfoSend_5
    515              m_ucCardBoxTxSeq=0x0F;
   \   00000082   0x200F             MOVS     R0,#+15
   \   00000084   0x.... 0x....      LDR.W    R1,??DataTable16_4
   \   00000088   0x7008             STRB     R0,[R1, #+0]
    516            }
    517            m_ucCardBoxTxSeq++;
   \                     ??CardBoxBasicInfoSend_5: (+1)
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable16_4
   \   0000008E   0x7800             LDRB     R0,[R0, #+0]
   \   00000090   0x1C40             ADDS     R0,R0,#+1
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable16_4
   \   00000096   0x7008             STRB     R0,[R1, #+0]
    518            ucData[1]=m_ucCardBoxTxSeq;
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable16_4
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0xF88D 0x0005      STRB     R0,[SP, #+5]
    519          
    520            UartPack(CARDMACHINE_READ_BASIC_INFO_CMD,UART_RESPONSE_MODE,0x02,ucData,ucSelected);	
   \   000000A2   0x0028             MOVS     R0,R5
   \   000000A4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A6   0x9000             STR      R0,[SP, #+0]
   \   000000A8   0xAB01             ADD      R3,SP,#+4
   \   000000AA   0x2202             MOVS     R2,#+2
   \   000000AC   0x2140             MOVS     R1,#+64
   \   000000AE   0x200A             MOVS     R0,#+10
   \   000000B0   0x.... 0x....      BL       UartPack
    521            UartPack(CARDMACHINE_READ_BASIC_INFO_CMD,UART_RESPONSE_MODE,0x02,ucData,ucSelected);	
   \   000000B4   0x0028             MOVS     R0,R5
   \   000000B6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B8   0x9000             STR      R0,[SP, #+0]
   \   000000BA   0xAB01             ADD      R3,SP,#+4
   \   000000BC   0x2202             MOVS     R2,#+2
   \   000000BE   0x2140             MOVS     R1,#+64
   \   000000C0   0x200A             MOVS     R0,#+10
   \   000000C2   0x.... 0x....      BL       UartPack
    522          }
   \   000000C6   0xBD7F             POP      {R0-R6,PC}       ;; return
    523                   
    524          /********************************************************************************************************
    525          ** oˉêy??3?: CardCountUpdateSend
    526          ** 1|?ü?èê?:
    527          ** ê? ?? è?:
    528          **
    529          ** ê???  3?:
    530          **
    531          ** è???±?á?:
    532          ** μ÷ó??￡?é:
    533          **
    534          ** ×÷??  ??: John Tonny
    535          ** è???  ?ú: 2005?ê05??01è?
    536          **------------------------------------------------------------------------------------------------------
    537          ** DT ?? è?:
    538          ** è???  ?ú:
    539          **------------------------------------------------------------------------------------------------------
    540          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    541          void CardCountUpdateSend(INT8U ucMode,INT8U ucSelected)
    542          {
   \                     CardCountUpdateSend: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB08A             SUB      SP,SP,#+40
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    543            INT8U ucData[32];
    544            INT8U ucType=DEV_TYPE();
   \   00000008   0x.... 0x....      BL       DEV_TYPE
   \   0000000C   0x0006             MOVS     R6,R0
    545            INT8U ucCmd;
    546          	
    547            ucCmd=DISPLAY_WRITING_MSG;
   \   0000000E   0x2002             MOVS     R0,#+2
   \   00000010   0xF88D 0x0004      STRB     R0,[SP, #+4]
    548            Box_TaskLcdQPost(&App_TaskLcdTCB,&ucCmd,1);
   \   00000014   0x2201             MOVS     R2,#+1
   \   00000016   0xA901             ADD      R1,SP,#+4
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable16_5
   \   0000001C   0x.... 0x....      BL       Box_TaskLcdQPost
    549              
    550            if(ucType==SMALL_THICK_IN_TYPE || ucType==SMALL_THICK_GIN_TYPE || ucType==SMALL_THIN_IN_TYPE || ucType==SMALL_THIN_GIN_TYPE){
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2E01             CMP      R6,#+1
   \   00000024   0xD008             BEQ.N    ??CardCountUpdateSend_0
   \   00000026   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000028   0x2E03             CMP      R6,#+3
   \   0000002A   0xD005             BEQ.N    ??CardCountUpdateSend_0
   \   0000002C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002E   0x2E09             CMP      R6,#+9
   \   00000030   0xD002             BEQ.N    ??CardCountUpdateSend_0
   \   00000032   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000034   0x2E0B             CMP      R6,#+11
   \   00000036   0xD122             BNE.N    ??CardCountUpdateSend_1
    551              //收卡
    552              if(!ucMode){
   \                     ??CardCountUpdateSend_0: (+1)
   \   00000038   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003A   0x2C00             CMP      R4,#+0
   \   0000003C   0xD13D             BNE.N    ??CardCountUpdateSend_2
    553                if(m_usrBoxInfo[BOX_FIRST].ucCounts>=m_usrBoxInfo[BOX_FIRST].ucMaxCounts-1){
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000042   0x7800             LDRB     R0,[R0, #+0]
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000048   0x7849             LDRB     R1,[R1, #+1]
   \   0000004A   0x1E49             SUBS     R1,R1,#+1
   \   0000004C   0x4288             CMP      R0,R1
   \   0000004E   0xDB06             BLT.N    ??CardCountUpdateSend_3
    554                  BuzzSet(4,50,50,BUZZ_SK_FULL_PRIOR);
   \   00000050   0x230A             MOVS     R3,#+10
   \   00000052   0x2232             MOVS     R2,#+50
   \   00000054   0x2132             MOVS     R1,#+50
   \   00000056   0x2004             MOVS     R0,#+4
   \   00000058   0x.... 0x....      BL       BuzzSet
   \   0000005C   0xE02D             B.N      ??CardCountUpdateSend_2
    555                }else if(m_usrBoxInfo[BOX_FIRST].ucCounts>m_usrBoxInfo[BOX_FIRST].ucAlarmMax-1){
   \                     ??CardCountUpdateSend_3: (+1)
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000062   0x7A00             LDRB     R0,[R0, #+8]
   \   00000064   0x1E40             SUBS     R0,R0,#+1
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   0000006A   0x7809             LDRB     R1,[R1, #+0]
   \   0000006C   0x4288             CMP      R0,R1
   \   0000006E   0xDA24             BGE.N    ??CardCountUpdateSend_2
    556                  BuzzSet(2,50,50,BUZZ_SK_MAX_PRIOR);
   \   00000070   0x2309             MOVS     R3,#+9
   \   00000072   0x2232             MOVS     R2,#+50
   \   00000074   0x2132             MOVS     R1,#+50
   \   00000076   0x2002             MOVS     R0,#+2
   \   00000078   0x.... 0x....      BL       BuzzSet
   \   0000007C   0xE01D             B.N      ??CardCountUpdateSend_2
    557                }
    558              }
    559            }else{
    560              //发卡
    561              if(!ucMode){
   \                     ??CardCountUpdateSend_1: (+1)
   \   0000007E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000080   0x2C00             CMP      R4,#+0
   \   00000082   0xD11A             BNE.N    ??CardCountUpdateSend_2
    562                if(m_usrBoxInfo[BOX_FIRST].ucCounts==1){
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   00000088   0x7800             LDRB     R0,[R0, #+0]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD106             BNE.N    ??CardCountUpdateSend_4
    563                  BuzzSet(4,50,50,BUZZ_FK_ZERO_PRIOR);
   \   0000008E   0x230A             MOVS     R3,#+10
   \   00000090   0x2232             MOVS     R2,#+50
   \   00000092   0x2132             MOVS     R1,#+50
   \   00000094   0x2004             MOVS     R0,#+4
   \   00000096   0x.... 0x....      BL       BuzzSet
   \   0000009A   0xE00E             B.N      ??CardCountUpdateSend_2
    564                }else if(m_usrBoxInfo[BOX_FIRST].ucCounts<=m_usrBoxInfo[BOX_FIRST].ucAlarmMin+1){
   \                     ??CardCountUpdateSend_4: (+1)
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000A0   0x7A40             LDRB     R0,[R0, #+9]
   \   000000A2   0x1C40             ADDS     R0,R0,#+1
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000A8   0x7809             LDRB     R1,[R1, #+0]
   \   000000AA   0x4288             CMP      R0,R1
   \   000000AC   0xDB05             BLT.N    ??CardCountUpdateSend_2
    565                  BuzzSet(2,50,50,BUZZ_FK_MIN_PRIOR);
   \   000000AE   0x2309             MOVS     R3,#+9
   \   000000B0   0x2232             MOVS     R2,#+50
   \   000000B2   0x2132             MOVS     R1,#+50
   \   000000B4   0x2002             MOVS     R0,#+2
   \   000000B6   0x.... 0x....      BL       BuzzSet
    566                }
    567              }
    568            }
    569                    
    570            if(m_ucCardBoxTxSeq==0x80){
   \                     ??CardCountUpdateSend_2: (+1)
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable16_4
   \   000000BE   0x7800             LDRB     R0,[R0, #+0]
   \   000000C0   0x2880             CMP      R0,#+128
   \   000000C2   0xD103             BNE.N    ??CardCountUpdateSend_5
    571              m_ucCardBoxTxSeq=0x0F;
   \   000000C4   0x200F             MOVS     R0,#+15
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable16_4
   \   000000CA   0x7008             STRB     R0,[R1, #+0]
    572            }
    573            m_ucCardBoxTxSeq++;
   \                     ??CardCountUpdateSend_5: (+1)
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable16_4
   \   000000D0   0x7800             LDRB     R0,[R0, #+0]
   \   000000D2   0x1C40             ADDS     R0,R0,#+1
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable16_4
   \   000000D8   0x7008             STRB     R0,[R1, #+0]
    574            m_usrBoxInfo[ucSelected].usrCountResponse.ucEnabled=1;
   \   000000DA   0x2001             MOVS     R0,#+1
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000E0   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000E2   0x016A             LSLS     R2,R5,#+5
   \   000000E4   0x4411             ADD      R1,R1,R2
   \   000000E6   0x7408             STRB     R0,[R1, #+16]
    575          #if BOARD_OLD_EN==0  
    576            ucData[0]=m_usrBoxInfo[ucSelected].usrCountResponse.ucNewCount;
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable16_1
   \   000000EC   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000EE   0x0169             LSLS     R1,R5,#+5
   \   000000F0   0x4408             ADD      R0,R0,R1
   \   000000F2   0x7E40             LDRB     R0,[R0, #+25]
   \   000000F4   0xF88D 0x0008      STRB     R0,[SP, #+8]
    577            ucData[1]=0x00;
   \   000000F8   0x2000             MOVS     R0,#+0
   \   000000FA   0xF88D 0x0009      STRB     R0,[SP, #+9]
    578            ucData[2]=m_ucCardBoxTxSeq;
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable16_4
   \   00000102   0x7800             LDRB     R0,[R0, #+0]
   \   00000104   0xF88D 0x000A      STRB     R0,[SP, #+10]
    579            UartPack(UART_COUNT_SET_WRITE,UART_RESPONSE_MODE,3,ucData,ucSelected);
   \   00000108   0x0028             MOVS     R0,R5
   \   0000010A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000010C   0x9000             STR      R0,[SP, #+0]
   \   0000010E   0xAB02             ADD      R3,SP,#+8
   \   00000110   0x2203             MOVS     R2,#+3
   \   00000112   0x2140             MOVS     R1,#+64
   \   00000114   0x20EA             MOVS     R0,#+234
   \   00000116   0x.... 0x....      BL       UartPack
    580            UartPack(UART_COUNT_SET_WRITE,UART_RESPONSE_MODE,3,ucData,ucSelected);
   \   0000011A   0x0028             MOVS     R0,R5
   \   0000011C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011E   0x9000             STR      R0,[SP, #+0]
   \   00000120   0xAB02             ADD      R3,SP,#+8
   \   00000122   0x2203             MOVS     R2,#+3
   \   00000124   0x2140             MOVS     R1,#+64
   \   00000126   0x20EA             MOVS     R0,#+234
   \   00000128   0x.... 0x....      BL       UartPack
    581          #else
    582            ucData[0]=BOX_UART_SEND_MSG;
    583            ucData[1]=UART_COUNT_SUB_CMD;
    584            ucData[2]=UART_RESPONSE_MODE;
    585            ucData[3]=ucSelected;
    586            
    587            ucData[4]=m_usrBoxInfo[ucSelected].usrCountResponse.ucNewCount;
    588            ucData[5]=0x00;
    589            ucData[6]=m_ucCardBoxTxSeq;
    590            BoxPostMsg(ucData,7);
    591          #endif  
    592          }       
   \   0000012C   0xB00A             ADD      SP,SP,#+40
   \   0000012E   0xBD70             POP      {R4-R6,PC}       ;; return
    593          
    594          
    595          /********************************************************************************************************
    596          ** oˉêy??3?: BoxMotoMoveDown
    597          ** 1|?ü?èê?:
    598          ** ê? ?? è?:
    599          **
    600          ** ê???  3?:
    601          **
    602          ** è???±?á?:
    603          ** μ÷ó??￡?é:
    604          **
    605          ** ×÷??  ??: John Tonny
    606          ** è???  ?ú: 2005?ê05??01è?
    607          **------------------------------------------------------------------------------------------------------
    608          ** DT ?? è?:
    609          ** è???  ?ú:
    610          **------------------------------------------------------------------------------------------------------
    611          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    612          void BoxMotoMoveDown(INT16U uiCount,INT8U ucSelected)
    613          {
   \                     BoxMotoMoveDown: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    614            INT8U ucData[32];
    615            
    616            if(ucSelected>=CARDMACHINE_CARDBOX_NUMS){
   \   00000008   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000A   0x2D03             CMP      R5,#+3
   \   0000000C   0xDA18             BGE.N    ??BoxMotoMoveDown_0
    617              return;
    618            }	
    619          
    620          #if BOARD_OLD_NE==0  
    621            ucData[0]=(INT8U)(uiCount&0xFF);
   \                     ??BoxMotoMoveDown_1: (+1)
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xF88D 0x0004      STRB     R0,[SP, #+4]
    622            ucData[1]=(INT8U)(uiCount>>8);
   \   00000014   0x0020             MOVS     R0,R4
   \   00000016   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000018   0x0A00             LSRS     R0,R0,#+8
   \   0000001A   0xF88D 0x0005      STRB     R0,[SP, #+5]
    623            ucData[2]=1;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xF88D 0x0006      STRB     R0,[SP, #+6]
    624            ucData[3]=m_ucCardBoxTxSeq;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable16_4
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0xF88D 0x0007      STRB     R0,[SP, #+7]
    625            
    626            UartPack(CARDMACHINE_CLOSE_DOOR_CMD,UART_RESPONSE_MODE,4,ucData,ucSelected);
   \   0000002E   0x0028             MOVS     R0,R5
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x9000             STR      R0,[SP, #+0]
   \   00000034   0xAB01             ADD      R3,SP,#+4
   \   00000036   0x2204             MOVS     R2,#+4
   \   00000038   0x2140             MOVS     R1,#+64
   \   0000003A   0x2011             MOVS     R0,#+17
   \   0000003C   0x.... 0x....      BL       UartPack
    627          #else
    628            ucData[0]=BOX_UART_SEND_MSG;
    629            ucData[1]=CARDMACHINE_CLOSE_DOOR_CMD;
    630            ucData[2]=UART_RESPONSE_MODE;
    631            ucData[3]=ucSelected;
    632            
    633            ucData[4]=(INT8U)(uiCount&0xFF);
    634            ucData[5]=(INT8U)(uiCount>>8);
    635            ucData[6]=1;
    636            ucData[7]=m_ucCardBoxTxSeq;
    637            
    638            BoxPostMsg(ucData,8);
    639          #endif  
    640          }
   \                     ??BoxMotoMoveDown_0: (+1)
   \   00000040   0xB009             ADD      SP,SP,#+36
   \   00000042   0xBD30             POP      {R4,R5,PC}       ;; return
    641          
    642          
    643          /********************************************************************************************************
    644          ** oˉêy??3?: CardBoxPosReset
    645          ** 1|?ü?èê?:
    646          ** ê? ?? è?:
    647          **
    648          ** ê???  3?:
    649          **
    650          ** è???±?á?:
    651          ** μ÷ó??￡?é:
    652          **
    653          ** ×÷??  ??: John Tonny
    654          ** è???  ?ú: 2005?ê05??01è?
    655          **------------------------------------------------------------------------------------------------------
    656          ** DT ?? è?:
    657          ** è???  ?ú:
    658          **------------------------------------------------------------------------------------------------------
    659          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    660          void CardBoxInfoReset(INT8U ucSelected)
    661          {		
    662            if(ucSelected>=CARDMACHINE_CARDBOX_NUMS){
   \                     CardBoxInfoReset: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0x2803             CMP      R0,#+3
   \   00000004   0xDA59             BGE.N    ??CardBoxInfoReset_0
    663              return;
    664            }
    665              
    666            m_usrBoxInfo[ucSelected].ucCounts=0;
   \                     ??CardBoxInfoReset_1: (+1)
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x0143             LSLS     R3,R0,#+5
   \   00000010   0x54D1             STRB     R1,[R2, R3]
    667            m_usrBoxInfo[ucSelected].ucMaxCounts=0;
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000018   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001A   0x0143             LSLS     R3,R0,#+5
   \   0000001C   0x441A             ADD      R2,R2,R3
   \   0000001E   0x7051             STRB     R1,[R2, #+1]
    668            m_usrBoxInfo[ucSelected].ulMachineId=0;
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x0143             LSLS     R3,R0,#+5
   \   0000002A   0x441A             ADD      R2,R2,R3
   \   0000002C   0x6051             STR      R1,[R2, #+4]
    669            m_usrBoxInfo[ucSelected].ucAlarmMax=0;	
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000034   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000036   0x0143             LSLS     R3,R0,#+5
   \   00000038   0x441A             ADD      R2,R2,R3
   \   0000003A   0x7211             STRB     R1,[R2, #+8]
    670            m_usrBoxInfo[ucSelected].ucAlarmMin=0;
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x0143             LSLS     R3,R0,#+5
   \   00000046   0x441A             ADD      R2,R2,R3
   \   00000048   0x7251             STRB     R1,[R2, #+9]
    671          
    672            m_usrBoxInfo[ucSelected].usrFlag.usrBit.bConnected=0;
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   0000004E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000050   0x0142             LSLS     R2,R0,#+5
   \   00000052   0x4411             ADD      R1,R1,R2
   \   00000054   0x7B89             LDRB     R1,[R1, #+14]
   \   00000056   0xF011 0x01FB      ANDS     R1,R1,#0xFB
   \   0000005A   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   0000005E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000060   0x0143             LSLS     R3,R0,#+5
   \   00000062   0x441A             ADD      R2,R2,R3
   \   00000064   0x7391             STRB     R1,[R2, #+14]
    673            m_usrBoxInfo[ucSelected].usrFlag.usrBit.bSelftest=0;
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0x0142             LSLS     R2,R0,#+5
   \   0000006E   0x4411             ADD      R1,R1,R2
   \   00000070   0x7B89             LDRB     R1,[R1, #+14]
   \   00000072   0xF011 0x01F7      ANDS     R1,R1,#0xF7
   \   00000076   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   0000007A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007C   0x0143             LSLS     R3,R0,#+5
   \   0000007E   0x441A             ADD      R2,R2,R3
   \   00000080   0x7391             STRB     R1,[R2, #+14]
    674            m_usrBoxInfo[ucSelected].usrFlag.usrBit.bCountWrited=0;
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   00000086   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000088   0x0142             LSLS     R2,R0,#+5
   \   0000008A   0x4411             ADD      R1,R1,R2
   \   0000008C   0x7B89             LDRB     R1,[R1, #+14]
   \   0000008E   0xF011 0x01EF      ANDS     R1,R1,#0xEF
   \   00000092   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x0143             LSLS     R3,R0,#+5
   \   0000009A   0x441A             ADD      R2,R2,R3
   \   0000009C   0x7391             STRB     R1,[R2, #+14]
    675            m_usrBoxInfo[ucSelected].usrFlag.usrBit.bCardPos=0;
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable16_1
   \   000000A2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000A4   0x0142             LSLS     R2,R0,#+5
   \   000000A6   0x4411             ADD      R1,R1,R2
   \   000000A8   0x7B89             LDRB     R1,[R1, #+14]
   \   000000AA   0xF011 0x01DF      ANDS     R1,R1,#0xDF
   \   000000AE   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   000000B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B4   0x0143             LSLS     R3,R0,#+5
   \   000000B6   0x441A             ADD      R2,R2,R3
   \   000000B8   0x7391             STRB     R1,[R2, #+14]
    676          }
   \                     ??CardBoxInfoReset_0: (+1)
   \   000000BA   0x4770             BX       LR               ;; return
    677          
    678          
    679          /********************************************************************************************************
    680          ** 函数名称: CardBoxConnectReset
    681          ** 功能描述:
    682          ** 输 　 入:
    683          **
    684          ** 输　  出:
    685          **
    686          ** 全局变量:
    687          ** 调用模块:
    688          **
    689          ** 作　  者: John Tonny
    690          ** 日　  期: 2005年05月01日
    691          **------------------------------------------------------------------------------------------------------
    692          ** 修 改 人:
    693          ** 日　  期:
    694          **------------------------------------------------------------------------------------------------------
    695          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    696          void CardBoxConnectReset(INT8U ucSelected)
    697          {
    698            m_usrBoxInfo[ucSelected].usrConnectResponse.ucRetrys=5;	
   \                     CardBoxConnectReset: (+1)
   \   00000000   0x2105             MOVS     R1,#+5
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x0143             LSLS     R3,R0,#+5
   \   0000000A   0x441A             ADD      R2,R2,R3
   \   0000000C   0x7711             STRB     R1,[R2, #+28]
    699          }
   \   0000000E   0x4770             BX       LR               ;; return
    700          
    701          /********************************************************************************************************
    702          ** 函数名称: CardBoxCountReset
    703          ** 功能描述:
    704          ** 输 　 入:
    705          **
    706          ** 输　  出:
    707          **
    708          ** 全局变量:
    709          ** 调用模块:
    710          **
    711          ** 作　  者: John Tonny
    712          ** 日　  期: 2005年05月01日
    713          **------------------------------------------------------------------------------------------------------
    714          ** 修 改 人:
    715          ** 日　  期:
    716          **------------------------------------------------------------------------------------------------------
    717          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    718          void CardBoxCountReset(INT8U ucSelected)
    719          {
    720            m_usrBoxInfo[ucSelected].usrCountResponse.ucEnabled=0;
   \                     CardBoxCountReset: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x0143             LSLS     R3,R0,#+5
   \   0000000A   0x441A             ADD      R2,R2,R3
   \   0000000C   0x7411             STRB     R1,[R2, #+16]
    721            m_usrBoxInfo[ucSelected].usrCountResponse.ucRetrys=5;
   \   0000000E   0x2105             MOVS     R1,#+5
   \   00000010   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x0143             LSLS     R3,R0,#+5
   \   00000018   0x441A             ADD      R2,R2,R3
   \   0000001A   0x7691             STRB     R1,[R2, #+26]
    722            m_usrBoxInfo[ucSelected].usrCountResponse.ulMachineId=0;	
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x0143             LSLS     R3,R0,#+5
   \   00000026   0x441A             ADD      R2,R2,R3
   \   00000028   0x6151             STR      R1,[R2, #+20]
    723            m_usrBoxInfo[ucSelected].usrCountResponse.ucCurrentCount=0;
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x0143             LSLS     R3,R0,#+5
   \   00000034   0x441A             ADD      R2,R2,R3
   \   00000036   0x7611             STRB     R1,[R2, #+24]
    724            m_usrBoxInfo[ucSelected].usrCountResponse.ucNewCount=0;
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x.... 0x....      LDR.W    R2,??DataTable16_1
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0x0143             LSLS     R3,R0,#+5
   \   00000042   0x441A             ADD      R2,R2,R3
   \   00000044   0x7651             STRB     R1,[R2, #+25]
    725          }
   \   00000046   0x4770             BX       LR               ;; return
    726          
    727          /********************************************************************************************************
    728          ** 函数名称: CardBoxPosReset
    729          ** 功能描述:
    730          ** 输 　 入:
    731          **
    732          ** 输　  出:
    733          **
    734          ** 全局变量:
    735          ** 调用模块:
    736          **
    737          ** 作　  者: John Tonny
    738          ** 日　  期: 2005年05月01日
    739          **------------------------------------------------------------------------------------------------------
    740          ** 修 改 人:
    741          ** 日　  期:
    742          **------------------------------------------------------------------------------------------------------
    743          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    744          void CardBoxPosReset(INT8U ucSelected)
    745          {
    746            m_usrBoxInfo[ucSelected].usrFlag.usrBit.bPosErr=0;  
   \                     CardBoxPosReset: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable16_1
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x0142             LSLS     R2,R0,#+5
   \   00000006   0x4411             ADD      R1,R1,R2
   \   00000008   0x7BC9             LDRB     R1,[R1, #+15]
   \   0000000A   0xF011 0x01FD      ANDS     R1,R1,#0xFD
   \   0000000E   0x....             LDR.N    R2,??DataTable16_1
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x0143             LSLS     R3,R0,#+5
   \   00000014   0x441A             ADD      R2,R2,R3
   \   00000016   0x73D1             STRB     R1,[R2, #+15]
    747            m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums=CARDBOX_POS_ERR_NUMS;
   \   00000018   0x2108             MOVS     R1,#+8
   \   0000001A   0x....             LDR.N    R2,??DataTable16_1
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x0143             LSLS     R3,R0,#+5
   \   00000020   0x441A             ADD      R2,R2,R3
   \   00000022   0x7751             STRB     R1,[R2, #+29]
    748            m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrRetrys=CARDBOX_POS_ERR_RETRYS;  
   \   00000024   0x2104             MOVS     R1,#+4
   \   00000026   0x....             LDR.N    R2,??DataTable16_1
   \   00000028   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002A   0x0143             LSLS     R3,R0,#+5
   \   0000002C   0x441A             ADD      R2,R2,R3
   \   0000002E   0x7791             STRB     R1,[R2, #+30]
    749          }
   \   00000030   0x4770             BX       LR               ;; return
    750          
    751          /********************************************************************************************************
    752          ** 函数名称: BoxLoadEvent
    753          ** 功能描述:
    754          ** 输 　 入:
    755          **
    756          ** 输　  出:
    757          **
    758          ** 全局变量:
    759          ** 调用模块:
    760          **
    761          ** 作　  者: John Tonny
    762          ** 日　  期: 2005年05月01日
    763          **------------------------------------------------------------------------------------------------------
    764          ** 修 改 人:
    765          ** 日　  期:
    766          **------------------------------------------------------------------------------------------------------
    767          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    768          void BoxLoadEvent(INT8U ucSelected)
    769          {
   \                     BoxLoadEvent: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    770            INT8U ucTmp;
    771            INT8U ucType=DEV_TYPE();
   \   00000004   0x.... 0x....      BL       DEV_TYPE
   \   00000008   0x0005             MOVS     R5,R0
    772            
    773            if(ucType==SMALL_THICK_ZIN_TYPE || ucType==SMALL_THIN_ZIN_TYPE){
   \   0000000A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000C   0x2D02             CMP      R5,#+2
   \   0000000E   0xD002             BEQ.N    ??BoxLoadEvent_0
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D0A             CMP      R5,#+10
   \   00000014   0xD110             BNE.N    ??BoxLoadEvent_1
    774            #if BOX_ID_CONST_EN==1
    775              m_usrBoxInfo[ucSelected].ulMachineId=12345678;
   \                     ??BoxLoadEvent_0: (+1)
   \   00000016   0x....             LDR.N    R0,??DataTable16_6  ;; 0xbc614e
   \   00000018   0x....             LDR.N    R1,??DataTable16_1
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0x0162             LSLS     R2,R4,#+5
   \   0000001E   0x4411             ADD      R1,R1,R2
   \   00000020   0x6048             STR      R0,[R1, #+4]
    776            #endif
    777              if(ucType==SMALL_THICK_ZIN_TYPE || ucType==SMALL_THIN_ZIN_TYPE){
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0x2D02             CMP      R5,#+2
   \   00000026   0xD002             BEQ.N    ??BoxLoadEvent_2
   \   00000028   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002A   0x2D0A             CMP      R5,#+10
   \   0000002C   0xD103             BNE.N    ??BoxLoadEvent_3
    778                CardBoxSetSelected(BOX_THIRD,BOX_POWER_ON_MODE);
   \                     ??BoxLoadEvent_2: (+1)
   \   0000002E   0x2101             MOVS     R1,#+1
   \   00000030   0x2002             MOVS     R0,#+2
   \   00000032   0x.... 0x....      BL       CardBoxSetSelected
    779              }
    780              return;
   \                     ??BoxLoadEvent_3: (+1)
   \   00000036   0xE0A3             B.N      ??BoxLoadEvent_4
    781            }
    782            
    783            //装载
    784            if(!m_usrBoxInfo[ucSelected].usrFlag.usrBit.bBoxLoad){
   \                     ??BoxLoadEvent_1: (+1)
   \   00000038   0x....             LDR.N    R0,??DataTable16_1
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x0161             LSLS     R1,R4,#+5
   \   0000003E   0x4408             ADD      R0,R0,R1
   \   00000040   0x7B80             LDRB     R0,[R0, #+14]
   \   00000042   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xF040 0x809A      BNE.W    ??BoxLoadEvent_5
    785              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bBoxLoad=1;
   \   0000004C   0x....             LDR.N    R0,??DataTable16_1
   \   0000004E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000050   0x0161             LSLS     R1,R4,#+5
   \   00000052   0x4408             ADD      R0,R0,R1
   \   00000054   0x7B80             LDRB     R0,[R0, #+14]
   \   00000056   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000005A   0x....             LDR.N    R1,??DataTable16_1
   \   0000005C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005E   0x0162             LSLS     R2,R4,#+5
   \   00000060   0x4411             ADD      R1,R1,R2
   \   00000062   0x7388             STRB     R0,[R1, #+14]
    786              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bBoxUnload=0;
   \   00000064   0x....             LDR.N    R0,??DataTable16_1
   \   00000066   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000068   0x0161             LSLS     R1,R4,#+5
   \   0000006A   0x4408             ADD      R0,R0,R1
   \   0000006C   0x7B80             LDRB     R0,[R0, #+14]
   \   0000006E   0xF010 0x00FD      ANDS     R0,R0,#0xFD
   \   00000072   0x....             LDR.N    R1,??DataTable16_1
   \   00000074   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000076   0x0162             LSLS     R2,R4,#+5
   \   00000078   0x4411             ADD      R1,R1,R2
   \   0000007A   0x7388             STRB     R0,[R1, #+14]
    787              
    788            #if BOARD_OLD_EN==0
    789              CardBoxSetSelected(ucSelected,BOX_POWER_ON_MODE);    
   \   0000007C   0x2101             MOVS     R1,#+1
   \   0000007E   0x0020             MOVS     R0,R4
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x.... 0x....      BL       CardBoxSetSelected
    790            #else
    791              CardBoxPower(BOX_POWER_ON_MODE);
    792            #endif    
    793              
    794              if(EepromReadVerifyBytes(CARDMACHINE_MAXCOUNT_ADDR,&ucTmp,1)){
   \   00000086   0x2201             MOVS     R2,#+1
   \   00000088   0x4669             MOV      R1,SP
   \   0000008A   0x2038             MOVS     R0,#+56
   \   0000008C   0x.... 0x....      BL       EepromReadVerifyBytes
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD00C             BEQ.N    ??BoxLoadEvent_6
    795                if(ucTmp>CARDMACHINE_MAX_COUNTS){
   \   00000094   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000098   0x2865             CMP      R0,#+101
   \   0000009A   0xDB10             BLT.N    ??BoxLoadEvent_7
    796                  ucTmp=CARDMACHINE_MAX_COUNTS;
   \   0000009C   0x2064             MOVS     R0,#+100
   \   0000009E   0xF88D 0x0000      STRB     R0,[SP, #+0]
    797                  EepromWriteVerifyBytes(CARDMACHINE_MAXCOUNT_ADDR,&ucTmp,1);
   \   000000A2   0x2201             MOVS     R2,#+1
   \   000000A4   0x4669             MOV      R1,SP
   \   000000A6   0x2038             MOVS     R0,#+56
   \   000000A8   0x.... 0x....      BL       EepromWriteVerifyBytes
   \   000000AC   0xE007             B.N      ??BoxLoadEvent_7
    798                }
    799              }else{
    800                ucTmp=CARDMACHINE_MAX_COUNTS;
   \                     ??BoxLoadEvent_6: (+1)
   \   000000AE   0x2064             MOVS     R0,#+100
   \   000000B0   0xF88D 0x0000      STRB     R0,[SP, #+0]
    801                EepromWriteVerifyBytes(CARDMACHINE_MAXCOUNT_ADDR,&ucTmp,1);
   \   000000B4   0x2201             MOVS     R2,#+1
   \   000000B6   0x4669             MOV      R1,SP
   \   000000B8   0x2038             MOVS     R0,#+56
   \   000000BA   0x.... 0x....      BL       EepromWriteVerifyBytes
    802              }
    803              m_usrBoxInfo[ucSelected].ucMaxCounts=ucTmp;
   \                     ??BoxLoadEvent_7: (+1)
   \   000000BE   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000C2   0x....             LDR.N    R1,??DataTable16_1
   \   000000C4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C6   0x0162             LSLS     R2,R4,#+5
   \   000000C8   0x4411             ADD      R1,R1,R2
   \   000000CA   0x7048             STRB     R0,[R1, #+1]
    804          
    805              if(EepromReadVerifyBytes(CARDMACHINE_ALARM_MAX_ADDR,&ucTmp,1)){
   \   000000CC   0x2201             MOVS     R2,#+1
   \   000000CE   0x4669             MOV      R1,SP
   \   000000D0   0x203C             MOVS     R0,#+60
   \   000000D2   0x.... 0x....      BL       EepromReadVerifyBytes
   \   000000D6   0x2800             CMP      R0,#+0
   \   000000D8   0xD00C             BEQ.N    ??BoxLoadEvent_8
    806                if(ucTmp>CARDMACHINE_MAX_COUNTS){
   \   000000DA   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000DE   0x2865             CMP      R0,#+101
   \   000000E0   0xDB10             BLT.N    ??BoxLoadEvent_9
    807                  ucTmp=CARDMACHINE_ALARM_MAX_COUNTS;
   \   000000E2   0x205A             MOVS     R0,#+90
   \   000000E4   0xF88D 0x0000      STRB     R0,[SP, #+0]
    808                  EepromWriteVerifyBytes(CARDMACHINE_ALARM_MAX_ADDR,&ucTmp,1);
   \   000000E8   0x2201             MOVS     R2,#+1
   \   000000EA   0x4669             MOV      R1,SP
   \   000000EC   0x203C             MOVS     R0,#+60
   \   000000EE   0x.... 0x....      BL       EepromWriteVerifyBytes
   \   000000F2   0xE007             B.N      ??BoxLoadEvent_9
    809                }
    810              }else{
    811                ucTmp=CARDMACHINE_ALARM_MAX_COUNTS;
   \                     ??BoxLoadEvent_8: (+1)
   \   000000F4   0x205A             MOVS     R0,#+90
   \   000000F6   0xF88D 0x0000      STRB     R0,[SP, #+0]
    812                EepromWriteVerifyBytes(CARDMACHINE_ALARM_MAX_ADDR,&ucTmp,1);
   \   000000FA   0x2201             MOVS     R2,#+1
   \   000000FC   0x4669             MOV      R1,SP
   \   000000FE   0x203C             MOVS     R0,#+60
   \   00000100   0x.... 0x....      BL       EepromWriteVerifyBytes
    813              }
    814              m_usrBoxInfo[ucSelected].ucAlarmMax=ucTmp;
   \                     ??BoxLoadEvent_9: (+1)
   \   00000104   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000108   0x....             LDR.N    R1,??DataTable16_1
   \   0000010A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000010C   0x0162             LSLS     R2,R4,#+5
   \   0000010E   0x4411             ADD      R1,R1,R2
   \   00000110   0x7208             STRB     R0,[R1, #+8]
    815          
    816              if(EepromReadVerifyBytes(CARDMACHINE_ALARM_MIN_ADDR,&ucTmp,1)){
   \   00000112   0x2201             MOVS     R2,#+1
   \   00000114   0x4669             MOV      R1,SP
   \   00000116   0x2040             MOVS     R0,#+64
   \   00000118   0x.... 0x....      BL       EepromReadVerifyBytes
   \   0000011C   0x2800             CMP      R0,#+0
   \   0000011E   0xD00C             BEQ.N    ??BoxLoadEvent_10
    817                if(ucTmp>CARDMACHINE_MAX_COUNTS){
   \   00000120   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000124   0x2865             CMP      R0,#+101
   \   00000126   0xDB10             BLT.N    ??BoxLoadEvent_11
    818                  ucTmp=CARDMACHINE_ALARM_MIN_COUNTS;
   \   00000128   0x200A             MOVS     R0,#+10
   \   0000012A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    819                  EepromWriteVerifyBytes(CARDMACHINE_ALARM_MIN_ADDR,&ucTmp,1);
   \   0000012E   0x2201             MOVS     R2,#+1
   \   00000130   0x4669             MOV      R1,SP
   \   00000132   0x2040             MOVS     R0,#+64
   \   00000134   0x.... 0x....      BL       EepromWriteVerifyBytes
   \   00000138   0xE007             B.N      ??BoxLoadEvent_11
    820                }
    821              }else{
    822                ucTmp=CARDMACHINE_ALARM_MIN_COUNTS;
   \                     ??BoxLoadEvent_10: (+1)
   \   0000013A   0x200A             MOVS     R0,#+10
   \   0000013C   0xF88D 0x0000      STRB     R0,[SP, #+0]
    823                EepromWriteVerifyBytes(CARDMACHINE_ALARM_MIN_ADDR,&ucTmp,1);
   \   00000140   0x2201             MOVS     R2,#+1
   \   00000142   0x4669             MOV      R1,SP
   \   00000144   0x2040             MOVS     R0,#+64
   \   00000146   0x.... 0x....      BL       EepromWriteVerifyBytes
    824              }
    825              m_usrBoxInfo[ucSelected].ucAlarmMin=ucTmp;    
   \                     ??BoxLoadEvent_11: (+1)
   \   0000014A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000014E   0x....             LDR.N    R1,??DataTable16_1
   \   00000150   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000152   0x0162             LSLS     R2,R4,#+5
   \   00000154   0x4411             ADD      R1,R1,R2
   \   00000156   0x7248             STRB     R0,[R1, #+9]
    826              
    827              m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrNums=CARDBOX_POS_ERR_NUMS;
   \   00000158   0x2008             MOVS     R0,#+8
   \   0000015A   0x....             LDR.N    R1,??DataTable16_1
   \   0000015C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000015E   0x0162             LSLS     R2,R4,#+5
   \   00000160   0x4411             ADD      R1,R1,R2
   \   00000162   0x7748             STRB     R0,[R1, #+29]
    828              m_usrBoxInfo[ucSelected].usrConnectResponse.ucPosErrRetrys=3;
   \   00000164   0x2003             MOVS     R0,#+3
   \   00000166   0x....             LDR.N    R1,??DataTable16_1
   \   00000168   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000016A   0x0162             LSLS     R2,R4,#+5
   \   0000016C   0x4411             ADD      R1,R1,R2
   \   0000016E   0x7788             STRB     R0,[R1, #+30]
    829              CardBoxConnectReset(ucSelected);
   \   00000170   0x0020             MOVS     R0,R4
   \   00000172   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000174   0x.... 0x....      BL       CardBoxConnectReset
    830              CardBoxCountReset(ucSelected);    
   \   00000178   0x0020             MOVS     R0,R4
   \   0000017A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000017C   0x.... 0x....      BL       CardBoxCountReset
    831            }
    832          }
   \                     ??BoxLoadEvent_5: (+1)
   \                     ??BoxLoadEvent_4: (+1)
   \   00000180   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    833          
    834          /********************************************************************************************************
    835          ** 函数名称: BoxUnloadEvent
    836          ** 功能描述:
    837          ** 输 　 入:
    838          **
    839          ** 输　  出:
    840          **
    841          ** 全局变量:
    842          ** 调用模块:
    843          **
    844          ** 作　  者: John Tonny
    845          ** 日　  期: 2005年05月01日
    846          **------------------------------------------------------------------------------------------------------
    847          ** 修 改 人:
    848          ** 日　  期:
    849          **------------------------------------------------------------------------------------------------------
    850          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    851          void BoxUnloadEvent(INT8U ucSelected)
    852          {
   \                     BoxUnloadEvent: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    853            INT8U ucType=DEV_TYPE();
   \   00000004   0x.... 0x....      BL       DEV_TYPE
   \   00000008   0x0005             MOVS     R5,R0
    854            
    855            if(ucType==SMALL_THICK_ZIN_TYPE || ucType==SMALL_THIN_ZIN_TYPE){
   \   0000000A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000C   0x2D02             CMP      R5,#+2
   \   0000000E   0xD002             BEQ.N    ??BoxUnloadEvent_0
   \   00000010   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000012   0x2D0A             CMP      R5,#+10
   \   00000014   0xD106             BNE.N    ??BoxUnloadEvent_1
    856            #if BOX_ID_CONST_EN==1
    857              m_usrBoxInfo[ucSelected].ulMachineId=0;
   \                     ??BoxUnloadEvent_0: (+1)
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x....             LDR.N    R1,??DataTable16_1
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0x0162             LSLS     R2,R4,#+5
   \   0000001E   0x4411             ADD      R1,R1,R2
   \   00000020   0x6048             STR      R0,[R1, #+4]
    858            #endif
    859              return;
   \   00000022   0xE07F             B.N      ??BoxUnloadEvent_2
    860            }
    861            
    862            //卸载
    863            if(!m_usrBoxInfo[ucSelected].usrFlag.usrBit.bBoxUnload){
   \                     ??BoxUnloadEvent_1: (+1)
   \   00000024   0x....             LDR.N    R0,??DataTable16_1
   \   00000026   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000028   0x0161             LSLS     R1,R4,#+5
   \   0000002A   0x4408             ADD      R0,R0,R1
   \   0000002C   0x7B80             LDRB     R0,[R0, #+14]
   \   0000002E   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   00000032   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD175             BNE.N    ??BoxUnloadEvent_3
    864              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bBoxLoad=0;
   \   00000038   0x....             LDR.N    R0,??DataTable16_1
   \   0000003A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003C   0x0161             LSLS     R1,R4,#+5
   \   0000003E   0x4408             ADD      R0,R0,R1
   \   00000040   0x7B80             LDRB     R0,[R0, #+14]
   \   00000042   0xF010 0x00FE      ANDS     R0,R0,#0xFE
   \   00000046   0x....             LDR.N    R1,??DataTable16_1
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x0162             LSLS     R2,R4,#+5
   \   0000004C   0x4411             ADD      R1,R1,R2
   \   0000004E   0x7388             STRB     R0,[R1, #+14]
    865              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bBoxUnload=1;
   \   00000050   0x....             LDR.N    R0,??DataTable16_1
   \   00000052   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000054   0x0161             LSLS     R1,R4,#+5
   \   00000056   0x4408             ADD      R0,R0,R1
   \   00000058   0x7B80             LDRB     R0,[R0, #+14]
   \   0000005A   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000005E   0x....             LDR.N    R1,??DataTable16_1
   \   00000060   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000062   0x0162             LSLS     R2,R4,#+5
   \   00000064   0x4411             ADD      R1,R1,R2
   \   00000066   0x7388             STRB     R0,[R1, #+14]
    866          
    867            #if BOARD_OLD_EN==0
    868              CardBoxSetSelected(ucSelected,BOX_POWER_OFF_MODE);    
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x0020             MOVS     R0,R4
   \   0000006C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006E   0x.... 0x....      BL       CardBoxSetSelected
    869            #else
    870              CardBoxPower(BOX_POWER_OFF_MODE);
    871            #endif
    872              
    873              m_usrBoxInfo[ucSelected].ucCounts=0;
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x....             LDR.N    R1,??DataTable16_1
   \   00000076   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000078   0x0162             LSLS     R2,R4,#+5
   \   0000007A   0x5488             STRB     R0,[R1, R2]
    874              m_usrBoxInfo[ucSelected].ucMaxCounts=0;
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x....             LDR.N    R1,??DataTable16_1
   \   00000080   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000082   0x0162             LSLS     R2,R4,#+5
   \   00000084   0x4411             ADD      R1,R1,R2
   \   00000086   0x7048             STRB     R0,[R1, #+1]
    875              m_usrBoxInfo[ucSelected].ulMachineId=0;
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x....             LDR.N    R1,??DataTable16_1
   \   0000008C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008E   0x0162             LSLS     R2,R4,#+5
   \   00000090   0x4411             ADD      R1,R1,R2
   \   00000092   0x6048             STR      R0,[R1, #+4]
    876              m_usrBoxInfo[ucSelected].ucAlarmMax=0;	
   \   00000094   0x2000             MOVS     R0,#+0
   \   00000096   0x....             LDR.N    R1,??DataTable16_1
   \   00000098   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000009A   0x0162             LSLS     R2,R4,#+5
   \   0000009C   0x4411             ADD      R1,R1,R2
   \   0000009E   0x7208             STRB     R0,[R1, #+8]
    877              m_usrBoxInfo[ucSelected].ucAlarmMin=0;
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x....             LDR.N    R1,??DataTable16_1
   \   000000A4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A6   0x0162             LSLS     R2,R4,#+5
   \   000000A8   0x4411             ADD      R1,R1,R2
   \   000000AA   0x7248             STRB     R0,[R1, #+9]
    878          
    879              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bConnected=0;
   \   000000AC   0x....             LDR.N    R0,??DataTable16_1
   \   000000AE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000B0   0x0161             LSLS     R1,R4,#+5
   \   000000B2   0x4408             ADD      R0,R0,R1
   \   000000B4   0x7B80             LDRB     R0,[R0, #+14]
   \   000000B6   0xF010 0x00FB      ANDS     R0,R0,#0xFB
   \   000000BA   0x....             LDR.N    R1,??DataTable16_1
   \   000000BC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000BE   0x0162             LSLS     R2,R4,#+5
   \   000000C0   0x4411             ADD      R1,R1,R2
   \   000000C2   0x7388             STRB     R0,[R1, #+14]
    880              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bSelftest=0;
   \   000000C4   0x....             LDR.N    R0,??DataTable16_1
   \   000000C6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C8   0x0161             LSLS     R1,R4,#+5
   \   000000CA   0x4408             ADD      R0,R0,R1
   \   000000CC   0x7B80             LDRB     R0,[R0, #+14]
   \   000000CE   0xF010 0x00F7      ANDS     R0,R0,#0xF7
   \   000000D2   0x....             LDR.N    R1,??DataTable16_1
   \   000000D4   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000D6   0x0162             LSLS     R2,R4,#+5
   \   000000D8   0x4411             ADD      R1,R1,R2
   \   000000DA   0x7388             STRB     R0,[R1, #+14]
    881              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bCountWrited=0;
   \   000000DC   0x....             LDR.N    R0,??DataTable16_1
   \   000000DE   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000E0   0x0161             LSLS     R1,R4,#+5
   \   000000E2   0x4408             ADD      R0,R0,R1
   \   000000E4   0x7B80             LDRB     R0,[R0, #+14]
   \   000000E6   0xF010 0x00EF      ANDS     R0,R0,#0xEF
   \   000000EA   0x....             LDR.N    R1,??DataTable16_1
   \   000000EC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000EE   0x0162             LSLS     R2,R4,#+5
   \   000000F0   0x4411             ADD      R1,R1,R2
   \   000000F2   0x7388             STRB     R0,[R1, #+14]
    882              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bCardPos=0;
   \   000000F4   0x....             LDR.N    R0,??DataTable16_1
   \   000000F6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000F8   0x0161             LSLS     R1,R4,#+5
   \   000000FA   0x4408             ADD      R0,R0,R1
   \   000000FC   0x7B80             LDRB     R0,[R0, #+14]
   \   000000FE   0xF010 0x00DF      ANDS     R0,R0,#0xDF
   \   00000102   0x....             LDR.N    R1,??DataTable16_1
   \   00000104   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000106   0x0162             LSLS     R2,R4,#+5
   \   00000108   0x4411             ADD      R1,R1,R2
   \   0000010A   0x7388             STRB     R0,[R1, #+14]
    883              
    884              m_usrBoxInfo[ucSelected].usrFlag.usrBit.bPosErr=1;
   \   0000010C   0x....             LDR.N    R0,??DataTable16_1
   \   0000010E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000110   0x0161             LSLS     R1,R4,#+5
   \   00000112   0x4408             ADD      R0,R0,R1
   \   00000114   0x7BC0             LDRB     R0,[R0, #+15]
   \   00000116   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000011A   0x....             LDR.N    R1,??DataTable16_1
   \   0000011C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000011E   0x0162             LSLS     R2,R4,#+5
   \   00000120   0x4411             ADD      R1,R1,R2
   \   00000122   0x73C8             STRB     R0,[R1, #+15]
    885              
    886            }
    887          }
   \                     ??BoxUnloadEvent_3: (+1)
   \                     ??BoxUnloadEvent_2: (+1)
   \   00000124   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    888          
    889          /********************************************************************************************************
    890          ** 函数名称: BOXLOAD_VALID
    891          ** 功能描述:
    892          ** 输 　 入:
    893          **
    894          ** 输　  出:
    895          **
    896          ** 全局变量:
    897          ** 调用模块:
    898          **
    899          ** 作　  者: John Tonny
    900          ** 日　  期: 2005年05月01日
    901          **------------------------------------------------------------------------------------------------------
    902          ** 修 改 人:
    903          ** 日　  期:
    904          **------------------------------------------------------------------------------------------------------
    905          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    906          INT8U BOXLOAD_VALID(INT8U ucSelected)
    907          {
   \                     BOXLOAD_VALID: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    908          	
    909            INT8U ucBoxLoadBit=m_ucKeyBit[BOXLOAD1_BIT+ucSelected*8];
   \   00000004   0x....             LDR.N    R0,??DataTable16_7
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0xEB00 0x00C4      ADD      R0,R0,R4, LSL #+3
   \   0000000C   0x78C5             LDRB     R5,[R0, #+3]
    910            INT32U ulTmp;
    911            
    912            if(ucSelected<CARDMACHINE_CARDBOX_NUMS){
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C03             CMP      R4,#+3
   \   00000012   0xDA08             BGE.N    ??BOXLOAD_VALID_0
    913              ulTmp=GetKey();
   \   00000014   0x.... 0x....      BL       GetKey
   \   00000018   0x0006             MOVS     R6,R0
    914              if(CheckBit(ulTmp,ucBoxLoadBit)){
   \   0000001A   0x0030             MOVS     R0,R6
   \   0000001C   0x40E8             LSRS     R0,R0,R5
   \   0000001E   0x07C0             LSLS     R0,R0,#+31
   \   00000020   0xD501             BPL.N    ??BOXLOAD_VALID_0
    915                return TRUE;
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0xE000             B.N      ??BOXLOAD_VALID_1
    916              }
    917            }
    918            return FALSE;
   \                     ??BOXLOAD_VALID_0: (+1)
   \   00000026   0x2000             MOVS     R0,#+0
   \                     ??BOXLOAD_VALID_1: (+1)
   \   00000028   0xBD70             POP      {R4-R6,PC}       ;; return
    919          }
    920          
    921          
    922          /********************************************************************************************************
    923          ** 函数名称: BoxPostMsg
    924          ** 功能描述:
    925          ** 输 　 入:
    926          **
    927          ** 输　  出:
    928          **
    929          ** 全局变量:
    930          ** 调用模块:
    931          **
    932          ** 作　  者: John Tonny
    933          ** 日　  期: 2005年05月01日
    934          **------------------------------------------------------------------------------------------------------
    935          ** 修 改 人:
    936          ** 日　  期:
    937          **------------------------------------------------------------------------------------------------------
    938          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    939          INT8U BoxPostMsg(INT8U *pucData,INT8U ucLen)
    940          {
   \                     BoxPostMsg: (+1)
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    941            OS_ERR os_err;
    942            LIB_ERR lib_err;
    943            CPU_INT08U  *pMsg;   
    944                  
    945            pMsg= (CPU_INT08U *)Mem_PoolBlkGet((MEM_POOL *)&m_BoxPool,
    946                                             (CPU_SIZE_T) ucLen,
    947                                             (LIB_ERR  *)&lib_err);
   \   00000006   0xAA01             ADD      R2,SP,#+4
   \   00000008   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000A   0x0029             MOVS     R1,R5
   \   0000000C   0x....             LDR.N    R0,??DataTable16
   \   0000000E   0x.... 0x....      BL       Mem_PoolBlkGet
   \   00000012   0x0006             MOVS     R6,R0
    948            if(pMsg!=0){
   \   00000014   0x2E00             CMP      R6,#+0
   \   00000016   0xD012             BEQ.N    ??BoxPostMsg_0
    949              Mem_Copy(pMsg,pucData,ucLen);
   \   00000018   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001A   0x002A             MOVS     R2,R5
   \   0000001C   0x0021             MOVS     R1,R4
   \   0000001E   0x0030             MOVS     R0,R6
   \   00000020   0x.... 0x....      BL       Mem_Copy
    950              OSTaskQPost(&App_TaskBoxTCB, pMsg, ucLen, OS_OPT_POST_FIFO, &os_err);
   \   00000024   0xF10D 0x0006      ADD      R0,SP,#+6
   \   00000028   0x9000             STR      R0,[SP, #+0]
   \   0000002A   0x2300             MOVS     R3,#+0
   \   0000002C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002E   0x002A             MOVS     R2,R5
   \   00000030   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000032   0x0031             MOVS     R1,R6
   \   00000034   0x....             LDR.N    R0,??DataTable16_8
   \   00000036   0x.... 0x....      BL       OSTaskQPost
    951              return TRUE;
   \   0000003A   0x2001             MOVS     R0,#+1
   \   0000003C   0xE000             B.N      ??BoxPostMsg_1
    952            }
    953            return FALSE;
   \                     ??BoxPostMsg_0: (+1)
   \   0000003E   0x2000             MOVS     R0,#+0
   \                     ??BoxPostMsg_1: (+1)
   \   00000040   0xBD76             POP      {R1,R2,R4-R6,PC}  ;; return
    954          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13:
   \   00000000   0x........         DC32     m_BoxPool

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable13_1:
   \   00000000   0x........         DC32     g_pActionSem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable14:
   \   00000000   0x........         DC32     m_ucKeyBit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x........         DC32     m_usrGlobalFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   0x........         DC32     m_BoxPool

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   0x........         DC32     m_usrBoxInfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_2:
   \   00000000   0x........         DC32     g_ucBoxCurSelected

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_3:
   \   00000000   0x........         DC32     m_ucMachineAddr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_4:
   \   00000000   0x........         DC32     m_ucCardBoxTxSeq

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_5:
   \   00000000   0x........         DC32     App_TaskLcdTCB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_6:
   \   00000000   0x00BC614E         DC32     0xbc614e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_7:
   \   00000000   0x........         DC32     m_ucKeyBit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_8:
   \   00000000   0x........         DC32     App_TaskBoxTCB
    955          
    956          /*******************************************************************************************************
    957          **                            End Of File
    958          *******************************************************************************************************/
    959          
    960          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   BOXLOAD_VALID
        16   -> GetKey
      56   BoxConnected
        56   -> BoxPostMsg
        56   -> SprintF
        56   -> Uart0Pack
      16   BoxLoadEvent
        16   -> CardBoxConnectReset
        16   -> CardBoxCountReset
        16   -> CardBoxSetSelected
        16   -> DEV_TYPE
        16   -> EepromReadVerifyBytes
        16   -> EepromWriteVerifyBytes
      48   BoxMotoMoveDown
        48   -> UartPack
      24   BoxPostMsg
        24   -> Mem_Copy
        24   -> Mem_PoolBlkGet
        24   -> OSTaskQPost
      16   BoxUnloadEvent
        16   -> CardBoxSetSelected
        16   -> DEV_TYPE
      32   Box_Init
        32   -> BSP_OS_SemCreate
        32   -> BoxSelectGet
        32   -> CPU_IntDisMeasStart
        32   -> CPU_IntDisMeasStop
        32   -> CPU_SR_Restore
        32   -> CPU_SR_Save
        32   -> DMotoPwmGet
        32   -> DMotoSelectGet
        32   -> I2c0Init
        32   -> KeySelectGet
        32   -> Mem_PoolBlkGet
        32   -> Mem_PoolCreate
        32   -> PWM1Init
        32   -> SMotoFreqGet
        32   -> SMotoSelectGet
        32   -> ScanParamsGet
        32   -> Timer0Init
        32   -> Timer1Init
        32   -> Timer2Init
        32   -> Timer3Init
      48   Box_Process
        48   -> CARD_AUTO_MODE
        48   -> CardBoxConnectEvent
        48   -> CardBoxCountEvent
        48   -> CardBoxSetSelected
        48   -> DEV_TYPE
        48   -> GetKeyOutput
        48   -> Mem_PoolBlkFree
        48   -> OSTaskQPend
        48   -> UartPack
      32   CardBoxBasicInfoSend
        32   -> DEV_TYPE
        32   -> UartPack
      56   CardBoxConnectCountEvent
        56   -> BuzzSet
        56   -> CPU_IntDisMeasStart
        56   -> CPU_IntDisMeasStop
        56   -> CPU_SR_Restore
        56   -> CPU_SR_Save
        56   -> CardBoxBasicInfoSend
        56   -> CardBoxCountReset
        56   -> CardBoxInfoReset
        56   -> CardBoxSetSelected
        56   -> CardCountUpdateSend
        56   -> DEV_TYPE
      48   CardBoxConnectEvent
        48   -> CardBoxBasicInfoSend
        48   -> CardBoxInfoReset
        48   -> DEV_TYPE
       0   CardBoxConnectReset
      24   CardBoxCountEvent
        24   -> BuzzSet
        24   -> CPU_IntDisMeasStart
        24   -> CPU_IntDisMeasStop
        24   -> CPU_SR_Restore
        24   -> CPU_SR_Save
        24   -> CardBoxCountReset
        24   -> CardCountUpdateSend
        24   -> DEV_TYPE
       0   CardBoxCountReset
       0   CardBoxInfoReset
       0   CardBoxPosReset
      56   CardCountUpdateSend
        56   -> Box_TaskLcdQPost
        56   -> BuzzSet
        56   -> DEV_TYPE
        56   -> UartPack


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable13
       4  ??DataTable13_1
       4  ??DataTable14
       4  ??DataTable15
       4  ??DataTable16
       4  ??DataTable16_1
       4  ??DataTable16_2
       4  ??DataTable16_3
       4  ??DataTable16_4
       4  ??DataTable16_5
       4  ??DataTable16_6
       4  ??DataTable16_7
       4  ??DataTable16_8
      42  BOXLOAD_VALID
     148  BoxConnected
     386  BoxLoadEvent
      68  BoxMotoMoveDown
      66  BoxPostMsg
     294  BoxUnloadEvent
     190  Box_Init
     190  Box_Process
     200  CardBoxBasicInfoSend
     884  CardBoxConnectCountEvent
     498  CardBoxConnectEvent
      16  CardBoxConnectReset
     214  CardBoxCountEvent
      72  CardBoxCountReset
     188  CardBoxInfoReset
      50  CardBoxPosReset
     304  CardCountUpdateSend
       4  g_pActionSem
       4  g_pDMotoSem
       4  g_pSMotoSem
      72  m_BoxPool

 
    84 bytes in section .bss
 3 862 bytes in section .text
 
 3 862 bytes of CODE memory
    84 bytes of DATA memory

Errors: none
Warnings: none
