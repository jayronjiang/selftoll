###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       06/Apr/2017  11:01:02
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\Buzz.c
#    Command line =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\Buzz.c
#        -lCN
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pe174 -o
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Core\CM3\CoreSupport\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Core\CM3\DeviceSupport\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\include\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Driver\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Driver\NXP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Line\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\OS\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\OS\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Source\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_People's Republic of China.936
#    List file    =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\Buzz.lst
#    Object file  =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\Buzz.o
#
###############################################################################

E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\Buzz.c
      1          /*******************************************************************************************************
      2          *
      3          *                                 (c) Copyright 2004-2007, John Tonny
      4          *
      5          *                                           All Rights Reserved
      6          *
      7          ********************************************************************************************************
      8          *
      9          *--------------文件信息---------------------------------------------------------------------------------
     10          *文   件   名: Buzz.C
     11          *创   建   人: John Tonny
     12          *最后修改日期: 2005年05月01日
     13          *描        述:
     14          *
     15          *--------------历史版本信息-----------------------------------------------------------------------------
     16          * 创建人: John Tonny
     17          * 版  本: V1.0
     18          * 日　期: 2005年05月01日
     19          * 描　述: 原始版本
     20          *
     21          *-------------------------------------------------------------------------------------------------------
     22          * 修改人:
     23          * 版  本:
     24          * 日　期:
     25          * 描　述:
     26          *
     27          *--------------当前版本修订-----------------------------------------------------------------------------
     28          * 修改人:
     29          * 日　期:
     30          * 描　述:
     31          *
     32          *-------------------------------------------------------------------------------------------------------
     33          *******************************************************************************************************/
     34          
     35          #define  BUZZ_GLOBALS
     36          #include "includes.h"
     37            
     38          #if BUZZ_EN>0
     39          
     40          #if BUZZ_POSITIVE_EN==0
     41          
     42          #define OpenBuzz()           		  CSP_GPIO_BitSet(BSP_GPIO_BUZZ_OUT_PORT,BSP_GPI0_BUZZ_OUT);
     43          #define CloseBuzz()          		  CSP_GPIO_BitClr(BSP_GPIO_BUZZ_OUT_PORT,BSP_GPI0_BUZZ_OUT);
     44          
     45          #else
     46          
     47          #define OpenBuzz()           		  CSP_GPIO_BitClr(BSP_GPIO_BUZZ_OUT_PORT,BSP_GPI0_BUZZ_OUT);
     48          #define CloseBuzz()          		  CSP_GPIO_BitSet(BSP_GPIO_BUZZ_OUT_PORT,BSP_GPI0_BUZZ_OUT);
     49          
     50          #endif
     51          
     52          
     53          /*******************************************************************************************************
     54          ** 函数名称: BuzzInit
     55          ** 功能描述:
     56          ** 输 　 入:
     57          **
     58          ** 输　  出:
     59          **
     60          ** 全局变量:
     61          ** 调用模块:
     62          **
     63          ** 作　  者: John Tonny
     64          ** 日　  期: 2005年05月01日
     65          **------------------------------------------------------------------------------------------------------
     66          ** 修 改 人:
     67          ** 日　  期:
     68          **------------------------------------------------------------------------------------------------------
     69          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     70          void BuzzInit(void)
     71          {
   \                     BuzzInit: (+1)
   \   00000000   0xB5E0             PUSH     {R5-R7,LR}
     72            CSP_GPIO_Cfg(BSP_GPIO_BUZZ_OUT_PORT,
     73                         BSP_GPI0_BUZZ_OUT,
     74                         CSP_GPIO_DIR_OUT,
     75                         CSP_GPIO_FLAG_MODE_NONE,
     76                         DEF_NO,
     77                         0u,
     78                         CSP_GPIO_FNCT_00);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x9002             STR      R0,[SP, #+8]
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x9001             STR      R0,[SP, #+4]
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x9000             STR      R0,[SP, #+0]
   \   0000000E   0x2301             MOVS     R3,#+1
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000016   0x2001             MOVS     R0,#+1
   \   00000018   0x.... 0x....      BL       CSP_GPIO_Cfg
     79            CloseBuzz();  
   \   0000001C   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x.... 0x....      BL       CSP_GPIO_BitClr
     80            g_usrBuzz.ucPrior=0;
   \   00000026   0x2000             MOVS     R0,#+0
   \   00000028   0x....             LDR.N    R1,??DataTable2
   \   0000002A   0x7188             STRB     R0,[R1, #+6]
     81            BuzzSet(1,3,3,0);
   \   0000002C   0x2300             MOVS     R3,#+0
   \   0000002E   0x2203             MOVS     R2,#+3
   \   00000030   0x2103             MOVS     R1,#+3
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x.... 0x....      BL       BuzzSet
     82          }
   \   00000038   0xBD07             POP      {R0-R2,PC}       ;; return
     83          
     84          /*******************************************************************************************************
     85          ** 函数名称: BuzzSet
     86          ** 功能描述:
     87          ** 输 　 入: ucTimes=0为常响
     88          **
     89          ** 输　  出:
     90          **
     91          ** 全局变量:
     92          ** 调用模块:
     93          **
     94          ** 作　  者: John Tonny
     95          ** 日　  期: 2005年05月01日
     96          **------------------------------------------------------------------------------------------------------
     97          ** 修 改 人:
     98          ** 日　  期:
     99          **------------------------------------------------------------------------------------------------------
    100          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    101          void BuzzSet(INT8U ucTimes,INT8U ucKFrequence,INT8U ucGFrequence,INT8U ucPrior)
    102          {
   \                     BuzzSet: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    103            if(g_usrBuzz.ucPrior<=ucPrior){
   \   00000002   0x001C             MOVS     R4,R3
   \   00000004   0x....             LDR.N    R5,??DataTable2
   \   00000006   0x79AD             LDRB     R5,[R5, #+6]
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x42AC             CMP      R4,R5
   \   0000000C   0xD30B             BCC.N    ??BuzzSet_0
    104              g_usrBuzz.ucTimes=ucTimes;
   \   0000000E   0x....             LDR.N    R4,??DataTable2
   \   00000010   0x7060             STRB     R0,[R4, #+1]
    105              g_usrBuzz.ucKFrequence=ucKFrequence;
   \   00000012   0x....             LDR.N    R4,??DataTable2
   \   00000014   0x70A1             STRB     R1,[R4, #+2]
    106              g_usrBuzz.ucGFrequence=ucGFrequence;
   \   00000016   0x....             LDR.N    R4,??DataTable2
   \   00000018   0x70E2             STRB     R2,[R4, #+3]
    107              g_usrBuzz.ucKCurrent=ucKFrequence;
   \   0000001A   0x....             LDR.N    R4,??DataTable2
   \   0000001C   0x7121             STRB     R1,[R4, #+4]
    108              g_usrBuzz.ucGCurrent=ucGFrequence;
   \   0000001E   0x....             LDR.N    R4,??DataTable2
   \   00000020   0x7162             STRB     R2,[R4, #+5]
    109              g_usrBuzz.ucPrior=ucPrior;
   \   00000022   0x....             LDR.N    R4,??DataTable2
   \   00000024   0x71A3             STRB     R3,[R4, #+6]
    110            }
    111          }
   \                     ??BuzzSet_0: (+1)
   \   00000026   0xBC30             POP      {R4,R5}
   \   00000028   0x4770             BX       LR               ;; return
    112          
    113          /*******************************************************************************************************
    114          ** 函数名称: Buzz_Process
    115          ** 功能描述:
    116          ** 输 　 入:
    117          **
    118          ** 输　  出:
    119          **
    120          ** 全局变量:
    121          ** 调用模块:
    122          **
    123          ** 作　  者: John Tonny
    124          ** 日　  期: 2005年05月01日
    125          **------------------------------------------------------------------------------------------------------
    126          ** 修 改 人:
    127          ** 日　  期:
    128          **------------------------------------------------------------------------------------------------------
    129          *******************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    130          void Buzz_Process(void)
    131          {
   \                     Buzz_Process: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    132            if(g_usrBuzz.ucKCurrent!=0){
   \   00000002   0x....             LDR.N    R0,??DataTable2
   \   00000004   0x7900             LDRB     R0,[R0, #+4]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD00A             BEQ.N    ??Buzz_Process_0
    133              g_usrBuzz.ucKCurrent--;
   \   0000000A   0x....             LDR.N    R0,??DataTable2
   \   0000000C   0x7900             LDRB     R0,[R0, #+4]
   \   0000000E   0x1E40             SUBS     R0,R0,#+1
   \   00000010   0x....             LDR.N    R1,??DataTable2
   \   00000012   0x7108             STRB     R0,[R1, #+4]
    134              OpenBuzz();
   \   00000014   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000018   0x2001             MOVS     R0,#+1
   \   0000001A   0x.... 0x....      BL       CSP_GPIO_BitSet
   \   0000001E   0xE035             B.N      ??Buzz_Process_1
    135            }else if(g_usrBuzz.ucGCurrent!=0){
   \                     ??Buzz_Process_0: (+1)
   \   00000020   0x....             LDR.N    R0,??DataTable2
   \   00000022   0x7940             LDRB     R0,[R0, #+5]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD00A             BEQ.N    ??Buzz_Process_2
    136              g_usrBuzz.ucGCurrent--;
   \   00000028   0x....             LDR.N    R0,??DataTable2
   \   0000002A   0x7940             LDRB     R0,[R0, #+5]
   \   0000002C   0x1E40             SUBS     R0,R0,#+1
   \   0000002E   0x....             LDR.N    R1,??DataTable2
   \   00000030   0x7148             STRB     R0,[R1, #+5]
    137              CloseBuzz();
   \   00000032   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      BL       CSP_GPIO_BitClr
   \   0000003C   0xE026             B.N      ??Buzz_Process_1
    138            }else{
    139              if(g_usrBuzz.ucTimes>=2){
   \                     ??Buzz_Process_2: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable2
   \   00000040   0x7840             LDRB     R0,[R0, #+1]
   \   00000042   0x2802             CMP      R0,#+2
   \   00000044   0xDB0D             BLT.N    ??Buzz_Process_3
    140                g_usrBuzz.ucTimes--;
   \   00000046   0x....             LDR.N    R0,??DataTable2
   \   00000048   0x7840             LDRB     R0,[R0, #+1]
   \   0000004A   0x1E40             SUBS     R0,R0,#+1
   \   0000004C   0x....             LDR.N    R1,??DataTable2
   \   0000004E   0x7048             STRB     R0,[R1, #+1]
    141                g_usrBuzz.ucGCurrent=g_usrBuzz.ucGFrequence;
   \   00000050   0x....             LDR.N    R0,??DataTable2
   \   00000052   0x78C0             LDRB     R0,[R0, #+3]
   \   00000054   0x....             LDR.N    R1,??DataTable2
   \   00000056   0x7148             STRB     R0,[R1, #+5]
    142                g_usrBuzz.ucKCurrent=g_usrBuzz.ucKFrequence;
   \   00000058   0x....             LDR.N    R0,??DataTable2
   \   0000005A   0x7880             LDRB     R0,[R0, #+2]
   \   0000005C   0x....             LDR.N    R1,??DataTable2
   \   0000005E   0x7108             STRB     R0,[R1, #+4]
   \   00000060   0xE014             B.N      ??Buzz_Process_1
    143              }else if(g_usrBuzz.ucTimes==1){
   \                     ??Buzz_Process_3: (+1)
   \   00000062   0x....             LDR.N    R0,??DataTable2
   \   00000064   0x7840             LDRB     R0,[R0, #+1]
   \   00000066   0x2801             CMP      R0,#+1
   \   00000068   0xD108             BNE.N    ??Buzz_Process_4
    144                g_usrBuzz.ucPrior=0;      
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x....             LDR.N    R1,??DataTable2
   \   0000006E   0x7188             STRB     R0,[R1, #+6]
    145                CloseBuzz();
   \   00000070   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0x.... 0x....      BL       CSP_GPIO_BitClr
   \   0000007A   0xE007             B.N      ??Buzz_Process_1
    146              }else{
    147                g_usrBuzz.ucGCurrent=g_usrBuzz.ucGFrequence;
   \                     ??Buzz_Process_4: (+1)
   \   0000007C   0x....             LDR.N    R0,??DataTable2
   \   0000007E   0x78C0             LDRB     R0,[R0, #+3]
   \   00000080   0x....             LDR.N    R1,??DataTable2
   \   00000082   0x7148             STRB     R0,[R1, #+5]
    148                g_usrBuzz.ucKCurrent=g_usrBuzz.ucKFrequence;
   \   00000084   0x....             LDR.N    R0,??DataTable2
   \   00000086   0x7880             LDRB     R0,[R0, #+2]
   \   00000088   0x....             LDR.N    R1,??DataTable2
   \   0000008A   0x7108             STRB     R0,[R1, #+4]
    149              }
    150             }
    151          }
   \                     ??Buzz_Process_1: (+1)
   \   0000008C   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     g_usrBuzz
    152          
    153          
    154          #endif
    155          
    156          /*********************************************************************************************************
    157          **                            End Of File
    158          ********************************************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   BuzzInit
        16   -> BuzzSet
        16   -> CSP_GPIO_BitClr
        16   -> CSP_GPIO_Cfg
       8   BuzzSet
       8   Buzz_Process
         8   -> CSP_GPIO_BitClr
         8   -> CSP_GPIO_BitSet


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
      58  BuzzInit
      42  BuzzSet
     142  Buzz_Process

 
 246 bytes in section .text
 
 246 bytes of CODE memory

Errors: none
Warnings: none
