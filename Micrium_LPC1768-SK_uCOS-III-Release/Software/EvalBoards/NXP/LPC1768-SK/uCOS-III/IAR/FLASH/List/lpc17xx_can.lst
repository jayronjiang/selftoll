###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       06/Apr/2017  11:01:06
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\source\lpc17xx_can.c
#    Command line =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\source\lpc17xx_can.c
#        -lCN
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pe174 -o
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Core\CM3\CoreSupport\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Core\CM3\DeviceSupport\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\include\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Driver\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Driver\NXP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Line\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\OS\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\OS\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Source\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_People's Republic of China.936
#    List file    =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\lpc17xx_can.lst
#    Object file  =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\lpc17xx_can.o
#
###############################################################################

E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\source\lpc17xx_can.c
      1          /**
      2           * @file	: lpc17xx_can.c
      3           * @brief	: Contains all functions support for CAN firmware library on LPC17xx
      4           * @version	: 1.0
      5           * @date	: 1.June.2009
      6           * @author	: NguyenCao
      7           **************************************************************************
      8           * Software that is described herein is for illustrative purposes only
      9           * which provides customers with programming information regarding the
     10           * products. This software is supplied "AS IS" without any warranties.
     11           * NXP Semiconductors assumes no responsibility or liability for the
     12           * use of the software, conveys no license or title under any patent,
     13           * copyright, or mask work right to the product. NXP Semiconductors
     14           * reserves the right to make changes in the software without
     15           * notification. NXP Semiconductors also make no representation or
     16           * warranty that such application will be suitable for the specified
     17           * use without further testing or modification.
     18           **********************************************************************/
     19          
     20          /* Peripheral group ----------------------------------------------------------- */
     21          /** @addtogroup CAN
     22           * @{
     23           */
     24          
     25          /* Includes ------------------------------------------------------------------- */
     26          #include "lpc17xx_can.h"
     27          #include "lpc17xx_clkpwr.h"
     28          
     29          /* If this source file built with example, the LPC17xx FW library configuration
     30           * file in each example directory ("lpc17xx_libcfg.h") must be included,
     31           * otherwise the default FW library configuration file must be included instead
     32           */
     33          #ifdef __BUILD_WITH_EXAMPLE__
     34          #include "lpc17xx_libcfg.h"
     35          #else
     36          #include "lpc17xx_libcfg_default.h"
     37          #endif /* __BUILD_WITH_EXAMPLE__ */
     38          
     39          
     40          #ifdef _CAN
     41          
     42          /* Private Variables ---------------------------------------------------------- */
     43          /** @defgroup CAN_Private_Variables
     44           * @{
     45           */
     46          

   \                                 In section .bss, align 1
     47          FunctionalState FULLCAN_ENABLE;
   \                     FULLCAN_ENABLE:
   \   00000000                      DS8 1
     48          
     49          //use for debugging

   \                                 In section .data, align 4
     50          LPC_CAN_TypeDef *CAN1x = LPC_CAN1;
   \                     CAN1x:
   \   00000000   0x40044000         DC32 40044000H

   \                                 In section .data, align 4
     51          LPC_CAN_TypeDef *CAN2x = LPC_CAN2;
   \                     CAN2x:
   \   00000000   0x40048000         DC32 40048000H

   \                                 In section .data, align 4
     52          LPC_CANAF_RAM_TypeDef *CANAFRAMx = LPC_CANAF_RAM;
   \                     CANAFRAMx:
   \   00000000   0x40038000         DC32 40038000H

   \                                 In section .data, align 4
     53          LPC_CANAF_TypeDef *CANAFx = LPC_CANAF;
   \                     CANAFx:
   \   00000000   0x4003C000         DC32 4003C000H
     54          
     55          /* Values of bit time register for different baudrates
     56             NT = Nominal bit time = TSEG1 + TSEG2 + 3
     57             SP = Sample point     = ((TSEG2 +1) / (TSEG1 + TSEG2 + 3)) * 100%
     58                                                      SAM,  SJW, TSEG1, TSEG2, NT,  SP */

   \                                 In section .rodata, align 4
     59          const uint32_t CAN_BIT_TIME[] ={0, /*             not used             */
   \                     CAN_BIT_TIME:
   \   00000000   0x00000000         DC32 0, 0, 0, 0, 114688, 0, 1228800, 0, 2342912, 0, 2473984, 0, 3588096
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x0001C000   
   \              0x00000000   
   \              0x0012C000   
   \              0x00000000   
   \              0x0023C000   
   \              0x00000000   
   \              0x0025C000   
   \              0x00000000   
   \              0x0036C000   
   \   00000034   0x00000000         DC32 0, 0, 4767744, 4833280
   \              0x00000000   
   \              0x0048C000   
   \              0x0049C000   
     60          0, /*             not used             */
     61          0, /*             not used             */
     62          0, /*             not used             */
     63          0x0001C000, /* 0+1,  3+1,   1+1,   0+1,  4, 75% */
     64          0, /*             not used             */
     65          0x0012C000, /* 0+1,  3+1,   2+1,   1+1,  6, 67% */
     66          0, /*             not used             */
     67          0x0023C000, /* 0+1,  3+1,   3+1,   2+1,  8, 63% */
     68          0, /*             not used             */
     69          0x0025C000, /* 0+1,  3+1,   5+1,   2+1, 10, 70% */
     70          0, /*             not used             */
     71          0x0036C000, /* 0+1,  3+1,   6+1,   3+1, 12, 67% */
     72          0, /*             not used             */
     73          0, /*             not used             */
     74          0x0048C000, /* 0+1,  3+1,   8+1,   4+1, 15, 67% */
     75          0x0049C000, /* 0+1,  3+1,   9+1,   4+1, 16, 69% */
     76          };
     77          
     78          /* Counts number of filters (CAN message objects) used */

   \                                 In section .bss, align 2
     79          uint16_t CANAF_FullCAN_cnt = 0;
   \                     CANAF_FullCAN_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     80          uint16_t CANAF_std_cnt = 0;
   \                     CANAF_std_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     81          uint16_t CANAF_gstd_cnt = 0;
   \                     CANAF_gstd_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     82          uint16_t CANAF_ext_cnt = 0;
   \                     CANAF_ext_cnt:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     83          uint16_t CANAF_gext_cnt = 0;
   \                     CANAF_gext_cnt:
   \   00000000                      DS8 2
     84          

   \                                 In section .bss, align 4
     85          static fnCANCbs_Type* _apfnCANCbs[12]={
   \                     _apfnCANCbs:
   \   00000000                      DS8 48
     86          		NULL, 	//CAN Recieve  Call-back funtion pointer
     87          		NULL,	//CAN Transmit1 Call-back funtion pointer
     88          		NULL,	//CAN Error Warning Call-back function pointer
     89          		NULL,	//CAN Data Overrun Call-back function pointer
     90          		NULL,	//CAN Wake-up Call-back funtion pointer
     91          		NULL,	//CAN Error Passive Call-back function pointer
     92          		NULL,	//CAN Arbitration Lost Call-back function pointer
     93          		NULL,	//CAN Bus Error Call-back function pointer
     94          		NULL,	//CAN ID Ready Call-back function pointer
     95          		NULL,	//CAN Transmit2 Call-back function pointer
     96          		NULL,	//CAN Transmit3 Call-back function pointer
     97          		NULL	//FullCAN Receive Call-back function pointer
     98          };
     99          
    100          /**
    101           * @}
    102           */
    103          
    104          
    105          /* Public Functions ----------------------------------------------------------- */
    106          /** @addtogroup CAN_Public_Functions
    107           * @{
    108           */
    109          
    110          
    111          /*********************************************************************//**
    112           * @brief 		Setting CAN baud rate (bps)
    113           * @param[in] 	CANx point to LPC_CAN_TypeDef object, should be:
    114           * 				- CAN1
    115           * 				- CAN2
    116           * @param[in]	baudrate is the baud rate value will be set
    117           * @return 		None
    118           ***********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    119          void CAN_SetBaudRate (LPC_CAN_TypeDef *CANx, uint32_t baudrate)
    120          {
   \                     CAN_SetBaudRate: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    121          	uint32_t nominal_time;
    122          	uint32_t result = 0;
   \   00000008   0x2700             MOVS     R7,#+0
    123          	uint32_t CANPclk = 0;
   \   0000000A   0xF05F 0x0800      MOVS     R8,#+0
    124          
    125          	CHECK_PARAM(PARAM_CANx(CANx));
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD008             BEQ.N    ??CAN_SetBaudRate_0
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x40048000
   \   0000001A   0x4284             CMP      R4,R0
   \   0000001C   0xD004             BEQ.N    ??CAN_SetBaudRate_0
   \   0000001E   0x217D             MOVS     R1,#+125
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   00000024   0x.... 0x....      BL       check_failed
    126          
    127          	if (CANx == LPC_CAN1)
   \                     ??CAN_SetBaudRate_0: (+1)
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD105             BNE.N    ??CAN_SetBaudRate_1
    128          	{
    129          		CANPclk = CLKPWR_GetPCLK (CLKPWR_PCONP_PCAN1);
   \   00000030   0xF44F 0x5000      MOV      R0,#+8192
   \   00000034   0x.... 0x....      BL       CLKPWR_GetPCLK
   \   00000038   0x4680             MOV      R8,R0
   \   0000003A   0xE004             B.N      ??CAN_SetBaudRate_2
    130          	}
    131          	else
    132          	{
    133          		CANPclk = CLKPWR_GetPCLK (CLKPWR_PCONP_PCAN2);
   \                     ??CAN_SetBaudRate_1: (+1)
   \   0000003C   0xF44F 0x4080      MOV      R0,#+16384
   \   00000040   0x.... 0x....      BL       CLKPWR_GetPCLK
   \   00000044   0x4680             MOV      R8,R0
    134          	}
    135          	/* Determine which nominal time to use for PCLK and baudrate */
    136          	if (baudrate <= 500000)
   \                     ??CAN_SetBaudRate_2: (+1)
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x7a121
   \   0000004A   0x4285             CMP      R5,R0
   \   0000004C   0xD202             BCS.N    ??CAN_SetBaudRate_3
    137          	{
    138          		nominal_time = 12;
   \   0000004E   0x200C             MOVS     R0,#+12
   \   00000050   0x0006             MOVS     R6,R0
   \   00000052   0xE019             B.N      ??CAN_SetBaudRate_4
    139          	}
    140          	else if (((CANPclk / 1000000) % 15) == 0)
   \                     ??CAN_SetBaudRate_3: (+1)
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable3_4  ;; 0xf4240
   \   00000058   0xFBB8 0xF0F0      UDIV     R0,R8,R0
   \   0000005C   0x210F             MOVS     R1,#+15
   \   0000005E   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \   00000062   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD102             BNE.N    ??CAN_SetBaudRate_5
    141          	{
    142          		nominal_time = 15;
   \   0000006A   0x200F             MOVS     R0,#+15
   \   0000006C   0x0006             MOVS     R6,R0
   \   0000006E   0xE00B             B.N      ??CAN_SetBaudRate_4
    143          	}
    144          	else if (((CANPclk / 1000000) % 16) == 0)
   \                     ??CAN_SetBaudRate_5: (+1)
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable3_4  ;; 0xf4240
   \   00000074   0xFBB8 0xF0F0      UDIV     R0,R8,R0
   \   00000078   0xF010 0x0F0F      TST      R0,#0xF
   \   0000007C   0xD102             BNE.N    ??CAN_SetBaudRate_6
    145          	{
    146          		nominal_time = 16;
   \   0000007E   0x2010             MOVS     R0,#+16
   \   00000080   0x0006             MOVS     R6,R0
   \   00000082   0xE001             B.N      ??CAN_SetBaudRate_4
    147          	}
    148          	else
    149          	{
    150          		nominal_time = 10;
   \                     ??CAN_SetBaudRate_6: (+1)
   \   00000084   0x200A             MOVS     R0,#+10
   \   00000086   0x0006             MOVS     R6,R0
    151          	}
    152          
    153          	/* Prepare value appropriate for bit time register                         */
    154          	result  = (CANPclk / nominal_time) / baudrate - 1;
   \                     ??CAN_SetBaudRate_4: (+1)
   \   00000088   0xFBB8 0xF0F6      UDIV     R0,R8,R6
   \   0000008C   0xFBB0 0xF0F5      UDIV     R0,R0,R5
   \   00000090   0x1E40             SUBS     R0,R0,#+1
   \   00000092   0x0007             MOVS     R7,R0
    155          	result &= 0x000003FF;
   \   00000094   0x05BF             LSLS     R7,R7,#+22       ;; ZeroExtS R7,R7,#+22,#+22
   \   00000096   0x0DBF             LSRS     R7,R7,#+22
    156          	result |= CAN_BIT_TIME[nominal_time];
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable3_5
   \   0000009C   0xF850 0x0026      LDR      R0,[R0, R6, LSL #+2]
   \   000000A0   0x4307             ORRS     R7,R0,R7
    157          
    158          	/* Enter reset mode */
    159          	CANx->MOD = 0x01;
   \   000000A2   0x2001             MOVS     R0,#+1
   \   000000A4   0x6020             STR      R0,[R4, #+0]
    160          	/* Set bit timing */
    161          	CANx->BTR  = result;
   \   000000A6   0x6167             STR      R7,[R4, #+20]
    162          
    163          	/* Return to normal operating */
    164          	CANx->MOD = 0;
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x6020             STR      R0,[R4, #+0]
    165          }
   \   000000AC   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    166          
    167          /********************************************************************//**
    168           * @brief		Initialize CAN peripheral with given baudrate
    169           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
    170           * 				- CAN1: CAN 1
    171           * 				- CAN2: CAN 2
    172           * @param[in]	baudrate: the value of CAN baudrate will be set (bps)
    173           * @return 		void
    174           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    175          void CAN_Init(LPC_CAN_TypeDef *CANx, uint32_t baudrate)
    176          {
   \                     CAN_Init: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    177          	uint32_t temp;
    178          	uint16_t i;
    179          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD008             BEQ.N    ??CAN_Init_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x40048000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD004             BEQ.N    ??CAN_Init_0
   \   00000016   0x21B3             MOVS     R1,#+179
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000001C   0x.... 0x....      BL       check_failed
    180          
    181          	if(CANx == LPC_CAN1)
   \                     ??CAN_Init_0: (+1)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xD10A             BNE.N    ??CAN_Init_1
    182          	{
    183          		/* Turn on power and clock for CAN1 */
    184          		CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCAN1, ENABLE);
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0xF44F 0x5000      MOV      R0,#+8192
   \   0000002E   0x.... 0x....      BL       CLKPWR_ConfigPPWR
    185          		/* Set clock divide for CAN1 */
    186          		CLKPWR_SetPCLKDiv (CLKPWR_PCONP_PCAN1, CLKPWR_PCLKSEL_CCLK_DIV_4);
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0xF44F 0x5000      MOV      R0,#+8192
   \   00000038   0x.... 0x....      BL       CLKPWR_SetPCLKDiv
   \   0000003C   0xE009             B.N      ??CAN_Init_2
    187          	}
    188          	else
    189          	{
    190          		/* Turn on power and clock for CAN1 */
    191          		CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCAN2, ENABLE);
   \                     ??CAN_Init_1: (+1)
   \   0000003E   0x2101             MOVS     R1,#+1
   \   00000040   0xF44F 0x4080      MOV      R0,#+16384
   \   00000044   0x.... 0x....      BL       CLKPWR_ConfigPPWR
    192          		/* Set clock divide for CAN2 */
    193          		CLKPWR_SetPCLKDiv (CLKPWR_PCONP_PCAN2, CLKPWR_PCLKSEL_CCLK_DIV_4);
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0xF44F 0x4080      MOV      R0,#+16384
   \   0000004E   0x.... 0x....      BL       CLKPWR_SetPCLKDiv
    194          	}
    195          
    196          	CANx->MOD = 1; // Enter Reset Mode
   \                     ??CAN_Init_2: (+1)
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x6020             STR      R0,[R4, #+0]
    197          	CANx->IER = 0; // Disable All CAN Interrupts
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x6120             STR      R0,[R4, #+16]
    198          	CANx->GSR = 0;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x60A0             STR      R0,[R4, #+8]
    199          	/* Request command to release Rx, Tx buffer and clear data overrun */
    200          	//CANx->CMR = CAN_CMR_AT | CAN_CMR_RRB | CAN_CMR_CDO;
    201          	CANx->CMR = (1<<1)|(1<<2)|(1<<3);
   \   0000005E   0x200E             MOVS     R0,#+14
   \   00000060   0x6060             STR      R0,[R4, #+4]
    202          	/* Read to clear interrupt pending in interrupt capture register */
    203          	temp = CANx->ICR;
   \   00000062   0x68E0             LDR      R0,[R4, #+12]
   \   00000064   0x0006             MOVS     R6,R0
    204          	CANx->MOD = 0;// Return Normal operating
   \   00000066   0x2000             MOVS     R0,#+0
   \   00000068   0x6020             STR      R0,[R4, #+0]
    205          
    206          	//Reset CANAF value
    207          	LPC_CANAF->AFMR = 0x01;
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   00000070   0x6008             STR      R0,[R1, #+0]
    208          
    209          	//clear ALUT RAM
    210          	for (i = 0; i < 512; i++) {
   \   00000072   0x2000             MOVS     R0,#+0
   \   00000074   0x0007             MOVS     R7,R0
   \                     ??CAN_Init_3: (+1)
   \   00000076   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000078   0xF5B7 0x7F00      CMP      R7,#+512
   \   0000007C   0xDA07             BGE.N    ??CAN_Init_4
    211          		LPC_CANAF_RAM->mask[i] = 0x00;
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40038000
   \   00000084   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000086   0xF841 0x0027      STR      R0,[R1, R7, LSL #+2]
    212          	}
   \   0000008A   0x1C7F             ADDS     R7,R7,#+1
   \   0000008C   0xE7F3             B.N      ??CAN_Init_3
    213          
    214          	LPC_CANAF->SFF_sa = 0x00;
   \                     ??CAN_Init_4: (+1)
   \   0000008E   0x2000             MOVS     R0,#+0
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable3_7  ;; 0x4003c004
   \   00000094   0x6008             STR      R0,[R1, #+0]
    215          	LPC_CANAF->SFF_GRP_sa = 0x00;
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable3_8  ;; 0x4003c008
   \   0000009C   0x6008             STR      R0,[R1, #+0]
    216          	LPC_CANAF->EFF_sa = 0x00;
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable3_9  ;; 0x4003c00c
   \   000000A4   0x6008             STR      R0,[R1, #+0]
    217          	LPC_CANAF->EFF_GRP_sa = 0x00;
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable3_10  ;; 0x4003c010
   \   000000AC   0x6008             STR      R0,[R1, #+0]
    218          	LPC_CANAF->ENDofTable = 0x00;
   \   000000AE   0x2000             MOVS     R0,#+0
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable3_11  ;; 0x4003c014
   \   000000B4   0x6008             STR      R0,[R1, #+0]
    219          
    220          	LPC_CANAF->AFMR = 0x00;
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   000000BC   0x6008             STR      R0,[R1, #+0]
    221          	/* Set baudrate */
    222          	CAN_SetBaudRate (CANx, baudrate);
   \   000000BE   0x0029             MOVS     R1,R5
   \   000000C0   0x0020             MOVS     R0,R4
   \   000000C2   0x.... 0x....      BL       CAN_SetBaudRate
    223          }
   \   000000C6   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    224          /********************************************************************//**
    225           * @brief		CAN deInit
    226           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
    227           * 				- CAN1: CAN 1
    228           * 				- CAN2: CAN 2
    229           * @return 		void
    230           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    231          void CAN_DeInit(LPC_CAN_TypeDef *CANx)
    232          {
   \                     CAN_DeInit: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    233          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD008             BEQ.N    ??CAN_DeInit_0
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable3_1  ;; 0x40048000
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xD004             BEQ.N    ??CAN_DeInit_0
   \   00000014   0x21E9             MOVS     R1,#+233
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000001A   0x.... 0x....      BL       check_failed
    234          
    235          	if(CANx == LPC_CAN1)
   \                     ??CAN_DeInit_0: (+1)
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x40044000
   \   00000022   0x4284             CMP      R4,R0
   \   00000024   0xD105             BNE.N    ??CAN_DeInit_1
    236          	{
    237          		/* Turn on power and clock for CAN1 */
    238          		CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCAN1, DISABLE);
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0xF44F 0x5000      MOV      R0,#+8192
   \   0000002C   0x.... 0x....      BL       CLKPWR_ConfigPPWR
   \   00000030   0xE004             B.N      ??CAN_DeInit_2
    239          	}
    240          	else
    241          	{
    242          		/* Turn on power and clock for CAN1 */
    243          		CLKPWR_ConfigPPWR(CLKPWR_PCONP_PCAN2, DISABLE);
   \                     ??CAN_DeInit_1: (+1)
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0xF44F 0x4080      MOV      R0,#+16384
   \   00000038   0x.... 0x....      BL       CLKPWR_ConfigPPWR
    244          	}
    245          }
   \                     ??CAN_DeInit_2: (+1)
   \   0000003C   0xBD10             POP      {R4,PC}          ;; return
    246          /********************************************************************//**
    247           * @brief		Setup Acceptance Filter Look-Up Table
    248           * @param[in]	CANAFx	pointer to LPC_CANAF_TypeDef, should be: CANAF
    249           * @param[in]	AFSection	the pointer to AF_SectionDef struct
    250           * 				It contain information about 5 sections will be install in AFLUT
    251           * @return 		CAN Error	could be:
    252           * 				- CAN_OBJECTS_FULL_ERROR: No more rx or tx objects available
    253           * 				- CAN_AF_ENTRY_ERROR: table error-violation of ascending numerical order
    254           * 				- CAN_OK: ID is added into table successfully
    255           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    256          CAN_ERROR CAN_SetupAFLUT(LPC_CANAF_TypeDef* CANAFx, AF_SectionDef* AFSection)
    257          {
   \                     CAN_SetupAFLUT: (+1)
   \   00000000   0xE92D 0x4FF1      PUSH     {R0,R4-R11,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x000C             MOVS     R4,R1
    258          	uint8_t ctrl1,ctrl2;
    259          	uint8_t dis1, dis2;
    260          	uint16_t SID, SID_temp,i, count = 0;
   \   00000008   0xF05F 0x0A00      MOVS     R10,#+0
    261          	uint32_t EID, EID_temp, entry, buf;
    262          	uint16_t lowerSID, upperSID;
    263          	uint32_t lowerEID, upperEID;
    264          
    265          	CHECK_PARAM(PARAM_CANAFx(CANAFx));
   \   0000000C   0x9806             LDR      R0,[SP, #+24]
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   00000012   0x4288             CMP      R0,R1
   \   00000014   0xD005             BEQ.N    ??CAN_SetupAFLUT_0
   \   00000016   0xF240 0x1109      MOVW     R1,#+265
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000001E   0x.... 0x....      BL       check_failed
    266          	CANAFx->AFMR = 0x01;
   \                     ??CAN_SetupAFLUT_0: (+1)
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0x9906             LDR      R1,[SP, #+24]
   \   00000026   0x6008             STR      R0,[R1, #+0]
    267          
    268          /***** setup FullCAN Table *****/
    269          	if(AFSection->FullCAN_Sec == NULL)
   \   00000028   0x6820             LDR      R0,[R4, #+0]
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD104             BNE.N    ??CAN_SetupAFLUT_1
    270          	{
    271          		FULLCAN_ENABLE = DISABLE;
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000034   0x7008             STRB     R0,[R1, #+0]
   \   00000036   0xE0F1             B.N      ??CAN_SetupAFLUT_2
    272          	}
    273          	else
    274          	{
    275          		FULLCAN_ENABLE = ENABLE;
   \                     ??CAN_SetupAFLUT_1: (+1)
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   0000003E   0x7008             STRB     R0,[R1, #+0]
    276          		for(i=0;i<(AFSection->FC_NumEntry);i++)
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_3: (+1)
   \   00000044   0x4658             MOV      R0,R11
   \   00000046   0x7921             LDRB     R1,[R4, #+4]
   \   00000048   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000004C   0x4288             CMP      R0,R1
   \   0000004E   0xF080 0x80E5      BCS.W    ??CAN_SetupAFLUT_2
    277          		{
    278          			if(count + 1 > 64)
   \   00000052   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000056   0xF11A 0x0001      ADDS     R0,R10,#+1
   \   0000005A   0x2841             CMP      R0,#+65
   \   0000005C   0xDB01             BLT.N    ??CAN_SetupAFLUT_4
    279          			{
    280          				return CAN_OBJECTS_FULL_ERROR;
   \   0000005E   0x2002             MOVS     R0,#+2
   \   00000060   0xE3FC             B.N      ??CAN_SetupAFLUT_5
    281          			}
    282          			ctrl1 = AFSection->FullCAN_Sec->controller;
   \                     ??CAN_SetupAFLUT_4: (+1)
   \   00000062   0x6820             LDR      R0,[R4, #+0]
   \   00000064   0x7800             LDRB     R0,[R0, #+0]
   \   00000066   0x0005             MOVS     R5,R0
    283          			SID = AFSection->FullCAN_Sec->id_11;
   \   00000068   0x6820             LDR      R0,[R4, #+0]
   \   0000006A   0x8840             LDRH     R0,[R0, #+2]
   \   0000006C   0x0007             MOVS     R7,R0
    284          			dis1 = AFSection->FullCAN_Sec->disable;
   \   0000006E   0x6820             LDR      R0,[R4, #+0]
   \   00000070   0x7840             LDRB     R0,[R0, #+1]
   \   00000072   0x0006             MOVS     R6,R0
    285          
    286          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \   00000074   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000076   0x2D00             CMP      R5,#+0
   \   00000078   0xD101             BNE.N    ??CAN_SetupAFLUT_6
   \   0000007A   0x2001             MOVS     R0,#+1
   \   0000007C   0xE000             B.N      ??CAN_SetupAFLUT_7
   \                     ??CAN_SetupAFLUT_6: (+1)
   \   0000007E   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_7: (+1)
   \   00000080   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000082   0x2D01             CMP      R5,#+1
   \   00000084   0xD101             BNE.N    ??CAN_SetupAFLUT_8
   \   00000086   0x2101             MOVS     R1,#+1
   \   00000088   0xE000             B.N      ??CAN_SetupAFLUT_9
   \                     ??CAN_SetupAFLUT_8: (+1)
   \   0000008A   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_9: (+1)
   \   0000008C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000008E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000090   0x4308             ORRS     R0,R1,R0
   \   00000092   0x2800             CMP      R0,#+0
   \   00000094   0xD105             BNE.N    ??CAN_SetupAFLUT_10
   \   00000096   0xF44F 0x718F      MOV      R1,#+286
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000009E   0x.... 0x....      BL       check_failed
    287          			CHECK_PARAM(PARAM_ID_11(SID));
   \                     ??CAN_SetupAFLUT_10: (+1)
   \   000000A2   0x0038             MOVS     R0,R7
   \   000000A4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A6   0x0AC0             LSRS     R0,R0,#+11
   \   000000A8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000AA   0x2800             CMP      R0,#+0
   \   000000AC   0xD005             BEQ.N    ??CAN_SetupAFLUT_11
   \   000000AE   0xF240 0x111F      MOVW     R1,#+287
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000000B6   0x.... 0x....      BL       check_failed
    288          			CHECK_PARAM(PARAM_MSG_DISABLE(dis1));
   \                     ??CAN_SetupAFLUT_11: (+1)
   \   000000BA   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000BC   0x2E00             CMP      R6,#+0
   \   000000BE   0xD101             BNE.N    ??CAN_SetupAFLUT_12
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0xE000             B.N      ??CAN_SetupAFLUT_13
   \                     ??CAN_SetupAFLUT_12: (+1)
   \   000000C4   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_13: (+1)
   \   000000C6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000C8   0x2E01             CMP      R6,#+1
   \   000000CA   0xD101             BNE.N    ??CAN_SetupAFLUT_14
   \   000000CC   0x2101             MOVS     R1,#+1
   \   000000CE   0xE000             B.N      ??CAN_SetupAFLUT_15
   \                     ??CAN_SetupAFLUT_14: (+1)
   \   000000D0   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_15: (+1)
   \   000000D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000D6   0x4308             ORRS     R0,R1,R0
   \   000000D8   0x2800             CMP      R0,#+0
   \   000000DA   0xD105             BNE.N    ??CAN_SetupAFLUT_16
   \   000000DC   0xF44F 0x7190      MOV      R1,#+288
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000000E4   0x.... 0x....      BL       check_failed
    289          			entry = 0x00; //reset entry value
   \                     ??CAN_SetupAFLUT_16: (+1)
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x4680             MOV      R8,R0
    290          			if((CANAF_FullCAN_cnt & 0x00000001)==0)
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   000000F0   0x7800             LDRB     R0,[R0, #+0]
   \   000000F2   0x07C0             LSLS     R0,R0,#+31
   \   000000F4   0xD448             BMI.N    ??CAN_SetupAFLUT_17
    291          			{
    292          				if(count!=0x00)
   \   000000F6   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000FA   0xF1BA 0x0F00      CMP      R10,#+0
   \   000000FE   0xD015             BEQ.N    ??CAN_SetupAFLUT_18
    293          				{
    294          					buf = LPC_CANAF_RAM->mask[count-1];
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   00000104   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000108   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   0000010C   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   00000110   0x4681             MOV      R9,R0
    295          					SID_temp = (buf & 0x000003FF);
   \   00000112   0x4648             MOV      R0,R9
   \   00000114   0x0580             LSLS     R0,R0,#+22       ;; ZeroExtS R0,R0,#+22,#+22
   \   00000116   0x0D80             LSRS     R0,R0,#+22
   \   00000118   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    296          					if(SID_temp > SID)
   \   0000011C   0x0038             MOVS     R0,R7
   \   0000011E   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   00000122   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000124   0x4288             CMP      R0,R1
   \   00000126   0xD201             BCS.N    ??CAN_SetupAFLUT_18
    297          					{
    298          						return CAN_AF_ENTRY_ERROR;
   \   00000128   0x2005             MOVS     R0,#+5
   \   0000012A   0xE397             B.N      ??CAN_SetupAFLUT_5
    299          					}
    300          				}
    301          				entry = (ctrl1<<29)|(dis1<<28)|(SID<<16)|(1<<27);
   \                     ??CAN_SetupAFLUT_18: (+1)
   \   0000012C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000012E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000130   0x0730             LSLS     R0,R6,#+28
   \   00000132   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   00000136   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000138   0xEA50 0x4007      ORRS     R0,R0,R7, LSL #+16
   \   0000013C   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   00000140   0x4680             MOV      R8,R0
    302          				LPC_CANAF_RAM->mask[count] &= 0x0000FFFF;
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   00000146   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000014A   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000014E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000150   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40038000
   \   00000154   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000158   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    303          				LPC_CANAF_RAM->mask[count] |= entry;
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   00000160   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000164   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000168   0xEA58 0x0000      ORRS     R0,R8,R0
   \   0000016C   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40038000
   \   00000170   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000174   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    304          				CANAF_FullCAN_cnt++;
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   0000017C   0x8800             LDRH     R0,[R0, #+0]
   \   0000017E   0x1C40             ADDS     R0,R0,#+1
   \   00000180   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000184   0x8008             STRH     R0,[R1, #+0]
   \   00000186   0xE043             B.N      ??CAN_SetupAFLUT_19
    305          			}
    306          			else
    307          			{
    308          				buf = LPC_CANAF_RAM->mask[count];
   \                     ??CAN_SetupAFLUT_17: (+1)
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   0000018C   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000190   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000194   0x4681             MOV      R9,R0
    309          				SID_temp = (buf & 0x03FF0000)>>16;
   \   00000196   0xEA5F 0x4019      LSRS     R0,R9,#+16
   \   0000019A   0x0580             LSLS     R0,R0,#+22       ;; ZeroExtS R0,R0,#+22,#+22
   \   0000019C   0x0D80             LSRS     R0,R0,#+22
   \   0000019E   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    310          				if(SID_temp > SID)
   \   000001A2   0x0038             MOVS     R0,R7
   \   000001A4   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000001A8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001AA   0x4288             CMP      R0,R1
   \   000001AC   0xD201             BCS.N    ??CAN_SetupAFLUT_20
    311          				{
    312          					return CAN_AF_ENTRY_ERROR;
   \   000001AE   0x2005             MOVS     R0,#+5
   \   000001B0   0xE354             B.N      ??CAN_SetupAFLUT_5
    313          				}
    314          				entry = (ctrl1<<13)|(dis1<<12)|(SID<<0)|(1<<11);
   \                     ??CAN_SetupAFLUT_20: (+1)
   \   000001B2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000001B4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000001B6   0x0330             LSLS     R0,R6,#+12
   \   000001B8   0xEA50 0x3045      ORRS     R0,R0,R5, LSL #+13
   \   000001BC   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000001BE   0x4338             ORRS     R0,R7,R0
   \   000001C0   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   000001C4   0x4680             MOV      R8,R0
    315          				LPC_CANAF_RAM->mask[count] &= 0xFFFF0000;
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   000001CA   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000001CE   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000001D2   0x0C00             LSRS     R0,R0,#+16
   \   000001D4   0x0400             LSLS     R0,R0,#+16
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40038000
   \   000001DA   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000001DE   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    316          				LPC_CANAF_RAM->mask[count]|= entry;
   \   000001E2   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   000001E6   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000001EA   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000001EE   0xEA58 0x0000      ORRS     R0,R8,R0
   \   000001F2   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40038000
   \   000001F6   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000001FA   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    317          				count++;
   \   000001FE   0xF11A 0x0A01      ADDS     R10,R10,#+1
    318          				CANAF_FullCAN_cnt++;
   \   00000202   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000206   0x8800             LDRH     R0,[R0, #+0]
   \   00000208   0x1C40             ADDS     R0,R0,#+1
   \   0000020A   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   0000020E   0x8008             STRH     R0,[R1, #+0]
    319          			}
    320          			AFSection->FullCAN_Sec = (FullCAN_Entry *)((uint32_t)(AFSection->FullCAN_Sec)+ sizeof(FullCAN_Entry));
   \                     ??CAN_SetupAFLUT_19: (+1)
   \   00000210   0x6820             LDR      R0,[R4, #+0]
   \   00000212   0x1D00             ADDS     R0,R0,#+4
   \   00000214   0x6020             STR      R0,[R4, #+0]
    321          		}
   \   00000216   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   0000021A   0xE713             B.N      ??CAN_SetupAFLUT_3
    322          	}
    323          
    324          /***** Setup Explicit Standard Frame Format Section *****/
    325          	if(AFSection->SFF_Sec != NULL)
   \                     ??CAN_SetupAFLUT_2: (+1)
   \   0000021C   0x68A0             LDR      R0,[R4, #+8]
   \   0000021E   0x2800             CMP      R0,#+0
   \   00000220   0xF000 0x80EB      BEQ.W    ??CAN_SetupAFLUT_21
    326          	{
    327          		for(i=0;i<(AFSection->SFF_NumEntry);i++)
   \   00000224   0x2000             MOVS     R0,#+0
   \   00000226   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_22: (+1)
   \   00000228   0x4658             MOV      R0,R11
   \   0000022A   0x7B21             LDRB     R1,[R4, #+12]
   \   0000022C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000022E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000230   0x4288             CMP      R0,R1
   \   00000232   0xF080 0x80E2      BCS.W    ??CAN_SetupAFLUT_21
    328          		{
    329          			if(count + 1 > 512)
   \   00000236   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000023A   0xF11A 0x0001      ADDS     R0,R10,#+1
   \   0000023E   0xF5B0 0x7F00      CMP      R0,#+512
   \   00000242   0xDD01             BLE.N    ??CAN_SetupAFLUT_23
    330          			{
    331          				return CAN_OBJECTS_FULL_ERROR;
   \   00000244   0x2002             MOVS     R0,#+2
   \   00000246   0xE309             B.N      ??CAN_SetupAFLUT_5
    332          			}
    333          			ctrl1 = AFSection->SFF_Sec->controller;
   \                     ??CAN_SetupAFLUT_23: (+1)
   \   00000248   0x68A0             LDR      R0,[R4, #+8]
   \   0000024A   0x7800             LDRB     R0,[R0, #+0]
   \   0000024C   0x0005             MOVS     R5,R0
    334          			SID = AFSection->SFF_Sec->id_11;
   \   0000024E   0x68A0             LDR      R0,[R4, #+8]
   \   00000250   0x8840             LDRH     R0,[R0, #+2]
   \   00000252   0x0007             MOVS     R7,R0
    335          			dis1 = AFSection->SFF_Sec->disable;
   \   00000254   0x68A0             LDR      R0,[R4, #+8]
   \   00000256   0x7840             LDRB     R0,[R0, #+1]
   \   00000258   0x0006             MOVS     R6,R0
    336          
    337          			//check parameter
    338          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \   0000025A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000025C   0x2D00             CMP      R5,#+0
   \   0000025E   0xD101             BNE.N    ??CAN_SetupAFLUT_24
   \   00000260   0x2001             MOVS     R0,#+1
   \   00000262   0xE000             B.N      ??CAN_SetupAFLUT_25
   \                     ??CAN_SetupAFLUT_24: (+1)
   \   00000264   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_25: (+1)
   \   00000266   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000268   0x2D01             CMP      R5,#+1
   \   0000026A   0xD101             BNE.N    ??CAN_SetupAFLUT_26
   \   0000026C   0x2101             MOVS     R1,#+1
   \   0000026E   0xE000             B.N      ??CAN_SetupAFLUT_27
   \                     ??CAN_SetupAFLUT_26: (+1)
   \   00000270   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_27: (+1)
   \   00000272   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000274   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000276   0x4308             ORRS     R0,R1,R0
   \   00000278   0x2800             CMP      R0,#+0
   \   0000027A   0xD105             BNE.N    ??CAN_SetupAFLUT_28
   \   0000027C   0xF44F 0x71A9      MOV      R1,#+338
   \   00000280   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   00000284   0x.... 0x....      BL       check_failed
    339          			CHECK_PARAM(PARAM_ID_11(SID));
   \                     ??CAN_SetupAFLUT_28: (+1)
   \   00000288   0x0038             MOVS     R0,R7
   \   0000028A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000028C   0x0AC0             LSRS     R0,R0,#+11
   \   0000028E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000290   0x2800             CMP      R0,#+0
   \   00000292   0xD005             BEQ.N    ??CAN_SetupAFLUT_29
   \   00000294   0xF240 0x1153      MOVW     R1,#+339
   \   00000298   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000029C   0x.... 0x....      BL       check_failed
    340          			CHECK_PARAM(PARAM_MSG_DISABLE(dis1));
   \                     ??CAN_SetupAFLUT_29: (+1)
   \   000002A0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000002A2   0x2E00             CMP      R6,#+0
   \   000002A4   0xD101             BNE.N    ??CAN_SetupAFLUT_30
   \   000002A6   0x2001             MOVS     R0,#+1
   \   000002A8   0xE000             B.N      ??CAN_SetupAFLUT_31
   \                     ??CAN_SetupAFLUT_30: (+1)
   \   000002AA   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_31: (+1)
   \   000002AC   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000002AE   0x2E01             CMP      R6,#+1
   \   000002B0   0xD101             BNE.N    ??CAN_SetupAFLUT_32
   \   000002B2   0x2101             MOVS     R1,#+1
   \   000002B4   0xE000             B.N      ??CAN_SetupAFLUT_33
   \                     ??CAN_SetupAFLUT_32: (+1)
   \   000002B6   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_33: (+1)
   \   000002B8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002BA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000002BC   0x4308             ORRS     R0,R1,R0
   \   000002BE   0x2800             CMP      R0,#+0
   \   000002C0   0xD105             BNE.N    ??CAN_SetupAFLUT_34
   \   000002C2   0xF44F 0x71AA      MOV      R1,#+340
   \   000002C6   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000002CA   0x.... 0x....      BL       check_failed
    341          
    342          			entry = 0x00; //reset entry value
   \                     ??CAN_SetupAFLUT_34: (+1)
   \   000002CE   0x2000             MOVS     R0,#+0
   \   000002D0   0x4680             MOV      R8,R0
    343          			if((CANAF_std_cnt & 0x00000001)==0)
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   000002D6   0x7800             LDRB     R0,[R0, #+0]
   \   000002D8   0x07C0             LSLS     R0,R0,#+31
   \   000002DA   0xD446             BMI.N    ??CAN_SetupAFLUT_35
    344          			{
    345          				if(CANAF_std_cnt !=0 )
   \   000002DC   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   000002E0   0x8800             LDRH     R0,[R0, #+0]
   \   000002E2   0x2800             CMP      R0,#+0
   \   000002E4   0xD015             BEQ.N    ??CAN_SetupAFLUT_36
    346          				{
    347          					buf = LPC_CANAF_RAM->mask[count-1];
   \   000002E6   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   000002EA   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000002EE   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   000002F2   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   000002F6   0x4681             MOV      R9,R0
    348          					SID_temp = (buf & 0x00000FFF);
   \   000002F8   0x4648             MOV      R0,R9
   \   000002FA   0x0500             LSLS     R0,R0,#+20       ;; ZeroExtS R0,R0,#+20,#+20
   \   000002FC   0x0D00             LSRS     R0,R0,#+20
   \   000002FE   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    349          					if(SID_temp > SID)
   \   00000302   0x0038             MOVS     R0,R7
   \   00000304   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   00000308   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000030A   0x4288             CMP      R0,R1
   \   0000030C   0xD201             BCS.N    ??CAN_SetupAFLUT_36
    350          					{
    351          						return CAN_AF_ENTRY_ERROR;
   \   0000030E   0x2005             MOVS     R0,#+5
   \   00000310   0xE2A4             B.N      ??CAN_SetupAFLUT_5
    352          					}
    353          				}
    354          				entry = (ctrl1<<29)|(dis1<<28)|(SID<<16);
   \                     ??CAN_SetupAFLUT_36: (+1)
   \   00000312   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000314   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000316   0x0730             LSLS     R0,R6,#+28
   \   00000318   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   0000031C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000031E   0xEA50 0x4007      ORRS     R0,R0,R7, LSL #+16
   \   00000322   0x4680             MOV      R8,R0
    355          				LPC_CANAF_RAM->mask[count] &= 0x0000FFFF;
   \   00000324   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   00000328   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000032C   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000330   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000332   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40038000
   \   00000336   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000033A   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    356          				LPC_CANAF_RAM->mask[count] |= entry;
   \   0000033E   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   00000342   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000346   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000034A   0xEA58 0x0000      ORRS     R0,R8,R0
   \   0000034E   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40038000
   \   00000352   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000356   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    357          				CANAF_std_cnt++;
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   0000035E   0x8800             LDRH     R0,[R0, #+0]
   \   00000360   0x1C40             ADDS     R0,R0,#+1
   \   00000362   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00000366   0x8008             STRH     R0,[R1, #+0]
   \   00000368   0xE041             B.N      ??CAN_SetupAFLUT_37
    358          			}
    359          			else
    360          			{
    361          				buf = LPC_CANAF_RAM->mask[count];
   \                     ??CAN_SetupAFLUT_35: (+1)
   \   0000036A   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   0000036E   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000372   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000376   0x4681             MOV      R9,R0
    362          				SID_temp = (buf & 0x0FFF0000)>>16;
   \   00000378   0xEA5F 0x4019      LSRS     R0,R9,#+16
   \   0000037C   0x0500             LSLS     R0,R0,#+20       ;; ZeroExtS R0,R0,#+20,#+20
   \   0000037E   0x0D00             LSRS     R0,R0,#+20
   \   00000380   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    363          				if(SID_temp > SID)
   \   00000384   0x0038             MOVS     R0,R7
   \   00000386   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   0000038A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000038C   0x4288             CMP      R0,R1
   \   0000038E   0xD201             BCS.N    ??CAN_SetupAFLUT_38
    364          				{
    365          					return CAN_AF_ENTRY_ERROR;
   \   00000390   0x2005             MOVS     R0,#+5
   \   00000392   0xE263             B.N      ??CAN_SetupAFLUT_5
    366          				}
    367          				entry = (ctrl1<<13)|(dis1<<12)|(SID<<0);
   \                     ??CAN_SetupAFLUT_38: (+1)
   \   00000394   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000396   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000398   0x0330             LSLS     R0,R6,#+12
   \   0000039A   0xEA50 0x3045      ORRS     R0,R0,R5, LSL #+13
   \   0000039E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000003A0   0x4338             ORRS     R0,R7,R0
   \   000003A2   0x4680             MOV      R8,R0
    368          				LPC_CANAF_RAM->mask[count] &= 0xFFFF0000;
   \   000003A4   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   000003A8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000003AC   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000003B0   0x0C00             LSRS     R0,R0,#+16
   \   000003B2   0x0400             LSLS     R0,R0,#+16
   \   000003B4   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40038000
   \   000003B8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000003BC   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    369          				LPC_CANAF_RAM->mask[count] |= entry;
   \   000003C0   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0x40038000
   \   000003C4   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000003C8   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000003CC   0xEA58 0x0000      ORRS     R0,R8,R0
   \   000003D0   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x40038000
   \   000003D4   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000003D8   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    370          				count++;
   \   000003DC   0xF11A 0x0A01      ADDS     R10,R10,#+1
    371          				CANAF_std_cnt++;
   \   000003E0   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   000003E4   0x8800             LDRH     R0,[R0, #+0]
   \   000003E6   0x1C40             ADDS     R0,R0,#+1
   \   000003E8   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   000003EC   0x8008             STRH     R0,[R1, #+0]
    372          			}
    373          			AFSection->SFF_Sec = (SFF_Entry *)((uint32_t)(AFSection->SFF_Sec)+ sizeof(SFF_Entry));
   \                     ??CAN_SetupAFLUT_37: (+1)
   \   000003EE   0x68A0             LDR      R0,[R4, #+8]
   \   000003F0   0x1D00             ADDS     R0,R0,#+4
   \   000003F2   0x60A0             STR      R0,[R4, #+8]
    374          		}
   \   000003F4   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   000003F8   0xE716             B.N      ??CAN_SetupAFLUT_22
    375          	}
    376          
    377          /***** Setup Group of Standard Frame Format Identifier Section *****/
    378          	if(AFSection->SFF_GPR_Sec != NULL)
   \                     ??CAN_SetupAFLUT_21: (+1)
   \   000003FA   0x6920             LDR      R0,[R4, #+16]
   \   000003FC   0x2800             CMP      R0,#+0
   \   000003FE   0xF000 0x80E4      BEQ.W    ??CAN_SetupAFLUT_39
    379          	{
    380          		for(i=0;i<(AFSection->SFF_GPR_NumEntry);i++)
   \   00000402   0x2000             MOVS     R0,#+0
   \   00000404   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_40: (+1)
   \   00000406   0x4658             MOV      R0,R11
   \   00000408   0x7D21             LDRB     R1,[R4, #+20]
   \   0000040A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000040C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000040E   0x4288             CMP      R0,R1
   \   00000410   0xF080 0x80DB      BCS.W    ??CAN_SetupAFLUT_39
    381          		{
    382          			if(count + 1 > 512)
   \   00000414   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000418   0xF11A 0x0001      ADDS     R0,R10,#+1
   \   0000041C   0xF5B0 0x7F00      CMP      R0,#+512
   \   00000420   0xDD01             BLE.N    ??CAN_SetupAFLUT_41
    383          			{
    384          				return CAN_OBJECTS_FULL_ERROR;
   \   00000422   0x2002             MOVS     R0,#+2
   \   00000424   0xE21A             B.N      ??CAN_SetupAFLUT_5
    385          			}
    386          			ctrl1 = AFSection->SFF_GPR_Sec->controller1;
   \                     ??CAN_SetupAFLUT_41: (+1)
   \   00000426   0x6920             LDR      R0,[R4, #+16]
   \   00000428   0x7800             LDRB     R0,[R0, #+0]
   \   0000042A   0x0005             MOVS     R5,R0
    387          			ctrl2 = AFSection->SFF_GPR_Sec->controller2;
   \   0000042C   0x6920             LDR      R0,[R4, #+16]
   \   0000042E   0x7900             LDRB     R0,[R0, #+4]
   \   00000430   0xF88D 0x0000      STRB     R0,[SP, #+0]
    388          			dis1 = AFSection->SFF_GPR_Sec->disable1;
   \   00000434   0x6920             LDR      R0,[R4, #+16]
   \   00000436   0x7840             LDRB     R0,[R0, #+1]
   \   00000438   0x0006             MOVS     R6,R0
    389          			dis2 = AFSection->SFF_GPR_Sec->disable2;
   \   0000043A   0x6920             LDR      R0,[R4, #+16]
   \   0000043C   0x7940             LDRB     R0,[R0, #+5]
   \   0000043E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    390          			lowerSID = AFSection->SFF_GPR_Sec->lowerID;
   \   00000442   0x6920             LDR      R0,[R4, #+16]
   \   00000444   0x8840             LDRH     R0,[R0, #+2]
   \   00000446   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    391          			upperSID = AFSection->SFF_GPR_Sec->upperID;
   \   0000044A   0x6920             LDR      R0,[R4, #+16]
   \   0000044C   0x88C0             LDRH     R0,[R0, #+6]
   \   0000044E   0xF8AD 0x0006      STRH     R0,[SP, #+6]
    392          
    393          			/* check parameter */
    394          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \   00000452   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000454   0x2D00             CMP      R5,#+0
   \   00000456   0xD101             BNE.N    ??CAN_SetupAFLUT_42
   \   00000458   0x2001             MOVS     R0,#+1
   \   0000045A   0xE000             B.N      ??CAN_SetupAFLUT_43
   \                     ??CAN_SetupAFLUT_42: (+1)
   \   0000045C   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_43: (+1)
   \   0000045E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000460   0x2D01             CMP      R5,#+1
   \   00000462   0xD101             BNE.N    ??CAN_SetupAFLUT_44
   \   00000464   0x2101             MOVS     R1,#+1
   \   00000466   0xE000             B.N      ??CAN_SetupAFLUT_45
   \                     ??CAN_SetupAFLUT_44: (+1)
   \   00000468   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_45: (+1)
   \   0000046A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000046C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000046E   0x4308             ORRS     R0,R1,R0
   \   00000470   0x2800             CMP      R0,#+0
   \   00000472   0xD105             BNE.N    ??CAN_SetupAFLUT_46
   \   00000474   0xF44F 0x71C5      MOV      R1,#+394
   \   00000478   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   0000047C   0x.... 0x....      BL       check_failed
    395          			CHECK_PARAM(PARAM_CTRL(ctrl2));
   \                     ??CAN_SetupAFLUT_46: (+1)
   \   00000480   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000484   0x2800             CMP      R0,#+0
   \   00000486   0xD101             BNE.N    ??CAN_SetupAFLUT_47
   \   00000488   0x2001             MOVS     R0,#+1
   \   0000048A   0xE000             B.N      ??CAN_SetupAFLUT_48
   \                     ??CAN_SetupAFLUT_47: (+1)
   \   0000048C   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_48: (+1)
   \   0000048E   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000492   0x2901             CMP      R1,#+1
   \   00000494   0xD101             BNE.N    ??CAN_SetupAFLUT_49
   \   00000496   0x2101             MOVS     R1,#+1
   \   00000498   0xE000             B.N      ??CAN_SetupAFLUT_50
   \                     ??CAN_SetupAFLUT_49: (+1)
   \   0000049A   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_50: (+1)
   \   0000049C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000049E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000004A0   0x4308             ORRS     R0,R1,R0
   \   000004A2   0x2800             CMP      R0,#+0
   \   000004A4   0xD105             BNE.N    ??CAN_SetupAFLUT_51
   \   000004A6   0xF240 0x118B      MOVW     R1,#+395
   \   000004AA   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000004AE   0x.... 0x....      BL       check_failed
    396          			CHECK_PARAM(PARAM_MSG_DISABLE(dis1));
   \                     ??CAN_SetupAFLUT_51: (+1)
   \   000004B2   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000004B4   0x2E00             CMP      R6,#+0
   \   000004B6   0xD101             BNE.N    ??CAN_SetupAFLUT_52
   \   000004B8   0x2001             MOVS     R0,#+1
   \   000004BA   0xE000             B.N      ??CAN_SetupAFLUT_53
   \                     ??CAN_SetupAFLUT_52: (+1)
   \   000004BC   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_53: (+1)
   \   000004BE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000004C0   0x2E01             CMP      R6,#+1
   \   000004C2   0xD101             BNE.N    ??CAN_SetupAFLUT_54
   \   000004C4   0x2101             MOVS     R1,#+1
   \   000004C6   0xE000             B.N      ??CAN_SetupAFLUT_55
   \                     ??CAN_SetupAFLUT_54: (+1)
   \   000004C8   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_55: (+1)
   \   000004CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000004CC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000004CE   0x4308             ORRS     R0,R1,R0
   \   000004D0   0x2800             CMP      R0,#+0
   \   000004D2   0xD105             BNE.N    ??CAN_SetupAFLUT_56
   \   000004D4   0xF44F 0x71C6      MOV      R1,#+396
   \   000004D8   0x.... 0x....      LDR.W    R0,??DataTable3_2
   \   000004DC   0x.... 0x....      BL       check_failed
    397          			CHECK_PARAM(PARAM_MSG_DISABLE(dis2));
   \                     ??CAN_SetupAFLUT_56: (+1)
   \   000004E0   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   000004E4   0x2800             CMP      R0,#+0
   \   000004E6   0xD101             BNE.N    ??CAN_SetupAFLUT_57
   \   000004E8   0x2001             MOVS     R0,#+1
   \   000004EA   0xE000             B.N      ??CAN_SetupAFLUT_58
   \                     ??CAN_SetupAFLUT_57: (+1)
   \   000004EC   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_58: (+1)
   \   000004EE   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   000004F2   0x2901             CMP      R1,#+1
   \   000004F4   0xD101             BNE.N    ??CAN_SetupAFLUT_59
   \   000004F6   0x2101             MOVS     R1,#+1
   \   000004F8   0xE000             B.N      ??CAN_SetupAFLUT_60
   \                     ??CAN_SetupAFLUT_59: (+1)
   \   000004FA   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_60: (+1)
   \   000004FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000004FE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000500   0x4308             ORRS     R0,R1,R0
   \   00000502   0x2800             CMP      R0,#+0
   \   00000504   0xD104             BNE.N    ??CAN_SetupAFLUT_61
   \   00000506   0xF240 0x118D      MOVW     R1,#+397
   \   0000050A   0x....             LDR.N    R0,??DataTable3_2
   \   0000050C   0x.... 0x....      BL       check_failed
    398          			CHECK_PARAM(PARAM_ID_11(lowerSID));
   \                     ??CAN_SetupAFLUT_61: (+1)
   \   00000510   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000514   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000516   0x0AC0             LSRS     R0,R0,#+11
   \   00000518   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000051A   0x2800             CMP      R0,#+0
   \   0000051C   0xD004             BEQ.N    ??CAN_SetupAFLUT_62
   \   0000051E   0xF44F 0x71C7      MOV      R1,#+398
   \   00000522   0x....             LDR.N    R0,??DataTable3_2
   \   00000524   0x.... 0x....      BL       check_failed
    399          			CHECK_PARAM(PARAM_ID_11(upperSID));
   \                     ??CAN_SetupAFLUT_62: (+1)
   \   00000528   0xF8BD 0x0006      LDRH     R0,[SP, #+6]
   \   0000052C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000052E   0x0AC0             LSRS     R0,R0,#+11
   \   00000530   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000532   0x2800             CMP      R0,#+0
   \   00000534   0xD004             BEQ.N    ??CAN_SetupAFLUT_63
   \   00000536   0xF240 0x118F      MOVW     R1,#+399
   \   0000053A   0x....             LDR.N    R0,??DataTable3_2
   \   0000053C   0x.... 0x....      BL       check_failed
    400          
    401          			entry = 0x00;
   \                     ??CAN_SetupAFLUT_63: (+1)
   \   00000540   0x2000             MOVS     R0,#+0
   \   00000542   0x4680             MOV      R8,R0
    402          			if(CANAF_gstd_cnt!=0)
   \   00000544   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000548   0x8800             LDRH     R0,[R0, #+0]
   \   0000054A   0x2800             CMP      R0,#+0
   \   0000054C   0xD014             BEQ.N    ??CAN_SetupAFLUT_64
    403          			{
    404          				buf = LPC_CANAF_RAM->mask[count-1];
   \   0000054E   0x....             LDR.N    R0,??DataTable3_6  ;; 0x40038000
   \   00000550   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000554   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   00000558   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   0000055C   0x4681             MOV      R9,R0
    405          				SID_temp = buf & 0x00000FFF;
   \   0000055E   0x4648             MOV      R0,R9
   \   00000560   0x0500             LSLS     R0,R0,#+20       ;; ZeroExtS R0,R0,#+20,#+20
   \   00000562   0x0D00             LSRS     R0,R0,#+20
   \   00000564   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    406          				if(SID_temp > lowerSID)
   \   00000568   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000056C   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   00000570   0x4288             CMP      R0,R1
   \   00000572   0xD201             BCS.N    ??CAN_SetupAFLUT_64
    407          				{
    408          					return CAN_AF_ENTRY_ERROR;
   \   00000574   0x2005             MOVS     R0,#+5
   \   00000576   0xE171             B.N      ??CAN_SetupAFLUT_5
    409          				}
    410          			}
    411          			entry = (ctrl1 << 29)|(dis1 << 28)|(lowerSID << 16)|  \
    412          					(ctrl2 << 13)|(dis2 << 12)|(upperSID << 0);
   \                     ??CAN_SetupAFLUT_64: (+1)
   \   00000578   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000057A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000057C   0x0730             LSLS     R0,R6,#+28
   \   0000057E   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   00000582   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000586   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   0000058A   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   0000058E   0xEA50 0x3041      ORRS     R0,R0,R1, LSL #+13
   \   00000592   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   00000596   0xEA50 0x3001      ORRS     R0,R0,R1, LSL #+12
   \   0000059A   0xF8BD 0x1006      LDRH     R1,[SP, #+6]
   \   0000059E   0x4308             ORRS     R0,R1,R0
   \   000005A0   0x4680             MOV      R8,R0
    413          			LPC_CANAF_RAM->mask[count] = entry;
   \   000005A2   0x....             LDR.N    R0,??DataTable3_6  ;; 0x40038000
   \   000005A4   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000005A8   0xF840 0x802A      STR      R8,[R0, R10, LSL #+2]
    414          			CANAF_gstd_cnt++;
   \   000005AC   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000005B0   0x8800             LDRH     R0,[R0, #+0]
   \   000005B2   0x1C40             ADDS     R0,R0,#+1
   \   000005B4   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000005B8   0x8008             STRH     R0,[R1, #+0]
    415          			count++;
   \   000005BA   0xF11A 0x0A01      ADDS     R10,R10,#+1
    416          			AFSection->SFF_GPR_Sec = (SFF_GPR_Entry *)((uint32_t)(AFSection->SFF_GPR_Sec)+ sizeof(SFF_GPR_Entry));
   \   000005BE   0x6920             LDR      R0,[R4, #+16]
   \   000005C0   0x3008             ADDS     R0,R0,#+8
   \   000005C2   0x6120             STR      R0,[R4, #+16]
    417          		}
   \   000005C4   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   000005C8   0xE71D             B.N      ??CAN_SetupAFLUT_40
    418          	}
    419          
    420          /***** Setup Explicit Extend Frame Format Identifier Section *****/
    421          	if(AFSection->EFF_Sec != NULL)
   \                     ??CAN_SetupAFLUT_39: (+1)
   \   000005CA   0x69A0             LDR      R0,[R4, #+24]
   \   000005CC   0x2800             CMP      R0,#+0
   \   000005CE   0xD066             BEQ.N    ??CAN_SetupAFLUT_65
    422          	{
    423          		for(i=0;i<(AFSection->EFF_NumEntry);i++)
   \   000005D0   0x2000             MOVS     R0,#+0
   \   000005D2   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_66: (+1)
   \   000005D4   0x4658             MOV      R0,R11
   \   000005D6   0x7F21             LDRB     R1,[R4, #+28]
   \   000005D8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000005DA   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000005DC   0x4288             CMP      R0,R1
   \   000005DE   0xD25E             BCS.N    ??CAN_SetupAFLUT_65
    424          		{
    425          			if(count + 1 > 512)
   \   000005E0   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000005E4   0xF11A 0x0001      ADDS     R0,R10,#+1
   \   000005E8   0xF5B0 0x7F00      CMP      R0,#+512
   \   000005EC   0xDD01             BLE.N    ??CAN_SetupAFLUT_67
    426          			{
    427          				return CAN_OBJECTS_FULL_ERROR;
   \   000005EE   0x2002             MOVS     R0,#+2
   \   000005F0   0xE134             B.N      ??CAN_SetupAFLUT_5
    428          			}
    429          			EID = AFSection->EFF_Sec->ID_29;
   \                     ??CAN_SetupAFLUT_67: (+1)
   \   000005F2   0x69A0             LDR      R0,[R4, #+24]
   \   000005F4   0x6840             LDR      R0,[R0, #+4]
   \   000005F6   0x9004             STR      R0,[SP, #+16]
    430          			ctrl1 = AFSection->EFF_Sec->controller;
   \   000005F8   0x69A0             LDR      R0,[R4, #+24]
   \   000005FA   0x7800             LDRB     R0,[R0, #+0]
   \   000005FC   0x0005             MOVS     R5,R0
    431          
    432          			// check parameter
    433          			CHECK_PARAM(PARAM_ID_29(EID));
   \   000005FE   0x9804             LDR      R0,[SP, #+16]
   \   00000600   0x0F40             LSRS     R0,R0,#+29
   \   00000602   0x2800             CMP      R0,#+0
   \   00000604   0xD004             BEQ.N    ??CAN_SetupAFLUT_68
   \   00000606   0xF240 0x11B1      MOVW     R1,#+433
   \   0000060A   0x....             LDR.N    R0,??DataTable3_2
   \   0000060C   0x.... 0x....      BL       check_failed
    434          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \                     ??CAN_SetupAFLUT_68: (+1)
   \   00000610   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000612   0x2D00             CMP      R5,#+0
   \   00000614   0xD101             BNE.N    ??CAN_SetupAFLUT_69
   \   00000616   0x2001             MOVS     R0,#+1
   \   00000618   0xE000             B.N      ??CAN_SetupAFLUT_70
   \                     ??CAN_SetupAFLUT_69: (+1)
   \   0000061A   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_70: (+1)
   \   0000061C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000061E   0x2D01             CMP      R5,#+1
   \   00000620   0xD101             BNE.N    ??CAN_SetupAFLUT_71
   \   00000622   0x2101             MOVS     R1,#+1
   \   00000624   0xE000             B.N      ??CAN_SetupAFLUT_72
   \                     ??CAN_SetupAFLUT_71: (+1)
   \   00000626   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_72: (+1)
   \   00000628   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000062A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000062C   0x4308             ORRS     R0,R1,R0
   \   0000062E   0x2800             CMP      R0,#+0
   \   00000630   0xD104             BNE.N    ??CAN_SetupAFLUT_73
   \   00000632   0xF44F 0x71D9      MOV      R1,#+434
   \   00000636   0x....             LDR.N    R0,??DataTable3_2
   \   00000638   0x.... 0x....      BL       check_failed
    435          
    436          			entry = 0x00; //reset entry value
   \                     ??CAN_SetupAFLUT_73: (+1)
   \   0000063C   0x2000             MOVS     R0,#+0
   \   0000063E   0x4680             MOV      R8,R0
    437          			if(CANAF_ext_cnt != 0)
   \   00000640   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000644   0x8800             LDRH     R0,[R0, #+0]
   \   00000646   0x2800             CMP      R0,#+0
   \   00000648   0xD010             BEQ.N    ??CAN_SetupAFLUT_74
    438          			{
    439          				buf = LPC_CANAF_RAM->mask[count-1];
   \   0000064A   0x....             LDR.N    R0,??DataTable3_6  ;; 0x40038000
   \   0000064C   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000650   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   00000654   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   00000658   0x4681             MOV      R9,R0
    440          				EID_temp = buf & 0x0FFFFFFF;
   \   0000065A   0xF029 0x4070      BIC      R0,R9,#0xF0000000
   \   0000065E   0x9003             STR      R0,[SP, #+12]
    441          				if(EID_temp > EID)
   \   00000660   0x9804             LDR      R0,[SP, #+16]
   \   00000662   0x9903             LDR      R1,[SP, #+12]
   \   00000664   0x4288             CMP      R0,R1
   \   00000666   0xD201             BCS.N    ??CAN_SetupAFLUT_74
    442          				{
    443          					return CAN_AF_ENTRY_ERROR;
   \   00000668   0x2005             MOVS     R0,#+5
   \   0000066A   0xE0F7             B.N      ??CAN_SetupAFLUT_5
    444          				}
    445          			}
    446          			entry = (ctrl1 << 29)|(EID << 0);
   \                     ??CAN_SetupAFLUT_74: (+1)
   \   0000066C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000066E   0x9804             LDR      R0,[SP, #+16]
   \   00000670   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   00000674   0x4680             MOV      R8,R0
    447          			LPC_CANAF_RAM->mask[count] = entry;
   \   00000676   0x....             LDR.N    R0,??DataTable3_6  ;; 0x40038000
   \   00000678   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000067C   0xF840 0x802A      STR      R8,[R0, R10, LSL #+2]
    448          			CANAF_ext_cnt ++;
   \   00000680   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000684   0x8800             LDRH     R0,[R0, #+0]
   \   00000686   0x1C40             ADDS     R0,R0,#+1
   \   00000688   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000068C   0x8008             STRH     R0,[R1, #+0]
    449          			count++;
   \   0000068E   0xF11A 0x0A01      ADDS     R10,R10,#+1
    450          			AFSection->EFF_Sec = (EFF_Entry *)((uint32_t)(AFSection->EFF_Sec)+ sizeof(EFF_Entry));
   \   00000692   0x69A0             LDR      R0,[R4, #+24]
   \   00000694   0x3008             ADDS     R0,R0,#+8
   \   00000696   0x61A0             STR      R0,[R4, #+24]
    451          		}
   \   00000698   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   0000069C   0xE79A             B.N      ??CAN_SetupAFLUT_66
    452          	}
    453          
    454          /***** Setup Group of Extended Frame Format Identifier Section *****/
    455          	if(AFSection->EFF_GPR_Sec != NULL)
   \                     ??CAN_SetupAFLUT_65: (+1)
   \   0000069E   0x6A20             LDR      R0,[R4, #+32]
   \   000006A0   0x2800             CMP      R0,#+0
   \   000006A2   0xF000 0x809E      BEQ.W    ??CAN_SetupAFLUT_75
    456          	{
    457          		for(i=0;i<(AFSection->EFF_GPR_NumEntry);i++)
   \   000006A6   0x2000             MOVS     R0,#+0
   \   000006A8   0x4683             MOV      R11,R0
   \                     ??CAN_SetupAFLUT_76: (+1)
   \   000006AA   0x4658             MOV      R0,R11
   \   000006AC   0xF894 0x1024      LDRB     R1,[R4, #+36]
   \   000006B0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000006B2   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000006B4   0x4288             CMP      R0,R1
   \   000006B6   0xF080 0x8094      BCS.W    ??CAN_SetupAFLUT_75
    458          		{
    459          			if(count + 2 > 512)
   \   000006BA   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000006BE   0xF11A 0x0002      ADDS     R0,R10,#+2
   \   000006C2   0xF5B0 0x7F00      CMP      R0,#+512
   \   000006C6   0xDD01             BLE.N    ??CAN_SetupAFLUT_77
    460          			{
    461          				return CAN_OBJECTS_FULL_ERROR;
   \   000006C8   0x2002             MOVS     R0,#+2
   \   000006CA   0xE0C7             B.N      ??CAN_SetupAFLUT_5
    462          			}
    463          			ctrl1 = AFSection->EFF_GPR_Sec->controller1;
   \                     ??CAN_SetupAFLUT_77: (+1)
   \   000006CC   0x6A20             LDR      R0,[R4, #+32]
   \   000006CE   0x7800             LDRB     R0,[R0, #+0]
   \   000006D0   0x0005             MOVS     R5,R0
    464          			ctrl2 = AFSection->EFF_GPR_Sec->controller2;
   \   000006D2   0x6A20             LDR      R0,[R4, #+32]
   \   000006D4   0x7840             LDRB     R0,[R0, #+1]
   \   000006D6   0xF88D 0x0000      STRB     R0,[SP, #+0]
    465          			lowerEID = AFSection->EFF_GPR_Sec->lowerEID;
   \   000006DA   0x6A20             LDR      R0,[R4, #+32]
   \   000006DC   0x6840             LDR      R0,[R0, #+4]
   \   000006DE   0x9002             STR      R0,[SP, #+8]
    466          			upperEID = AFSection->EFF_GPR_Sec->upperEID;
   \   000006E0   0x6A20             LDR      R0,[R4, #+32]
   \   000006E2   0x6880             LDR      R0,[R0, #+8]
   \   000006E4   0x9005             STR      R0,[SP, #+20]
    467          
    468          			//check parameter
    469          			CHECK_PARAM(PARAM_CTRL(ctrl1));
   \   000006E6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006E8   0x2D00             CMP      R5,#+0
   \   000006EA   0xD101             BNE.N    ??CAN_SetupAFLUT_78
   \   000006EC   0x2001             MOVS     R0,#+1
   \   000006EE   0xE000             B.N      ??CAN_SetupAFLUT_79
   \                     ??CAN_SetupAFLUT_78: (+1)
   \   000006F0   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_79: (+1)
   \   000006F2   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000006F4   0x2D01             CMP      R5,#+1
   \   000006F6   0xD101             BNE.N    ??CAN_SetupAFLUT_80
   \   000006F8   0x2101             MOVS     R1,#+1
   \   000006FA   0xE000             B.N      ??CAN_SetupAFLUT_81
   \                     ??CAN_SetupAFLUT_80: (+1)
   \   000006FC   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_81: (+1)
   \   000006FE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000700   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000702   0x4308             ORRS     R0,R1,R0
   \   00000704   0x2800             CMP      R0,#+0
   \   00000706   0xD104             BNE.N    ??CAN_SetupAFLUT_82
   \   00000708   0xF240 0x11D5      MOVW     R1,#+469
   \   0000070C   0x....             LDR.N    R0,??DataTable3_2
   \   0000070E   0x.... 0x....      BL       check_failed
    470          			CHECK_PARAM(PARAM_CTRL(ctrl2));
   \                     ??CAN_SetupAFLUT_82: (+1)
   \   00000712   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000716   0x2800             CMP      R0,#+0
   \   00000718   0xD101             BNE.N    ??CAN_SetupAFLUT_83
   \   0000071A   0x2001             MOVS     R0,#+1
   \   0000071C   0xE000             B.N      ??CAN_SetupAFLUT_84
   \                     ??CAN_SetupAFLUT_83: (+1)
   \   0000071E   0x2000             MOVS     R0,#+0
   \                     ??CAN_SetupAFLUT_84: (+1)
   \   00000720   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000724   0x2901             CMP      R1,#+1
   \   00000726   0xD101             BNE.N    ??CAN_SetupAFLUT_85
   \   00000728   0x2101             MOVS     R1,#+1
   \   0000072A   0xE000             B.N      ??CAN_SetupAFLUT_86
   \                     ??CAN_SetupAFLUT_85: (+1)
   \   0000072C   0x2100             MOVS     R1,#+0
   \                     ??CAN_SetupAFLUT_86: (+1)
   \   0000072E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000730   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000732   0x4308             ORRS     R0,R1,R0
   \   00000734   0x2800             CMP      R0,#+0
   \   00000736   0xD104             BNE.N    ??CAN_SetupAFLUT_87
   \   00000738   0xF44F 0x71EB      MOV      R1,#+470
   \   0000073C   0x....             LDR.N    R0,??DataTable3_2
   \   0000073E   0x.... 0x....      BL       check_failed
    471          			CHECK_PARAM(PARAM_ID_29(lowerEID));
   \                     ??CAN_SetupAFLUT_87: (+1)
   \   00000742   0x9802             LDR      R0,[SP, #+8]
   \   00000744   0x0F40             LSRS     R0,R0,#+29
   \   00000746   0x2800             CMP      R0,#+0
   \   00000748   0xD004             BEQ.N    ??CAN_SetupAFLUT_88
   \   0000074A   0xF240 0x11D7      MOVW     R1,#+471
   \   0000074E   0x....             LDR.N    R0,??DataTable3_2
   \   00000750   0x.... 0x....      BL       check_failed
    472          			CHECK_PARAM(PARAM_ID_29(upperEID));
   \                     ??CAN_SetupAFLUT_88: (+1)
   \   00000754   0x9805             LDR      R0,[SP, #+20]
   \   00000756   0x0F40             LSRS     R0,R0,#+29
   \   00000758   0x2800             CMP      R0,#+0
   \   0000075A   0xD004             BEQ.N    ??CAN_SetupAFLUT_89
   \   0000075C   0xF44F 0x71EC      MOV      R1,#+472
   \   00000760   0x....             LDR.N    R0,??DataTable3_2
   \   00000762   0x.... 0x....      BL       check_failed
    473          
    474          			entry = 0x00;
   \                     ??CAN_SetupAFLUT_89: (+1)
   \   00000766   0x2000             MOVS     R0,#+0
   \   00000768   0x4680             MOV      R8,R0
    475          			if(CANAF_gext_cnt != 0)
   \   0000076A   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   0000076E   0x8800             LDRH     R0,[R0, #+0]
   \   00000770   0x2800             CMP      R0,#+0
   \   00000772   0xD010             BEQ.N    ??CAN_SetupAFLUT_90
    476          			{
    477          				buf = LPC_CANAF_RAM->mask[count-1];
   \   00000774   0x....             LDR.N    R0,??DataTable3_6  ;; 0x40038000
   \   00000776   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000077A   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   0000077E   0xF850 0x0C04      LDR      R0,[R0, #-4]
   \   00000782   0x4681             MOV      R9,R0
    478          				EID_temp = buf & 0x0FFFFFFF;
   \   00000784   0xF029 0x4070      BIC      R0,R9,#0xF0000000
   \   00000788   0x9003             STR      R0,[SP, #+12]
    479          				if(EID_temp > lowerEID)
   \   0000078A   0x9802             LDR      R0,[SP, #+8]
   \   0000078C   0x9903             LDR      R1,[SP, #+12]
   \   0000078E   0x4288             CMP      R0,R1
   \   00000790   0xD201             BCS.N    ??CAN_SetupAFLUT_90
    480          				{
    481          					return CAN_AF_ENTRY_ERROR;
   \   00000792   0x2005             MOVS     R0,#+5
   \   00000794   0xE062             B.N      ??CAN_SetupAFLUT_5
    482          				}
    483          			}
    484          			entry = (ctrl1 << 29)|(lowerEID << 0);
   \                     ??CAN_SetupAFLUT_90: (+1)
   \   00000796   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000798   0x9802             LDR      R0,[SP, #+8]
   \   0000079A   0xEA50 0x7045      ORRS     R0,R0,R5, LSL #+29
   \   0000079E   0x4680             MOV      R8,R0
    485          			LPC_CANAF_RAM->mask[count++] = entry;
   \   000007A0   0x....             LDR.N    R0,??DataTable3_6  ;; 0x40038000
   \   000007A2   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000007A6   0xF840 0x802A      STR      R8,[R0, R10, LSL #+2]
   \   000007AA   0xF11A 0x0A01      ADDS     R10,R10,#+1
    486          			entry = (ctrl2 << 29)|(upperEID << 0);
   \   000007AE   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000007B2   0x9905             LDR      R1,[SP, #+20]
   \   000007B4   0xEA51 0x7040      ORRS     R0,R1,R0, LSL #+29
   \   000007B8   0x4680             MOV      R8,R0
    487          			LPC_CANAF_RAM->mask[count++] = entry;
   \   000007BA   0x....             LDR.N    R0,??DataTable3_6  ;; 0x40038000
   \   000007BC   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000007C0   0xF840 0x802A      STR      R8,[R0, R10, LSL #+2]
   \   000007C4   0xF11A 0x0A01      ADDS     R10,R10,#+1
    488          			CANAF_gext_cnt++;
   \   000007C8   0x.... 0x....      LDR.W    R0,??DataTable5_2
   \   000007CC   0x8800             LDRH     R0,[R0, #+0]
   \   000007CE   0x1C40             ADDS     R0,R0,#+1
   \   000007D0   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000007D4   0x8008             STRH     R0,[R1, #+0]
    489          			AFSection->EFF_GPR_Sec = (EFF_GPR_Entry *)((uint32_t)(AFSection->EFF_GPR_Sec)+ sizeof(EFF_GPR_Entry));
   \   000007D6   0x6A20             LDR      R0,[R4, #+32]
   \   000007D8   0x300C             ADDS     R0,R0,#+12
   \   000007DA   0x6220             STR      R0,[R4, #+32]
    490          		}
   \   000007DC   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   000007E0   0xE763             B.N      ??CAN_SetupAFLUT_76
    491          	}
    492          	//update address values
    493          	LPC_CANAF->SFF_sa = ((CANAF_FullCAN_cnt + 1)>>1)<<2;
   \                     ??CAN_SetupAFLUT_75: (+1)
   \   000007E2   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   000007E6   0x8800             LDRH     R0,[R0, #+0]
   \   000007E8   0x1C40             ADDS     R0,R0,#+1
   \   000007EA   0x1040             ASRS     R0,R0,#+1
   \   000007EC   0x0080             LSLS     R0,R0,#+2
   \   000007EE   0x....             LDR.N    R1,??DataTable3_7  ;; 0x4003c004
   \   000007F0   0x6008             STR      R0,[R1, #+0]
    494          	LPC_CANAF->SFF_GRP_sa = LPC_CANAF->SFF_sa + (((CANAF_std_cnt+1)>>1)<< 2);
   \   000007F2   0x....             LDR.N    R0,??DataTable3_7  ;; 0x4003c004
   \   000007F4   0x6800             LDR      R0,[R0, #+0]
   \   000007F6   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   000007FA   0x8809             LDRH     R1,[R1, #+0]
   \   000007FC   0x1C49             ADDS     R1,R1,#+1
   \   000007FE   0x1049             ASRS     R1,R1,#+1
   \   00000800   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \   00000804   0x....             LDR.N    R1,??DataTable3_8  ;; 0x4003c008
   \   00000806   0x6008             STR      R0,[R1, #+0]
    495          	LPC_CANAF->EFF_sa = LPC_CANAF->SFF_GRP_sa + (CANAF_gstd_cnt << 2);
   \   00000808   0x....             LDR.N    R0,??DataTable3_8  ;; 0x4003c008
   \   0000080A   0x6800             LDR      R0,[R0, #+0]
   \   0000080C   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000810   0x8809             LDRH     R1,[R1, #+0]
   \   00000812   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \   00000816   0x....             LDR.N    R1,??DataTable3_9  ;; 0x4003c00c
   \   00000818   0x6008             STR      R0,[R1, #+0]
    496          	LPC_CANAF->EFF_GRP_sa = LPC_CANAF->EFF_sa + (CANAF_ext_cnt << 2);
   \   0000081A   0x....             LDR.N    R0,??DataTable3_9  ;; 0x4003c00c
   \   0000081C   0x6800             LDR      R0,[R0, #+0]
   \   0000081E   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000822   0x8809             LDRH     R1,[R1, #+0]
   \   00000824   0xEB10 0x0081      ADDS     R0,R0,R1, LSL #+2
   \   00000828   0x....             LDR.N    R1,??DataTable3_10  ;; 0x4003c010
   \   0000082A   0x6008             STR      R0,[R1, #+0]
    497          	LPC_CANAF->ENDofTable = LPC_CANAF->EFF_GRP_sa + (CANAF_gext_cnt << 3);
   \   0000082C   0x....             LDR.N    R0,??DataTable3_10  ;; 0x4003c010
   \   0000082E   0x6800             LDR      R0,[R0, #+0]
   \   00000830   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   00000834   0x8809             LDRH     R1,[R1, #+0]
   \   00000836   0xEB10 0x00C1      ADDS     R0,R0,R1, LSL #+3
   \   0000083A   0x....             LDR.N    R1,??DataTable3_11  ;; 0x4003c014
   \   0000083C   0x6008             STR      R0,[R1, #+0]
    498          
    499          	if(FULLCAN_ENABLE == DISABLE)
   \   0000083E   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000842   0x7800             LDRB     R0,[R0, #+0]
   \   00000844   0x2800             CMP      R0,#+0
   \   00000846   0xD104             BNE.N    ??CAN_SetupAFLUT_91
    500          	{
    501          		LPC_CANAF->AFMR = 0x00; // Normal mode
   \   00000848   0x2000             MOVS     R0,#+0
   \   0000084A   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   0000084E   0x6008             STR      R0,[R1, #+0]
   \   00000850   0xE003             B.N      ??CAN_SetupAFLUT_92
    502          	}
    503          	else
    504          	{
    505          		LPC_CANAF->AFMR = 0x04;
   \                     ??CAN_SetupAFLUT_91: (+1)
   \   00000852   0x2004             MOVS     R0,#+4
   \   00000854   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4003c000
   \   00000858   0x6008             STR      R0,[R1, #+0]
    506          	}
    507          	return CAN_OK;
   \                     ??CAN_SetupAFLUT_92: (+1)
   \   0000085A   0x2001             MOVS     R0,#+1
   \                     ??CAN_SetupAFLUT_5: (+1)
   \   0000085C   0xB007             ADD      SP,SP,#+28
   \   0000085E   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    508          }
    509          /********************************************************************//**
    510           * @brief		Add Explicit ID into AF Look-Up Table dynamically.
    511           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
    512           * 				- CAN1: CAN 1
    513           * 				- CAN2: CAN 2
    514           * @param[in]	id: The ID of entry will be added
    515           * @param[in]	format: is the type of ID Frame Format, should be:
    516           * 				- STD_ID_FORMAT: 11-bit ID value
    517           * 				- EXT_ID_FORMAT: 29-bit ID value
    518           * @return 		CAN Error, could be:
    519           * 				- CAN_OBJECTS_FULL_ERROR: No more rx or tx objects available
    520           * 				- CAN_ID_EXIT_ERROR: ID exited in table
    521           * 				- CAN_OK: ID is added into table successfully
    522           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    523          CAN_ERROR CAN_LoadExplicitEntry(LPC_CAN_TypeDef* CANx, uint32_t id, CAN_ID_FORMAT_Type format)
    524          {
   \                     CAN_LoadExplicitEntry: (+1)
   \   00000000   0xE92D 0x4FF5      PUSH     {R0,R2,R4-R11,LR}
   \   00000004   0xB081             SUB      SP,SP,#+4
   \   00000006   0x468A             MOV      R10,R1
    525          	uint32_t tmp0 = 0;
   \   00000008   0x2400             MOVS     R4,#+0
    526          	uint32_t buf0=0, buf1=0;
   \   0000000A   0x2500             MOVS     R5,#+0
   \   0000000C   0x2600             MOVS     R6,#+0
    527          	int16_t cnt1=0, cnt2=0, bound1=0, total=0;
   \   0000000E   0x2700             MOVS     R7,#+0
   \   00000010   0xF05F 0x0800      MOVS     R8,#+0
   \   00000014   0xF05F 0x0B00      MOVS     R11,#+0
   \   00000018   0xF05F 0x0900      MOVS     R9,#+0
    528          
    529          
    530          	CHECK_PARAM(PARAM_CANx(CANx));
   \   0000001C   0x9801             LDR      R0,[SP, #+4]
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40044000
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xD00A             BEQ.N    ??CAN_LoadExplicitEntry_0
   \   00000026   0x9801             LDR      R0,[SP, #+4]
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x40048000
   \   0000002C   0x4288             CMP      R0,R1
   \   0000002E   0xD005             BEQ.N    ??CAN_LoadExplicitEntry_0
   \   00000030   0xF240 0x2112      MOVW     R1,#+530
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000038   0x.... 0x....      BL       check_failed
    531          	CHECK_PARAM(PARAM_ID_FORMAT(format));
   \                     ??CAN_LoadExplicitEntry_0: (+1)
   \   0000003C   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD009             BEQ.N    ??CAN_LoadExplicitEntry_1
   \   00000044   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000048   0x2801             CMP      R0,#+1
   \   0000004A   0xD005             BEQ.N    ??CAN_LoadExplicitEntry_1
   \   0000004C   0xF240 0x2113      MOVW     R1,#+531
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000054   0x.... 0x....      BL       check_failed
    532          
    533          	if (CANx == LPC_CAN1)
   \                     ??CAN_LoadExplicitEntry_1: (+1)
   \   00000058   0x9801             LDR      R0,[SP, #+4]
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40044000
   \   0000005E   0x4288             CMP      R0,R1
   \   00000060   0xD102             BNE.N    ??CAN_LoadExplicitEntry_2
    534          	{
    535          		tmp0 = 0;
   \   00000062   0x2000             MOVS     R0,#+0
   \   00000064   0x0004             MOVS     R4,R0
   \   00000066   0xE006             B.N      ??CAN_LoadExplicitEntry_3
    536          	}
    537          	else if (CANx == LPC_CAN2)
   \                     ??CAN_LoadExplicitEntry_2: (+1)
   \   00000068   0x9801             LDR      R0,[SP, #+4]
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x40048000
   \   0000006E   0x4288             CMP      R0,R1
   \   00000070   0xD101             BNE.N    ??CAN_LoadExplicitEntry_3
    538          	{
    539          		tmp0 = 1;
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x0004             MOVS     R4,R0
    540          	}
    541          
    542          	/* Acceptance Filter Memory full - return */
    543          	total =((CANAF_FullCAN_cnt+1)>>1)+ CANAF_FullCAN_cnt*3 +((CANAF_std_cnt + 1) >> 1)+  \
    544          			CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \                     ??CAN_LoadExplicitEntry_3: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   0000007A   0x8800             LDRH     R0,[R0, #+0]
   \   0000007C   0x1C40             ADDS     R0,R0,#+1
   \   0000007E   0x1040             ASRS     R0,R0,#+1
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000084   0x8809             LDRH     R1,[R1, #+0]
   \   00000086   0x2203             MOVS     R2,#+3
   \   00000088   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00000090   0x8809             LDRH     R1,[R1, #+0]
   \   00000092   0x1C49             ADDS     R1,R1,#+1
   \   00000094   0xEB10 0x0061      ADDS     R0,R0,R1, ASR #+1
   \   00000098   0x.... 0x....      LDR.W    R1,??DataTable5
   \   0000009C   0x8809             LDRH     R1,[R1, #+0]
   \   0000009E   0x1808             ADDS     R0,R1,R0
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000000A4   0x8809             LDRH     R1,[R1, #+0]
   \   000000A6   0x1808             ADDS     R0,R1,R0
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000000AC   0x8809             LDRH     R1,[R1, #+0]
   \   000000AE   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000000B2   0x4681             MOV      R9,R0
    545          	if (total >= 512){ //don't have enough space
   \   000000B4   0xFA0F 0xF989      SXTH     R9,R9            ;; SignExt  R9,R9,#+16,#+16
   \   000000B8   0xF5B9 0x7F00      CMP      R9,#+512
   \   000000BC   0xDB01             BLT.N    ??CAN_LoadExplicitEntry_4
    546          		return CAN_OBJECTS_FULL_ERROR;
   \   000000BE   0x2002             MOVS     R0,#+2
   \   000000C0   0xE1AE             B.N      ??CAN_LoadExplicitEntry_5
    547          	}
    548          
    549          	/* Setup Acceptance Filter Configuration
    550              Acceptance Filter Mode Register = Off */
    551          	LPC_CANAF->AFMR = 0x00000001;
   \                     ??CAN_LoadExplicitEntry_4: (+1)
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0x....             LDR.N    R1,??DataTable4  ;; 0x4003c000
   \   000000C6   0x6008             STR      R0,[R1, #+0]
    552          
    553          /*********** Add Explicit Standard Identifier Frame Format entry *********/
    554           	if(format == STD_ID_FORMAT)
   \   000000C8   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   000000CC   0x2800             CMP      R0,#+0
   \   000000CE   0xF040 0x813F      BNE.W    ??CAN_LoadExplicitEntry_6
    555           	{
    556           		id &= 0x07FF;
   \   000000D2   0xEA5F 0x5A4A      LSLS     R10,R10,#+21     ;; ZeroExtS R10,R10,#+21,#+21
   \   000000D6   0xEA5F 0x5A5A      LSRS     R10,R10,#+21
    557           		id |= (tmp0 << 13); /* Add controller number */
   \   000000DA   0xEA5A 0x3A44      ORRS     R10,R10,R4, LSL #+13
    558          		/* Move all remaining sections one place up
    559          		if new entry will increase FullCAN list */
    560          		if ((CANAF_std_cnt & 0x0001) == 0)
   \   000000DE   0x....             LDR.N    R0,??DataTable4_3
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x07C0             LSLS     R0,R0,#+31
   \   000000E4   0xD426             BMI.N    ??CAN_LoadExplicitEntry_7
    561          		{
    562          			cnt1   = ((CANAF_FullCAN_cnt+1)>>1)+((CANAF_std_cnt+1)>>1);
   \   000000E6   0x....             LDR.N    R0,??DataTable4_2
   \   000000E8   0x8800             LDRH     R0,[R0, #+0]
   \   000000EA   0x1C40             ADDS     R0,R0,#+1
   \   000000EC   0x....             LDR.N    R1,??DataTable4_3
   \   000000EE   0x8809             LDRH     R1,[R1, #+0]
   \   000000F0   0x1C49             ADDS     R1,R1,#+1
   \   000000F2   0x1049             ASRS     R1,R1,#+1
   \   000000F4   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000000F8   0x0007             MOVS     R7,R0
    563          			bound1 = total - cnt1;
   \   000000FA   0xEBB9 0x0007      SUBS     R0,R9,R7
   \   000000FE   0x4683             MOV      R11,R0
    564          			buf0   = LPC_CANAF_RAM->mask[cnt1];
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000104   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000106   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   0000010A   0x0005             MOVS     R5,R0
    565          			while(bound1--)
   \                     ??CAN_LoadExplicitEntry_8: (+1)
   \   0000010C   0x4658             MOV      R0,R11
   \   0000010E   0xF1B0 0x0B01      SUBS     R11,R0,#+1
   \   00000112   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xD00D             BEQ.N    ??CAN_LoadExplicitEntry_7
    566          			{
    567          				cnt1++;
   \   00000118   0x1C7F             ADDS     R7,R7,#+1
    568          				buf1 = LPC_CANAF_RAM->mask[cnt1];
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   0000011E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000120   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000124   0x0006             MOVS     R6,R0
    569          				LPC_CANAF_RAM->mask[cnt1] = buf0;
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   0000012A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000012C   0xF840 0x5027      STR      R5,[R0, R7, LSL #+2]
    570          				buf0 = buf1;
   \   00000130   0x0035             MOVS     R5,R6
   \   00000132   0xE7EB             B.N      ??CAN_LoadExplicitEntry_8
    571          			}
    572          		}
    573          		if (CANAF_std_cnt == 0)
   \                     ??CAN_LoadExplicitEntry_7: (+1)
   \   00000134   0x....             LDR.N    R0,??DataTable4_3
   \   00000136   0x8800             LDRH     R0,[R0, #+0]
   \   00000138   0x2800             CMP      R0,#+0
   \   0000013A   0xD111             BNE.N    ??CAN_LoadExplicitEntry_9
    574          		{
    575          			cnt2 = (CANAF_FullCAN_cnt + 1)>>1;
   \   0000013C   0x....             LDR.N    R0,??DataTable4_2
   \   0000013E   0x8800             LDRH     R0,[R0, #+0]
   \   00000140   0x1C40             ADDS     R0,R0,#+1
   \   00000142   0x1040             ASRS     R0,R0,#+1
   \   00000144   0x4680             MOV      R8,R0
    576          			/* For entering first ID */
    577          			LPC_CANAF_RAM->mask[cnt2] = 0x0000FFFF | (id << 16);
   \   00000146   0xEA5F 0x400A      LSLS     R0,R10,#+16
   \   0000014A   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   0000014E   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   00000156   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000015A   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   0000015E   0xE0D5             B.N      ??CAN_LoadExplicitEntry_10
    578          		}
    579          		else if (CANAF_std_cnt == 1)
   \                     ??CAN_LoadExplicitEntry_9: (+1)
   \   00000160   0x....             LDR.N    R0,??DataTable4_3
   \   00000162   0x8800             LDRH     R0,[R0, #+0]
   \   00000164   0x2801             CMP      R0,#+1
   \   00000166   0xD12F             BNE.N    ??CAN_LoadExplicitEntry_11
    580          		{
    581          			cnt2 = (CANAF_FullCAN_cnt + 1)>>1;
   \   00000168   0x....             LDR.N    R0,??DataTable4_2
   \   0000016A   0x8800             LDRH     R0,[R0, #+0]
   \   0000016C   0x1C40             ADDS     R0,R0,#+1
   \   0000016E   0x1040             ASRS     R0,R0,#+1
   \   00000170   0x4680             MOV      R8,R0
    582          			/* For entering second ID */
    583          			if ((LPC_CANAF_RAM->mask[cnt2] >> 16) > id)
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000176   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000017A   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   0000017E   0xEBBA 0x4F10      CMP      R10,R0, LSR #+16
   \   00000182   0xD210             BCS.N    ??CAN_LoadExplicitEntry_12
    584          			{
    585          				LPC_CANAF_RAM->mask[cnt2] = (LPC_CANAF_RAM->mask[cnt2] >> 16) | (id << 16);
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000188   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000018C   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   00000190   0xEA5F 0x410A      LSLS     R1,R10,#+16
   \   00000194   0xEA51 0x4010      ORRS     R0,R1,R0, LSR #+16
   \   00000198   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   0000019C   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001A0   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   000001A4   0xE0B2             B.N      ??CAN_LoadExplicitEntry_10
    586          			}
    587          			else
    588          			{
    589          				LPC_CANAF_RAM->mask[cnt2] = (LPC_CANAF_RAM->mask[cnt2] & 0xFFFF0000) | id;
   \                     ??CAN_LoadExplicitEntry_12: (+1)
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000001AA   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001AE   0xF850 0x0028      LDR      R0,[R0, R8, LSL #+2]
   \   000001B2   0x0C00             LSRS     R0,R0,#+16
   \   000001B4   0x0400             LSLS     R0,R0,#+16
   \   000001B6   0xEA5A 0x0000      ORRS     R0,R10,R0
   \   000001BA   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   000001BE   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000001C2   0xF841 0x0028      STR      R0,[R1, R8, LSL #+2]
   \   000001C6   0xE0A1             B.N      ??CAN_LoadExplicitEntry_10
    590          			}
    591          		}
    592          		else
    593          		{
    594          			/* Find where to insert new ID */
    595          			cnt1 = (CANAF_FullCAN_cnt+1)>>1;
   \                     ??CAN_LoadExplicitEntry_11: (+1)
   \   000001C8   0x....             LDR.N    R0,??DataTable4_2
   \   000001CA   0x8800             LDRH     R0,[R0, #+0]
   \   000001CC   0x1C40             ADDS     R0,R0,#+1
   \   000001CE   0x1040             ASRS     R0,R0,#+1
   \   000001D0   0x0007             MOVS     R7,R0
    596          			cnt2 = CANAF_std_cnt;
   \   000001D2   0x....             LDR.N    R0,??DataTable4_3
   \   000001D4   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001D8   0x4680             MOV      R8,R0
    597          			bound1 = ((CANAF_FullCAN_cnt+1)>>1)+((CANAF_std_cnt+1)>>1);
   \   000001DA   0x....             LDR.N    R0,??DataTable4_2
   \   000001DC   0x8800             LDRH     R0,[R0, #+0]
   \   000001DE   0x1C40             ADDS     R0,R0,#+1
   \   000001E0   0x....             LDR.N    R1,??DataTable4_3
   \   000001E2   0x8809             LDRH     R1,[R1, #+0]
   \   000001E4   0x1C49             ADDS     R1,R1,#+1
   \   000001E6   0x1049             ASRS     R1,R1,#+1
   \   000001E8   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000001EC   0x4683             MOV      R11,R0
    598          			while (cnt1 < bound1)
   \                     ??CAN_LoadExplicitEntry_13: (+1)
   \   000001EE   0x0038             MOVS     R0,R7
   \   000001F0   0x4659             MOV      R1,R11
   \   000001F2   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001F4   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000001F6   0x4288             CMP      R0,R1
   \   000001F8   0xDA1A             BGE.N    ??CAN_LoadExplicitEntry_14
    599          			{
    600          				/* Loop through standard existing IDs */
    601          				if ((LPC_CANAF_RAM->mask[cnt1] >> 16) > id)
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000001FE   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000200   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000204   0xEBBA 0x4F10      CMP      R10,R0, LSR #+16
   \   00000208   0xD203             BCS.N    ??CAN_LoadExplicitEntry_15
    602          				{
    603          					cnt2 = cnt1 * 2;
   \   0000020A   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000020C   0x0078             LSLS     R0,R7,#+1
   \   0000020E   0x4680             MOV      R8,R0
    604          					break;
   \   00000210   0xE00E             B.N      ??CAN_LoadExplicitEntry_14
    605          				}
    606          
    607          				if ((LPC_CANAF_RAM->mask[cnt1] & 0x0000FFFF) > id)
   \                     ??CAN_LoadExplicitEntry_15: (+1)
   \   00000212   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000216   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000218   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   0000021C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000021E   0x4582             CMP      R10,R0
   \   00000220   0xD204             BCS.N    ??CAN_LoadExplicitEntry_16
    608          				{
    609          					cnt2 = cnt1 * 2 + 1;
   \   00000222   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000224   0x0078             LSLS     R0,R7,#+1
   \   00000226   0x1C40             ADDS     R0,R0,#+1
   \   00000228   0x4680             MOV      R8,R0
    610          					break;
   \   0000022A   0xE001             B.N      ??CAN_LoadExplicitEntry_14
    611          				}
    612          
    613          				cnt1++;
   \                     ??CAN_LoadExplicitEntry_16: (+1)
   \   0000022C   0x1C7F             ADDS     R7,R7,#+1
   \   0000022E   0xE7DE             B.N      ??CAN_LoadExplicitEntry_13
    614          			}
    615          			/* cnt1 = U32 where to insert new ID */
    616          			/* cnt2 = U16 where to insert new ID */
    617          
    618          			if (cnt1 == bound1)
   \                     ??CAN_LoadExplicitEntry_14: (+1)
   \   00000230   0x0038             MOVS     R0,R7
   \   00000232   0x4659             MOV      R1,R11
   \   00000234   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000236   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000238   0x4288             CMP      R0,R1
   \   0000023A   0xD11E             BNE.N    ??CAN_LoadExplicitEntry_17
    619          			{
    620          				/* Adding ID as last entry */
    621          				/* Even number of IDs exists */
    622          				if ((CANAF_std_cnt & 0x0001) == 0)
   \   0000023C   0x....             LDR.N    R0,??DataTable4_3
   \   0000023E   0x7800             LDRB     R0,[R0, #+0]
   \   00000240   0x07C0             LSLS     R0,R0,#+31
   \   00000242   0xD40B             BMI.N    ??CAN_LoadExplicitEntry_18
    623          				{
    624          					LPC_CANAF_RAM->mask[cnt1]  = 0x0000FFFF | (id << 16);
   \   00000244   0xEA5F 0x400A      LSLS     R0,R10,#+16
   \   00000248   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   0000024C   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000250   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   00000254   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000256   0xF841 0x0027      STR      R0,[R1, R7, LSL #+2]
   \   0000025A   0xE057             B.N      ??CAN_LoadExplicitEntry_10
    625          				}
    626          				/* Odd  number of IDs exists */
    627          				else
    628          				{
    629          					LPC_CANAF_RAM->mask[cnt1]  = (LPC_CANAF_RAM->mask[cnt1] & 0xFFFF0000) | id;
   \                     ??CAN_LoadExplicitEntry_18: (+1)
   \   0000025C   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000260   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000262   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000266   0x0C00             LSRS     R0,R0,#+16
   \   00000268   0x0400             LSLS     R0,R0,#+16
   \   0000026A   0xEA5A 0x0000      ORRS     R0,R10,R0
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   00000272   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000274   0xF841 0x0027      STR      R0,[R1, R7, LSL #+2]
   \   00000278   0xE048             B.N      ??CAN_LoadExplicitEntry_10
    630          				}
    631          			}
    632          			else
    633          			{
    634          				buf0 = LPC_CANAF_RAM->mask[cnt1]; /* Remember current entry */
   \                     ??CAN_LoadExplicitEntry_17: (+1)
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   0000027E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000280   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   00000284   0x0005             MOVS     R5,R0
    635          				if ((cnt2 & 0x0001) == 0)
   \   00000286   0xEA5F 0x70C8      LSLS     R0,R8,#+31
   \   0000028A   0xD404             BMI.N    ??CAN_LoadExplicitEntry_19
    636          				{
    637          					/* Insert new mask to even address*/
    638          					buf1 = (id << 16) | (buf0 >> 16);
   \   0000028C   0x0C28             LSRS     R0,R5,#+16
   \   0000028E   0xEA50 0x400A      ORRS     R0,R0,R10, LSL #+16
   \   00000292   0x0006             MOVS     R6,R0
   \   00000294   0xE004             B.N      ??CAN_LoadExplicitEntry_20
    639          				}
    640          				else
    641          				{
    642          					/* Insert new mask to odd  address */
    643          					buf1 = (buf0 & 0xFFFF0000) | id;
   \                     ??CAN_LoadExplicitEntry_19: (+1)
   \   00000296   0x0C28             LSRS     R0,R5,#+16
   \   00000298   0x0400             LSLS     R0,R0,#+16
   \   0000029A   0xEA5A 0x0000      ORRS     R0,R10,R0
   \   0000029E   0x0006             MOVS     R6,R0
    644          				}
    645          				LPC_CANAF_RAM->mask[cnt1] = buf1;/* Insert mask */
   \                     ??CAN_LoadExplicitEntry_20: (+1)
   \   000002A0   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000002A4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002A6   0xF840 0x6027      STR      R6,[R0, R7, LSL #+2]
    646          				bound1 = ((CANAF_FullCAN_cnt+1)>>1)+((CANAF_std_cnt+1)>>1)-1;
   \   000002AA   0x....             LDR.N    R0,??DataTable4_2
   \   000002AC   0x8800             LDRH     R0,[R0, #+0]
   \   000002AE   0x1C40             ADDS     R0,R0,#+1
   \   000002B0   0x....             LDR.N    R1,??DataTable4_3
   \   000002B2   0x8809             LDRH     R1,[R1, #+0]
   \   000002B4   0x1C49             ADDS     R1,R1,#+1
   \   000002B6   0x1049             ASRS     R1,R1,#+1
   \   000002B8   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000002BC   0x1E40             SUBS     R0,R0,#+1
   \   000002BE   0x4683             MOV      R11,R0
    647          				/* Move all remaining standard mask entries one place up */
    648          				while (cnt1 < bound1)
   \                     ??CAN_LoadExplicitEntry_21: (+1)
   \   000002C0   0x0038             MOVS     R0,R7
   \   000002C2   0x4659             MOV      R1,R11
   \   000002C4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000002C6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000002C8   0x4288             CMP      R0,R1
   \   000002CA   0xDA10             BGE.N    ??CAN_LoadExplicitEntry_22
    649          				{
    650          					cnt1++;
   \   000002CC   0x1C7F             ADDS     R7,R7,#+1
    651          					buf1  = LPC_CANAF_RAM->mask[cnt1];
   \   000002CE   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000002D2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002D4   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000002D8   0x0006             MOVS     R6,R0
    652          					LPC_CANAF_RAM->mask[cnt1] = (buf1 >> 16) | (buf0 << 16);
   \   000002DA   0x0428             LSLS     R0,R5,#+16
   \   000002DC   0xEA50 0x4016      ORRS     R0,R0,R6, LSR #+16
   \   000002E0   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   000002E4   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000002E6   0xF841 0x0027      STR      R0,[R1, R7, LSL #+2]
    653          					buf0  = buf1;
   \   000002EA   0x0035             MOVS     R5,R6
   \   000002EC   0xE7E8             B.N      ??CAN_LoadExplicitEntry_21
    654          				}
    655          
    656          				if ((CANAF_std_cnt & 0x0001) == 0)
   \                     ??CAN_LoadExplicitEntry_22: (+1)
   \   000002EE   0x....             LDR.N    R0,??DataTable4_3
   \   000002F0   0x7800             LDRB     R0,[R0, #+0]
   \   000002F2   0x07C0             LSLS     R0,R0,#+31
   \   000002F4   0xD40A             BMI.N    ??CAN_LoadExplicitEntry_10
    657          				{
    658          					/* Even number of IDs exists */
    659          					LPC_CANAF_RAM->mask[cnt1+1] = (buf0 <<16) |(0x0000FFFF);
   \   000002F6   0x0428             LSLS     R0,R5,#+16
   \   000002F8   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   000002FC   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000300   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   00000304   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000306   0xEB01 0x0187      ADD      R1,R1,R7, LSL #+2
   \   0000030A   0x6048             STR      R0,[R1, #+4]
    660          				}
    661          			}
    662          		}
    663          		CANAF_std_cnt++;
   \                     ??CAN_LoadExplicitEntry_10: (+1)
   \   0000030C   0x....             LDR.N    R0,??DataTable4_3
   \   0000030E   0x8800             LDRH     R0,[R0, #+0]
   \   00000310   0x1C40             ADDS     R0,R0,#+1
   \   00000312   0x....             LDR.N    R1,??DataTable4_3
   \   00000314   0x8008             STRH     R0,[R1, #+0]
    664          		//update address values
    665          		LPC_CANAF->SFF_GRP_sa +=0x04 ;
   \   00000316   0x.... 0x....      LDR.W    R0,??DataTable6_4  ;; 0x4003c008
   \   0000031A   0x6800             LDR      R0,[R0, #+0]
   \   0000031C   0x1D00             ADDS     R0,R0,#+4
   \   0000031E   0x.... 0x....      LDR.W    R1,??DataTable6_4  ;; 0x4003c008
   \   00000322   0x6008             STR      R0,[R1, #+0]
    666          		LPC_CANAF->EFF_sa     +=0x04 ;
   \   00000324   0x.... 0x....      LDR.W    R0,??DataTable6_5  ;; 0x4003c00c
   \   00000328   0x6800             LDR      R0,[R0, #+0]
   \   0000032A   0x1D00             ADDS     R0,R0,#+4
   \   0000032C   0x.... 0x....      LDR.W    R1,??DataTable6_5  ;; 0x4003c00c
   \   00000330   0x6008             STR      R0,[R1, #+0]
    667          		LPC_CANAF->EFF_GRP_sa +=0x04;
   \   00000332   0x.... 0x....      LDR.W    R0,??DataTable6_6  ;; 0x4003c010
   \   00000336   0x6800             LDR      R0,[R0, #+0]
   \   00000338   0x1D00             ADDS     R0,R0,#+4
   \   0000033A   0x.... 0x....      LDR.W    R1,??DataTable6_6  ;; 0x4003c010
   \   0000033E   0x6008             STR      R0,[R1, #+0]
    668          		LPC_CANAF->ENDofTable +=0x04;
   \   00000340   0x.... 0x....      LDR.W    R0,??DataTable6_7  ;; 0x4003c014
   \   00000344   0x6800             LDR      R0,[R0, #+0]
   \   00000346   0x1D00             ADDS     R0,R0,#+4
   \   00000348   0x.... 0x....      LDR.W    R1,??DataTable6_7  ;; 0x4003c014
   \   0000034C   0x6008             STR      R0,[R1, #+0]
   \   0000034E   0xE05B             B.N      ??CAN_LoadExplicitEntry_23
    669           	}
    670          
    671          /*********** Add Explicit Extended Identifier Frame Format entry *********/
    672           	else
    673           	{
    674           		/* Add controller number */
    675           		id |= (tmp0) << 29;
   \                     ??CAN_LoadExplicitEntry_6: (+1)
   \   00000350   0xEA5A 0x7A44      ORRS     R10,R10,R4, LSL #+29
    676          
    677           		cnt1 = ((CANAF_FullCAN_cnt+1)>>1)+(((CANAF_std_cnt + 1) >> 1) + CANAF_gstd_cnt);
   \   00000354   0x....             LDR.N    R0,??DataTable4_2
   \   00000356   0x8800             LDRH     R0,[R0, #+0]
   \   00000358   0x1C40             ADDS     R0,R0,#+1
   \   0000035A   0x....             LDR.N    R1,??DataTable4_3
   \   0000035C   0x8809             LDRH     R1,[R1, #+0]
   \   0000035E   0x1C49             ADDS     R1,R1,#+1
   \   00000360   0x1049             ASRS     R1,R1,#+1
   \   00000362   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   00000366   0x.... 0x....      LDR.W    R1,??DataTable5
   \   0000036A   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000036E   0x1808             ADDS     R0,R1,R0
   \   00000370   0x0007             MOVS     R7,R0
    678           		cnt2 = 0;
   \   00000372   0x2000             MOVS     R0,#+0
   \   00000374   0x4680             MOV      R8,R0
    679           		while (cnt2 < CANAF_ext_cnt)
   \                     ??CAN_LoadExplicitEntry_24: (+1)
   \   00000376   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   0000037A   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   0000037E   0x8800             LDRH     R0,[R0, #+0]
   \   00000380   0x4580             CMP      R8,R0
   \   00000382   0xDA0A             BGE.N    ??CAN_LoadExplicitEntry_25
    680           		{
    681           			/* Loop through extended existing masks*/
    682           			if (LPC_CANAF_RAM->mask[cnt1] > id)
   \   00000384   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000388   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   0000038A   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   0000038E   0x4582             CMP      R10,R0
   \   00000390   0xD303             BCC.N    ??CAN_LoadExplicitEntry_25
    683           			{
    684           				break;
    685           			}
    686           			cnt1++;/* cnt1 = U32 where to insert new mask */
   \                     ??CAN_LoadExplicitEntry_26: (+1)
   \   00000392   0x1C7F             ADDS     R7,R7,#+1
    687          			cnt2++;
   \   00000394   0xF118 0x0801      ADDS     R8,R8,#+1
   \   00000398   0xE7ED             B.N      ??CAN_LoadExplicitEntry_24
    688           		}
    689          
    690           		buf0 = LPC_CANAF_RAM->mask[cnt1];  /* Remember current entry */
   \                     ??CAN_LoadExplicitEntry_25: (+1)
   \   0000039A   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   0000039E   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003A0   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000003A4   0x0005             MOVS     R5,R0
    691           		LPC_CANAF_RAM->mask[cnt1] = id;    /* Insert mask */
   \   000003A6   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000003AA   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003AC   0xF840 0xA027      STR      R10,[R0, R7, LSL #+2]
    692          
    693           		CANAF_ext_cnt++;
   \   000003B0   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   000003B4   0x8800             LDRH     R0,[R0, #+0]
   \   000003B6   0x1C40             ADDS     R0,R0,#+1
   \   000003B8   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   000003BC   0x8008             STRH     R0,[R1, #+0]
    694          
    695           		bound1 = total;
   \   000003BE   0x46CB             MOV      R11,R9
    696           		/* Move all remaining extended mask entries one place up*/
    697           		while (cnt2 < bound1)
   \                     ??CAN_LoadExplicitEntry_27: (+1)
   \   000003C0   0x4640             MOV      R0,R8
   \   000003C2   0x4659             MOV      R1,R11
   \   000003C4   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003C6   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000003C8   0x4288             CMP      R0,R1
   \   000003CA   0xDA0F             BGE.N    ??CAN_LoadExplicitEntry_28
    698           		{
    699           			cnt1++;
   \   000003CC   0x1C7F             ADDS     R7,R7,#+1
    700           			cnt2++;
   \   000003CE   0xF118 0x0801      ADDS     R8,R8,#+1
    701           			buf1 = LPC_CANAF_RAM->mask[cnt1];
   \   000003D2   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000003D6   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003D8   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000003DC   0x0006             MOVS     R6,R0
    702           			LPC_CANAF_RAM->mask[cnt1] = buf0;
   \   000003DE   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000003E2   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   000003E4   0xF840 0x5027      STR      R5,[R0, R7, LSL #+2]
    703           			buf0 = buf1;
   \   000003E8   0x0035             MOVS     R5,R6
   \   000003EA   0xE7E9             B.N      ??CAN_LoadExplicitEntry_27
    704           		}
    705           		/* update address values */
    706           		LPC_CANAF->EFF_GRP_sa += 4;
   \                     ??CAN_LoadExplicitEntry_28: (+1)
   \   000003EC   0x.... 0x....      LDR.W    R0,??DataTable6_6  ;; 0x4003c010
   \   000003F0   0x6800             LDR      R0,[R0, #+0]
   \   000003F2   0x1D00             ADDS     R0,R0,#+4
   \   000003F4   0x.... 0x....      LDR.W    R1,??DataTable6_6  ;; 0x4003c010
   \   000003F8   0x6008             STR      R0,[R1, #+0]
    707           		LPC_CANAF->ENDofTable += 4;
   \   000003FA   0x.... 0x....      LDR.W    R0,??DataTable6_7  ;; 0x4003c014
   \   000003FE   0x6800             LDR      R0,[R0, #+0]
   \   00000400   0x1D00             ADDS     R0,R0,#+4
   \   00000402   0x.... 0x....      LDR.W    R1,??DataTable6_7  ;; 0x4003c014
   \   00000406   0x6008             STR      R0,[R1, #+0]
    708           	}
    709           	if(CANAF_FullCAN_cnt == 0) //not use FullCAN mode
   \                     ??CAN_LoadExplicitEntry_23: (+1)
   \   00000408   0x....             LDR.N    R0,??DataTable4_2
   \   0000040A   0x8800             LDRH     R0,[R0, #+0]
   \   0000040C   0x2800             CMP      R0,#+0
   \   0000040E   0xD103             BNE.N    ??CAN_LoadExplicitEntry_29
    710           	{
    711           		LPC_CANAF->AFMR = 0x00;//not use FullCAN mode
   \   00000410   0x2000             MOVS     R0,#+0
   \   00000412   0x....             LDR.N    R1,??DataTable4  ;; 0x4003c000
   \   00000414   0x6008             STR      R0,[R1, #+0]
   \   00000416   0xE002             B.N      ??CAN_LoadExplicitEntry_30
    712           	}
    713           	else
    714           	{
    715           		LPC_CANAF->AFMR = 0x04;
   \                     ??CAN_LoadExplicitEntry_29: (+1)
   \   00000418   0x2004             MOVS     R0,#+4
   \   0000041A   0x....             LDR.N    R1,??DataTable4  ;; 0x4003c000
   \   0000041C   0x6008             STR      R0,[R1, #+0]
    716           	}
    717          
    718           	return CAN_OK;
   \                     ??CAN_LoadExplicitEntry_30: (+1)
   \   0000041E   0x2001             MOVS     R0,#+1
   \                     ??CAN_LoadExplicitEntry_5: (+1)
   \   00000420   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
    719          }
    720          
    721          /********************************************************************//**
    722           * @brief		Load FullCAN entry into AFLUT
    723           * @param[in]	CANx: CAN peripheral selected, should be:
    724           * 				- CAN1: CAN 1
    725           * 				- CAN2: CAN 2
    726           * @param[in]	id: identifier of entry that will be added
    727           * @return 		CAN_ERROR, could be:
    728           * 				- CAN_OK: loading is successful
    729           * 				- CAN_ID_EXIT_ERROR: ID exited in FullCAN Section
    730           * 				- CAN_OBJECTS_FULL_ERROR: no more space available
    731           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    732          CAN_ERROR CAN_LoadFullCANEntry (LPC_CAN_TypeDef* CANx, uint16_t id)
    733          {
   \                     CAN_LoadFullCANEntry: (+1)
   \   00000000   0xE92D 0x4FF1      PUSH     {R0,R4-R11,LR}
   \   00000004   0xB084             SUB      SP,SP,#+16
   \   00000006   0x4689             MOV      R9,R1
    734          	uint32_t ctrl0 = 0;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x9000             STR      R0,[SP, #+0]
    735          	uint32_t buf0=0, buf1=0, buf2=0;
   \   0000000C   0x2400             MOVS     R4,#+0
   \   0000000E   0x2500             MOVS     R5,#+0
   \   00000010   0x2600             MOVS     R6,#+0
    736          	uint32_t tmp0=0, tmp1=0, tmp2=0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x9003             STR      R0,[SP, #+12]
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x9002             STR      R0,[SP, #+8]
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x9001             STR      R0,[SP, #+4]
    737          	int16_t cnt1=0, cnt2=0, bound1=0, total=0;
   \   0000001E   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000022   0x2700             MOVS     R7,#+0
   \   00000024   0xF05F 0x0B00      MOVS     R11,#+0
   \   00000028   0xF05F 0x0800      MOVS     R8,#+0
    738          
    739          	CHECK_PARAM(PARAM_CANx(CANx));
   \   0000002C   0x9804             LDR      R0,[SP, #+16]
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40044000
   \   00000032   0x4288             CMP      R0,R1
   \   00000034   0xD00A             BEQ.N    ??CAN_LoadFullCANEntry_0
   \   00000036   0x9804             LDR      R0,[SP, #+16]
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x40048000
   \   0000003C   0x4288             CMP      R0,R1
   \   0000003E   0xD005             BEQ.N    ??CAN_LoadFullCANEntry_0
   \   00000040   0xF240 0x21E3      MOVW     R1,#+739
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000048   0x.... 0x....      BL       check_failed
    740          
    741          	if (CANx == LPC_CAN1)
   \                     ??CAN_LoadFullCANEntry_0: (+1)
   \   0000004C   0x9804             LDR      R0,[SP, #+16]
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40044000
   \   00000052   0x4288             CMP      R0,R1
   \   00000054   0xD102             BNE.N    ??CAN_LoadFullCANEntry_1
    742          	{
    743          		ctrl0 = 0;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x9000             STR      R0,[SP, #+0]
   \   0000005A   0xE006             B.N      ??CAN_LoadFullCANEntry_2
    744          	}
    745          	else if (CANx == LPC_CAN2)
   \                     ??CAN_LoadFullCANEntry_1: (+1)
   \   0000005C   0x9804             LDR      R0,[SP, #+16]
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x40048000
   \   00000062   0x4288             CMP      R0,R1
   \   00000064   0xD101             BNE.N    ??CAN_LoadFullCANEntry_2
    746          	{
    747          		ctrl0 = 1;
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0x9000             STR      R0,[SP, #+0]
    748          	}
    749          
    750          	/* Acceptance Filter Memory full - return */
    751          	total =((CANAF_FullCAN_cnt+1)>>1)+ CANAF_FullCAN_cnt*3 +((CANAF_std_cnt + 1) >> 1)+  \
    752          			CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \                     ??CAN_LoadFullCANEntry_2: (+1)
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000006E   0x8800             LDRH     R0,[R0, #+0]
   \   00000070   0x1C40             ADDS     R0,R0,#+1
   \   00000072   0x1040             ASRS     R0,R0,#+1
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   00000078   0x8809             LDRH     R1,[R1, #+0]
   \   0000007A   0x2203             MOVS     R2,#+3
   \   0000007C   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000084   0x8809             LDRH     R1,[R1, #+0]
   \   00000086   0x1C49             ADDS     R1,R1,#+1
   \   00000088   0xEB10 0x0061      ADDS     R0,R0,R1, ASR #+1
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000090   0x8809             LDRH     R1,[R1, #+0]
   \   00000092   0x1808             ADDS     R0,R1,R0
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00000098   0x8809             LDRH     R1,[R1, #+0]
   \   0000009A   0x1808             ADDS     R0,R1,R0
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable5_2
   \   000000A0   0x8809             LDRH     R1,[R1, #+0]
   \   000000A2   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000000A6   0x4680             MOV      R8,R0
    753          	//don't have enough space for this fullCAN Entry and its Object(3*32 bytes)
    754          	if ((total >=508)||(CANAF_FullCAN_cnt>=64)){
   \   000000A8   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000AC   0xF5B8 0x7FFE      CMP      R8,#+508
   \   000000B0   0xDA04             BGE.N    ??CAN_LoadFullCANEntry_3
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000B6   0x8800             LDRH     R0,[R0, #+0]
   \   000000B8   0x2840             CMP      R0,#+64
   \   000000BA   0xDB01             BLT.N    ??CAN_LoadFullCANEntry_4
    755          		return CAN_OBJECTS_FULL_ERROR;
   \                     ??CAN_LoadFullCANEntry_3: (+1)
   \   000000BC   0x2002             MOVS     R0,#+2
   \   000000BE   0xE1D5             B.N      ??CAN_LoadFullCANEntry_5
    756          	}
    757          	/* Setup Acceptance Filter Configuration
    758              Acceptance Filter Mode Register = Off */
    759          	LPC_CANAF->AFMR = 0x00000001;
   \                     ??CAN_LoadFullCANEntry_4: (+1)
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable6_10  ;; 0x4003c000
   \   000000C6   0x6008             STR      R0,[R1, #+0]
    760          
    761          	/* Add mask for standard identifiers   */
    762          	id &= 0x07FF;
   \   000000C8   0xEA5F 0x5949      LSLS     R9,R9,#+21       ;; ZeroExtS R9,R9,#+21,#+21
   \   000000CC   0xEA5F 0x5959      LSRS     R9,R9,#+21
    763          	id |= (ctrl0 << 13) | (1 << 11); /* Add controller number */
   \   000000D0   0x9800             LDR      R0,[SP, #+0]
   \   000000D2   0x0340             LSLS     R0,R0,#+13
   \   000000D4   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   000000D8   0xEA50 0x0909      ORRS     R9,R0,R9
    764          //	total = ((CANAF_std_cnt + 1) >> 1)+ CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
    765          	/* Move all remaining sections one place up
    766          	if new entry will increase FullCAN list */
    767          	if (((CANAF_FullCAN_cnt & 0x0001) == 0)&&(total!=0))
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000E0   0x7800             LDRB     R0,[R0, #+0]
   \   000000E2   0x07C0             LSLS     R0,R0,#+31
   \   000000E4   0xD429             BMI.N    ??CAN_LoadFullCANEntry_6
   \   000000E6   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   000000EA   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000EE   0xD024             BEQ.N    ??CAN_LoadFullCANEntry_6
    768          	{
    769          		//then remove remaining section
    770          		cnt1   = (CANAF_FullCAN_cnt >> 1);
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000F4   0x8800             LDRH     R0,[R0, #+0]
   \   000000F6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000F8   0x0840             LSRS     R0,R0,#+1
   \   000000FA   0x4682             MOV      R10,R0
    771          		bound1 = total;
   \   000000FC   0x46C3             MOV      R11,R8
    772          		buf0   = LPC_CANAF_RAM->mask[cnt1];
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000102   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000106   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000010A   0x0004             MOVS     R4,R0
    773          
    774          		while (bound1--)
   \                     ??CAN_LoadFullCANEntry_7: (+1)
   \   0000010C   0x4658             MOV      R0,R11
   \   0000010E   0xF1B0 0x0B01      SUBS     R11,R0,#+1
   \   00000112   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000114   0x2800             CMP      R0,#+0
   \   00000116   0xD010             BEQ.N    ??CAN_LoadFullCANEntry_6
    775          		{
    776          			cnt1++;
   \   00000118   0xF11A 0x0A01      ADDS     R10,R10,#+1
    777          			buf1 = LPC_CANAF_RAM->mask[cnt1];
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000120   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000124   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000128   0x0005             MOVS     R5,R0
    778          			LPC_CANAF_RAM->mask[cnt1] = buf0;
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   0000012E   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000132   0xF840 0x402A      STR      R4,[R0, R10, LSL #+2]
    779          			buf0 = buf1;
   \   00000136   0x002C             MOVS     R4,R5
   \   00000138   0xE7E8             B.N      ??CAN_LoadFullCANEntry_7
    780          		}
    781          	}
    782          	if (CANAF_FullCAN_cnt == 0)
   \                     ??CAN_LoadFullCANEntry_6: (+1)
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000013E   0x8800             LDRH     R0,[R0, #+0]
   \   00000140   0x2800             CMP      R0,#+0
   \   00000142   0xD10B             BNE.N    ??CAN_LoadFullCANEntry_8
    783          	{
    784          		/* For entering first ID */
    785          		LPC_CANAF_RAM->mask[0] = 0x0000FFFF | (id << 16);
   \   00000144   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000148   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   0000014C   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   00000150   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000154   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   00000158   0x6008             STR      R0,[R1, #+0]
   \   0000015A   0xE0DE             B.N      ??CAN_LoadFullCANEntry_9
    786          	}
    787          	else if (CANAF_FullCAN_cnt == 1)
   \                     ??CAN_LoadFullCANEntry_8: (+1)
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000160   0x8800             LDRH     R0,[R0, #+0]
   \   00000162   0x2801             CMP      R0,#+1
   \   00000164   0xD121             BNE.N    ??CAN_LoadFullCANEntry_10
    788          	{
    789          		/* For entering second ID */
    790          		if ((LPC_CANAF_RAM->mask[0] >> 16) > id)
   \   00000166   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   0000016E   0x6800             LDR      R0,[R0, #+0]
   \   00000170   0xEBB9 0x4F10      CMP      R9,R0, LSR #+16
   \   00000174   0xD20C             BCS.N    ??CAN_LoadFullCANEntry_11
    791          		{
    792          			LPC_CANAF_RAM->mask[0] = (LPC_CANAF_RAM->mask[0] >> 16) | (id << 16);
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   0000017A   0x6800             LDR      R0,[R0, #+0]
   \   0000017C   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000180   0xEA5F 0x4109      LSLS     R1,R9,#+16
   \   00000184   0xEA51 0x4010      ORRS     R0,R1,R0, LSR #+16
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   0000018C   0x6008             STR      R0,[R1, #+0]
   \   0000018E   0xE0C4             B.N      ??CAN_LoadFullCANEntry_9
    793          		}
    794          		else
    795          		{
    796          			LPC_CANAF_RAM->mask[0] = (LPC_CANAF_RAM->mask[0] & 0xFFFF0000) | id;
   \                     ??CAN_LoadFullCANEntry_11: (+1)
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000194   0x6800             LDR      R0,[R0, #+0]
   \   00000196   0x0C00             LSRS     R0,R0,#+16
   \   00000198   0x0400             LSLS     R0,R0,#+16
   \   0000019A   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000019E   0xEA59 0x0000      ORRS     R0,R9,R0
   \   000001A2   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   000001A6   0x6008             STR      R0,[R1, #+0]
   \   000001A8   0xE0B7             B.N      ??CAN_LoadFullCANEntry_9
    797          		}
    798          	}
    799          	else
    800          	{
    801          		/* Find where to insert new ID */
    802          		cnt1 = 0;
   \                     ??CAN_LoadFullCANEntry_10: (+1)
   \   000001AA   0x2000             MOVS     R0,#+0
   \   000001AC   0x4682             MOV      R10,R0
    803          		cnt2 = CANAF_FullCAN_cnt;
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000001B2   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   000001B6   0x0007             MOVS     R7,R0
    804          		bound1 = (CANAF_FullCAN_cnt - 1) >> 1;
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000001BC   0x8800             LDRH     R0,[R0, #+0]
   \   000001BE   0x1E40             SUBS     R0,R0,#+1
   \   000001C0   0x1040             ASRS     R0,R0,#+1
   \   000001C2   0x4683             MOV      R11,R0
    805          		while (cnt1 <= bound1)
   \                     ??CAN_LoadFullCANEntry_12: (+1)
   \   000001C4   0x4658             MOV      R0,R11
   \   000001C6   0x4651             MOV      R1,R10
   \   000001C8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001CA   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000001CC   0x4288             CMP      R0,R1
   \   000001CE   0xDB25             BLT.N    ??CAN_LoadFullCANEntry_13
    806          		{
    807          			/* Loop through standard existing IDs */
    808          			if ((LPC_CANAF_RAM->mask[cnt1] >> 16) > id)
   \   000001D0   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000001D4   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000001D8   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000001DC   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000001E0   0xEBB9 0x4F10      CMP      R9,R0, LSR #+16
   \   000001E4   0xD205             BCS.N    ??CAN_LoadFullCANEntry_14
    809          			{
    810          				cnt2 = cnt1 * 2;
   \   000001E6   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000001EA   0xEA5F 0x004A      LSLS     R0,R10,#+1
   \   000001EE   0x0007             MOVS     R7,R0
    811          				break;
   \   000001F0   0xE014             B.N      ??CAN_LoadFullCANEntry_13
    812          			}
    813          
    814          			if ((LPC_CANAF_RAM->mask[cnt1] & 0x0000FFFF) > id)
   \                     ??CAN_LoadFullCANEntry_14: (+1)
   \   000001F2   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   000001F6   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000001FA   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000001FE   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000202   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000204   0x4581             CMP      R9,R0
   \   00000206   0xD206             BCS.N    ??CAN_LoadFullCANEntry_15
    815          			{
    816          				cnt2 = cnt1 * 2 + 1;
   \   00000208   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000020C   0xEA5F 0x004A      LSLS     R0,R10,#+1
   \   00000210   0x1C40             ADDS     R0,R0,#+1
   \   00000212   0x0007             MOVS     R7,R0
    817          				break;
   \   00000214   0xE002             B.N      ??CAN_LoadFullCANEntry_13
    818          			}
    819          
    820          			cnt1++;
   \                     ??CAN_LoadFullCANEntry_15: (+1)
   \   00000216   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \   0000021A   0xE7D3             B.N      ??CAN_LoadFullCANEntry_12
    821          		}
    822          		/* cnt1 = U32 where to insert new ID */
    823          		/* cnt2 = U16 where to insert new ID */
    824          
    825          		if (cnt1 > bound1)
   \                     ??CAN_LoadFullCANEntry_13: (+1)
   \   0000021C   0x4658             MOV      R0,R11
   \   0000021E   0x4651             MOV      R1,R10
   \   00000220   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000222   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000224   0x4288             CMP      R0,R1
   \   00000226   0xDA26             BGE.N    ??CAN_LoadFullCANEntry_16
    826          		{
    827          			/* Adding ID as last entry */
    828          			/* Even number of IDs exists */
    829          			if ((CANAF_FullCAN_cnt & 0x0001) == 0)
   \   00000228   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000022C   0x7800             LDRB     R0,[R0, #+0]
   \   0000022E   0x07C0             LSLS     R0,R0,#+31
   \   00000230   0xD40E             BMI.N    ??CAN_LoadFullCANEntry_17
    830          			{
    831          				LPC_CANAF_RAM->mask[cnt1]  = 0x0000FFFF | (id << 16);
   \   00000232   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000236   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   0000023A   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   0000023E   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000242   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   00000246   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000024A   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
   \   0000024E   0xE064             B.N      ??CAN_LoadFullCANEntry_9
    832          			}
    833          			/* Odd  number of IDs exists */
    834          			else
    835          			{
    836          				LPC_CANAF_RAM->mask[cnt1]  = (LPC_CANAF_RAM->mask[cnt1] & 0xFFFF0000) | id;
   \                     ??CAN_LoadFullCANEntry_17: (+1)
   \   00000250   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000254   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000258   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000025C   0x0C00             LSRS     R0,R0,#+16
   \   0000025E   0x0400             LSLS     R0,R0,#+16
   \   00000260   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000264   0xEA59 0x0000      ORRS     R0,R9,R0
   \   00000268   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   0000026C   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000270   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
   \   00000274   0xE051             B.N      ??CAN_LoadFullCANEntry_9
    837          			}
    838          		}
    839          		else
    840          		{
    841          			buf0 = LPC_CANAF_RAM->mask[cnt1]; /* Remember current entry */
   \                     ??CAN_LoadFullCANEntry_16: (+1)
   \   00000276   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   0000027A   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   0000027E   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000282   0x0004             MOVS     R4,R0
    842          			if ((cnt2 & 0x0001) == 0)
   \   00000284   0x07F8             LSLS     R0,R7,#+31
   \   00000286   0xD406             BMI.N    ??CAN_LoadFullCANEntry_18
    843          			{
    844          				/* Insert new mask to even address*/
    845          				buf1 = (id << 16) | (buf0 >> 16);
   \   00000288   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000028C   0x0C20             LSRS     R0,R4,#+16
   \   0000028E   0xEA50 0x4009      ORRS     R0,R0,R9, LSL #+16
   \   00000292   0x0005             MOVS     R5,R0
   \   00000294   0xE006             B.N      ??CAN_LoadFullCANEntry_19
    846          			}
    847          			else
    848          			{
    849          				/* Insert new mask to odd  address */
    850          				buf1 = (buf0 & 0xFFFF0000) | id;
   \                     ??CAN_LoadFullCANEntry_18: (+1)
   \   00000296   0x0C20             LSRS     R0,R4,#+16
   \   00000298   0x0400             LSLS     R0,R0,#+16
   \   0000029A   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   0000029E   0xEA59 0x0000      ORRS     R0,R9,R0
   \   000002A2   0x0005             MOVS     R5,R0
    851          			}
    852          			LPC_CANAF_RAM->mask[cnt1] = buf1;/* Insert mask */
   \                     ??CAN_LoadFullCANEntry_19: (+1)
   \   000002A4   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000002A8   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000002AC   0xF840 0x502A      STR      R5,[R0, R10, LSL #+2]
    853          			bound1 = CANAF_FullCAN_cnt >> 1;
   \   000002B0   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000002B4   0x8800             LDRH     R0,[R0, #+0]
   \   000002B6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002B8   0x0840             LSRS     R0,R0,#+1
   \   000002BA   0x4683             MOV      R11,R0
    854          			/* Move all remaining standard mask entries one place up */
    855          			while (cnt1 < bound1)
   \                     ??CAN_LoadFullCANEntry_20: (+1)
   \   000002BC   0x4650             MOV      R0,R10
   \   000002BE   0x4659             MOV      R1,R11
   \   000002C0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000002C2   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000002C4   0x4288             CMP      R0,R1
   \   000002C6   0xDA13             BGE.N    ??CAN_LoadFullCANEntry_21
    856          			{
    857          				cnt1++;
   \   000002C8   0xF11A 0x0A01      ADDS     R10,R10,#+1
    858          				buf1  = LPC_CANAF_RAM->mask[cnt1];
   \   000002CC   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000002D0   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000002D4   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000002D8   0x0005             MOVS     R5,R0
    859          				LPC_CANAF_RAM->mask[cnt1] = (buf1 >> 16) | (buf0 << 16);
   \   000002DA   0x0420             LSLS     R0,R4,#+16
   \   000002DC   0xEA50 0x4015      ORRS     R0,R0,R5, LSR #+16
   \   000002E0   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   000002E4   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000002E8   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    860          				buf0  = buf1;
   \   000002EC   0x002C             MOVS     R4,R5
   \   000002EE   0xE7E5             B.N      ??CAN_LoadFullCANEntry_20
    861          			}
    862          
    863          			if ((CANAF_FullCAN_cnt & 0x0001) == 0)
   \                     ??CAN_LoadFullCANEntry_21: (+1)
   \   000002F0   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000002F4   0x7800             LDRB     R0,[R0, #+0]
   \   000002F6   0x07C0             LSLS     R0,R0,#+31
   \   000002F8   0xD40F             BMI.N    ??CAN_LoadFullCANEntry_9
    864          			{
    865          				/* Even number of IDs exists */
    866          				LPC_CANAF_RAM->mask[cnt1] = (LPC_CANAF_RAM->mask[cnt1] & 0xFFFF0000)
    867          											| (0x0000FFFF);
   \   000002FA   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000002FE   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000302   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   00000306   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   0000030A   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   0000030E   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   00000312   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000316   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    868          			}
    869          		}
    870          	}
    871          	//restruct FulCAN Object Section
    872          	bound1 = CANAF_FullCAN_cnt - cnt2;
   \                     ??CAN_LoadFullCANEntry_9: (+1)
   \   0000031A   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000031E   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   00000322   0x1BC0             SUBS     R0,R0,R7
   \   00000324   0x4683             MOV      R11,R0
    873          	cnt1 = total - (CANAF_FullCAN_cnt)*3 + cnt2*3 + 1;
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000032A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000032E   0x2103             MOVS     R1,#+3
   \   00000330   0xFB01 0x8010      MLS      R0,R1,R0,R8
   \   00000334   0x2103             MOVS     R1,#+3
   \   00000336   0xFB01 0x0007      MLA      R0,R1,R7,R0
   \   0000033A   0x1C40             ADDS     R0,R0,#+1
   \   0000033C   0x4682             MOV      R10,R0
    874          	buf0 = LPC_CANAF_RAM->mask[cnt1];
   \   0000033E   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000342   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000346   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   0000034A   0x0004             MOVS     R4,R0
    875          	buf1 = LPC_CANAF_RAM->mask[cnt1+1];
   \   0000034C   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000350   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000354   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   00000358   0x6840             LDR      R0,[R0, #+4]
   \   0000035A   0x0005             MOVS     R5,R0
    876          	buf2 = LPC_CANAF_RAM->mask[cnt1+2];
   \   0000035C   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   00000360   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000364   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   00000368   0x6880             LDR      R0,[R0, #+8]
   \   0000036A   0x0006             MOVS     R6,R0
    877          	LPC_CANAF_RAM->mask[cnt1]=LPC_CANAF_RAM->mask[cnt1+1]= LPC_CANAF_RAM->mask[cnt1+2]=0x00;
   \   0000036C   0x2000             MOVS     R0,#+0
   \   0000036E   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   00000372   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000376   0xEB01 0x018A      ADD      R1,R1,R10, LSL #+2
   \   0000037A   0x6088             STR      R0,[R1, #+8]
   \   0000037C   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   00000380   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000384   0xEB01 0x018A      ADD      R1,R1,R10, LSL #+2
   \   00000388   0x6048             STR      R0,[R1, #+4]
   \   0000038A   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x40038000
   \   0000038E   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   00000392   0xF841 0x002A      STR      R0,[R1, R10, LSL #+2]
    878          	cnt1+=3;
   \   00000396   0xF11A 0x0A03      ADDS     R10,R10,#+3
    879          	while(bound1--)
   \                     ??CAN_LoadFullCANEntry_22: (+1)
   \   0000039A   0x4658             MOV      R0,R11
   \   0000039C   0xF1B0 0x0B01      SUBS     R11,R0,#+1
   \   000003A0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000003A2   0x2800             CMP      R0,#+0
   \   000003A4   0xD033             BEQ.N    ??CAN_LoadFullCANEntry_23
    880          	{
    881          		tmp0 = LPC_CANAF_RAM->mask[cnt1];
   \   000003A6   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000003AA   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003AE   0xF850 0x002A      LDR      R0,[R0, R10, LSL #+2]
   \   000003B2   0x9003             STR      R0,[SP, #+12]
    882          		tmp1 = LPC_CANAF_RAM->mask[cnt1+1];
   \   000003B4   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000003B8   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003BC   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   000003C0   0x6840             LDR      R0,[R0, #+4]
   \   000003C2   0x9002             STR      R0,[SP, #+8]
    883          		tmp2 = LPC_CANAF_RAM->mask[cnt1+2];
   \   000003C4   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000003C8   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003CC   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   000003D0   0x6880             LDR      R0,[R0, #+8]
   \   000003D2   0x9001             STR      R0,[SP, #+4]
    884          		LPC_CANAF_RAM->mask[cnt1]= buf0;
   \   000003D4   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000003D8   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003DC   0xF840 0x402A      STR      R4,[R0, R10, LSL #+2]
    885          		LPC_CANAF_RAM->mask[cnt1+1]= buf1;
   \   000003E0   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000003E4   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003E8   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   000003EC   0x6045             STR      R5,[R0, #+4]
    886          		LPC_CANAF_RAM->mask[cnt1+2]= buf2;
   \   000003EE   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x40038000
   \   000003F2   0xFA0F 0xFA8A      SXTH     R10,R10          ;; SignExt  R10,R10,#+16,#+16
   \   000003F6   0xEB00 0x008A      ADD      R0,R0,R10, LSL #+2
   \   000003FA   0x6086             STR      R6,[R0, #+8]
    887          		buf0 = tmp0;
   \   000003FC   0x9803             LDR      R0,[SP, #+12]
   \   000003FE   0x0004             MOVS     R4,R0
    888          		buf1 = tmp1;
   \   00000400   0x9802             LDR      R0,[SP, #+8]
   \   00000402   0x0005             MOVS     R5,R0
    889          		buf2 = tmp2;
   \   00000404   0x9801             LDR      R0,[SP, #+4]
   \   00000406   0x0006             MOVS     R6,R0
    890          		cnt1+=3;
   \   00000408   0xF11A 0x0A03      ADDS     R10,R10,#+3
   \   0000040C   0xE7C5             B.N      ??CAN_LoadFullCANEntry_22
    891          	}
    892          	CANAF_FullCAN_cnt++;
   \                     ??CAN_LoadFullCANEntry_23: (+1)
   \   0000040E   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000412   0x8800             LDRH     R0,[R0, #+0]
   \   00000414   0x1C40             ADDS     R0,R0,#+1
   \   00000416   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000041A   0x8008             STRH     R0,[R1, #+0]
    893          	//update address values
    894          	LPC_CANAF->SFF_sa 	  +=0x04;
   \   0000041C   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x4003c004
   \   00000420   0x6800             LDR      R0,[R0, #+0]
   \   00000422   0x1D00             ADDS     R0,R0,#+4
   \   00000424   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x4003c004
   \   00000428   0x6008             STR      R0,[R1, #+0]
    895          	LPC_CANAF->SFF_GRP_sa +=0x04 ;
   \   0000042A   0x.... 0x....      LDR.W    R0,??DataTable6_4  ;; 0x4003c008
   \   0000042E   0x6800             LDR      R0,[R0, #+0]
   \   00000430   0x1D00             ADDS     R0,R0,#+4
   \   00000432   0x.... 0x....      LDR.W    R1,??DataTable6_4  ;; 0x4003c008
   \   00000436   0x6008             STR      R0,[R1, #+0]
    896          	LPC_CANAF->EFF_sa     +=0x04 ;
   \   00000438   0x.... 0x....      LDR.W    R0,??DataTable6_5  ;; 0x4003c00c
   \   0000043C   0x6800             LDR      R0,[R0, #+0]
   \   0000043E   0x1D00             ADDS     R0,R0,#+4
   \   00000440   0x.... 0x....      LDR.W    R1,??DataTable6_5  ;; 0x4003c00c
   \   00000444   0x6008             STR      R0,[R1, #+0]
    897          	LPC_CANAF->EFF_GRP_sa +=0x04;
   \   00000446   0x.... 0x....      LDR.W    R0,??DataTable6_6  ;; 0x4003c010
   \   0000044A   0x6800             LDR      R0,[R0, #+0]
   \   0000044C   0x1D00             ADDS     R0,R0,#+4
   \   0000044E   0x.... 0x....      LDR.W    R1,??DataTable6_6  ;; 0x4003c010
   \   00000452   0x6008             STR      R0,[R1, #+0]
    898          	LPC_CANAF->ENDofTable +=0x04;
   \   00000454   0x.... 0x....      LDR.W    R0,??DataTable6_7  ;; 0x4003c014
   \   00000458   0x6800             LDR      R0,[R0, #+0]
   \   0000045A   0x1D00             ADDS     R0,R0,#+4
   \   0000045C   0x.... 0x....      LDR.W    R1,??DataTable6_7  ;; 0x4003c014
   \   00000460   0x6008             STR      R0,[R1, #+0]
    899          
    900          	LPC_CANAF->AFMR = 0x04;
   \   00000462   0x2004             MOVS     R0,#+4
   \   00000464   0x.... 0x....      LDR.W    R1,??DataTable6_10  ;; 0x4003c000
   \   00000468   0x6008             STR      R0,[R1, #+0]
    901           	return CAN_OK;
   \   0000046A   0x2001             MOVS     R0,#+1
   \                     ??CAN_LoadFullCANEntry_5: (+1)
   \   0000046C   0xB005             ADD      SP,SP,#+20
   \   0000046E   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    902          }
    903          
    904          /********************************************************************//**
    905           * @brief		Load Group entry into AFLUT
    906           * @param[in]	CANx: CAN peripheral selected, should be:
    907           * 				- CAN1: CAN 1
    908           * 				- CAN2: CAN 2
    909           * @param[in]	lowerID, upperID: lower and upper identifier of entry
    910           * @param[in]	format: type of ID format, should be:
    911           * 				- STD_ID_FORMAT: Standard ID format (11-bit value)
    912           * 				- EXT_ID_FORMAT: Extended ID format (29-bit value)
    913           * @return 		CAN_ERROR, could be:
    914           * 				- CAN_OK: loading is successful
    915           * 				- CAN_CONFLICT_ID_ERROR: Conflict ID occurs
    916           * 				- CAN_OBJECTS_FULL_ERROR: no more space available
    917           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    918          CAN_ERROR CAN_LoadGroupEntry(LPC_CAN_TypeDef* CANx, uint32_t lowerID, \
    919          		uint32_t upperID, CAN_ID_FORMAT_Type format)
    920          {
   \                     CAN_LoadGroupEntry: (+1)
   \   00000000   0xE92D 0x4FF9      PUSH     {R0,R3-R11,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   \   00000006   0x4689             MOV      R9,R1
   \   00000008   0x4692             MOV      R10,R2
    921          	uint16_t tmp = 0;
   \   0000000A   0x2400             MOVS     R4,#+0
    922          	uint32_t buf0, buf1, entry1, entry2, LID,UID;
    923          	int16_t cnt1, bound1, total;
    924          
    925          	CHECK_PARAM(PARAM_CANx(CANx));
   \   0000000C   0x9805             LDR      R0,[SP, #+20]
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40044000
   \   00000012   0x4288             CMP      R0,R1
   \   00000014   0xD00A             BEQ.N    ??CAN_LoadGroupEntry_0
   \   00000016   0x9805             LDR      R0,[SP, #+20]
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x40048000
   \   0000001C   0x4288             CMP      R0,R1
   \   0000001E   0xD005             BEQ.N    ??CAN_LoadGroupEntry_0
   \   00000020   0xF240 0x319D      MOVW     R1,#+925
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000028   0x.... 0x....      BL       check_failed
    926          	CHECK_PARAM(PARAM_ID_FORMAT(format));
   \                     ??CAN_LoadGroupEntry_0: (+1)
   \   0000002C   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   00000030   0x2800             CMP      R0,#+0
   \   00000032   0xD009             BEQ.N    ??CAN_LoadGroupEntry_1
   \   00000034   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   00000038   0x2801             CMP      R0,#+1
   \   0000003A   0xD005             BEQ.N    ??CAN_LoadGroupEntry_1
   \   0000003C   0xF240 0x319E      MOVW     R1,#+926
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000044   0x.... 0x....      BL       check_failed
    927          
    928          	if(lowerID > upperID) return CAN_CONFLICT_ID_ERROR;
   \                     ??CAN_LoadGroupEntry_1: (+1)
   \   00000048   0x45CA             CMP      R10,R9
   \   0000004A   0xD201             BCS.N    ??CAN_LoadGroupEntry_2
   \   0000004C   0x2006             MOVS     R0,#+6
   \   0000004E   0xE1B3             B.N      ??CAN_LoadGroupEntry_3
    929          	if(CANx == LPC_CAN1)
   \                     ??CAN_LoadGroupEntry_2: (+1)
   \   00000050   0x9805             LDR      R0,[SP, #+20]
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x40044000
   \   00000056   0x4288             CMP      R0,R1
   \   00000058   0xD102             BNE.N    ??CAN_LoadGroupEntry_4
    930          	{
    931          		tmp = 0;
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x0004             MOVS     R4,R0
   \   0000005E   0xE001             B.N      ??CAN_LoadGroupEntry_5
    932          	}
    933          	else
    934          	{
    935          		tmp = 1;
   \                     ??CAN_LoadGroupEntry_4: (+1)
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x0004             MOVS     R4,R0
    936          	}
    937          
    938          	total =((CANAF_FullCAN_cnt+1)>>1)+ CANAF_FullCAN_cnt*3 +((CANAF_std_cnt + 1) >> 1)+  \
    939          			CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \                     ??CAN_LoadGroupEntry_5: (+1)
   \   00000064   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000068   0x8800             LDRH     R0,[R0, #+0]
   \   0000006A   0x1C40             ADDS     R0,R0,#+1
   \   0000006C   0x1040             ASRS     R0,R0,#+1
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   00000072   0x8809             LDRH     R1,[R1, #+0]
   \   00000074   0x2203             MOVS     R2,#+3
   \   00000076   0xFB02 0x0001      MLA      R0,R2,R1,R0
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   0000007E   0x8809             LDRH     R1,[R1, #+0]
   \   00000080   0x1C49             ADDS     R1,R1,#+1
   \   00000082   0xEB10 0x0061      ADDS     R0,R0,R1, ASR #+1
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000008A   0x8809             LDRH     R1,[R1, #+0]
   \   0000008C   0x1808             ADDS     R0,R1,R0
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000092   0x8809             LDRH     R1,[R1, #+0]
   \   00000094   0x1808             ADDS     R0,R1,R0
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000009A   0x8809             LDRH     R1,[R1, #+0]
   \   0000009C   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   000000A0   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    940          
    941          	/* Setup Acceptance Filter Configuration
    942          	Acceptance Filter Mode Register = Off */
    943          	LPC_CANAF->AFMR = 0x00000001;
   \   000000A4   0x2001             MOVS     R0,#+1
   \   000000A6   0x....             LDR.N    R1,??DataTable6_10  ;; 0x4003c000
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    944          
    945          /*********Add Group of Standard Identifier Frame Format************/
    946          	if(format == STD_ID_FORMAT)
   \   000000AA   0xF89D 0x0018      LDRB     R0,[SP, #+24]
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xF040 0x80A3      BNE.W    ??CAN_LoadGroupEntry_6
    947          	{
    948          		if ((total >= 512)){//don't have enough space
   \   000000B4   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   000000B8   0xF5B0 0x7F00      CMP      R0,#+512
   \   000000BC   0xDB01             BLT.N    ??CAN_LoadGroupEntry_7
    949          			return CAN_OBJECTS_FULL_ERROR;
   \   000000BE   0x2002             MOVS     R0,#+2
   \   000000C0   0xE17A             B.N      ??CAN_LoadGroupEntry_3
    950          		}
    951          		lowerID &=0x7FF; //mask ID
   \                     ??CAN_LoadGroupEntry_7: (+1)
   \   000000C2   0xEA5F 0x5949      LSLS     R9,R9,#+21       ;; ZeroExtS R9,R9,#+21,#+21
   \   000000C6   0xEA5F 0x5959      LSRS     R9,R9,#+21
    952          		upperID &=0x7FF;
   \   000000CA   0xEA5F 0x5A4A      LSLS     R10,R10,#+21     ;; ZeroExtS R10,R10,#+21,#+21
   \   000000CE   0xEA5F 0x5A5A      LSRS     R10,R10,#+21
    953          		entry1  = (tmp << 29)|(lowerID << 16)|(tmp << 13)|(upperID << 0);
   \   000000D2   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000D4   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   000000D8   0xEA50 0x7044      ORRS     R0,R0,R4, LSL #+29
   \   000000DC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000DE   0xEA50 0x3044      ORRS     R0,R0,R4, LSL #+13
   \   000000E2   0xEA5A 0x0000      ORRS     R0,R10,R0
   \   000000E6   0x0007             MOVS     R7,R0
    954          		cnt1 = ((CANAF_FullCAN_cnt+1)>>1) + ((CANAF_std_cnt + 1) >> 1);
   \   000000E8   0x....             LDR.N    R0,??DataTable6_8
   \   000000EA   0x8800             LDRH     R0,[R0, #+0]
   \   000000EC   0x1C40             ADDS     R0,R0,#+1
   \   000000EE   0x....             LDR.N    R1,??DataTable6_9
   \   000000F0   0x8809             LDRH     R1,[R1, #+0]
   \   000000F2   0x1C49             ADDS     R1,R1,#+1
   \   000000F4   0x1049             ASRS     R1,R1,#+1
   \   000000F6   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000000FA   0x4683             MOV      R11,R0
    955          
    956          		//if this is the first Group standard ID entry
    957          		if(CANAF_gstd_cnt == 0)
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable10
   \   00000100   0x8800             LDRH     R0,[R0, #+0]
   \   00000102   0x2800             CMP      R0,#+0
   \   00000104   0xD105             BNE.N    ??CAN_LoadGroupEntry_8
    958          		{
    959          			LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   00000106   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   00000108   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000010C   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
   \   00000110   0xE05C             B.N      ??CAN_LoadGroupEntry_9
    960          		}
    961          		else
    962          		{
    963          			//find the position to add new Group entry
    964          			bound1 = ((CANAF_FullCAN_cnt+1)>>1) + ((CANAF_std_cnt + 1) >> 1) + CANAF_gstd_cnt;
   \                     ??CAN_LoadGroupEntry_8: (+1)
   \   00000112   0x....             LDR.N    R0,??DataTable6_8
   \   00000114   0x8800             LDRH     R0,[R0, #+0]
   \   00000116   0x1C40             ADDS     R0,R0,#+1
   \   00000118   0x....             LDR.N    R1,??DataTable6_9
   \   0000011A   0x8809             LDRH     R1,[R1, #+0]
   \   0000011C   0x1C49             ADDS     R1,R1,#+1
   \   0000011E   0x1049             ASRS     R1,R1,#+1
   \   00000120   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000128   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000012C   0x1808             ADDS     R0,R1,R0
   \   0000012E   0x4680             MOV      R8,R0
    965          			while(cnt1 < bound1)
   \                     ??CAN_LoadGroupEntry_10: (+1)
   \   00000130   0x4658             MOV      R0,R11
   \   00000132   0x4641             MOV      R1,R8
   \   00000134   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000136   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000138   0x4288             CMP      R0,R1
   \   0000013A   0xDA1C             BGE.N    ??CAN_LoadGroupEntry_11
    966          			{
    967          				buf0 = LPC_CANAF_RAM->mask[cnt1];
   \   0000013C   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   0000013E   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000142   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   00000146   0x0005             MOVS     R5,R0
    968          				LID  = (buf0 >> 16)&0x7FF;
   \   00000148   0xF3C5 0x400A      UBFX     R0,R5,#+16,#+11
   \   0000014C   0x9003             STR      R0,[SP, #+12]
    969          				UID  = buf0 & 0x7FF;
   \   0000014E   0x0568             LSLS     R0,R5,#+21       ;; ZeroExtS R0,R5,#+21,#+21
   \   00000150   0x0D40             LSRS     R0,R0,#+21
   \   00000152   0x9002             STR      R0,[SP, #+8]
    970          				if (upperID <= LID)
   \   00000154   0x9803             LDR      R0,[SP, #+12]
   \   00000156   0x4550             CMP      R0,R10
   \   00000158   0xD305             BCC.N    ??CAN_LoadGroupEntry_12
    971          				{
    972          					//add new entry before this entry
    973          					LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   0000015A   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   0000015C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000160   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
    974          					break;
   \   00000164   0xE007             B.N      ??CAN_LoadGroupEntry_11
    975          				}
    976          				else if (lowerID >= UID)
   \                     ??CAN_LoadGroupEntry_12: (+1)
   \   00000166   0x9802             LDR      R0,[SP, #+8]
   \   00000168   0x4581             CMP      R9,R0
   \   0000016A   0xD302             BCC.N    ??CAN_LoadGroupEntry_13
    977          				{
    978          					//load next entry to compare
    979          					cnt1 ++;
   \   0000016C   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   00000170   0xE7DE             B.N      ??CAN_LoadGroupEntry_10
    980          				}
    981          				else
    982          					return CAN_CONFLICT_ID_ERROR;
   \                     ??CAN_LoadGroupEntry_13: (+1)
   \   00000172   0x2006             MOVS     R0,#+6
   \   00000174   0xE120             B.N      ??CAN_LoadGroupEntry_3
    983          			}
    984          			if(cnt1 >= bound1)
   \                     ??CAN_LoadGroupEntry_11: (+1)
   \   00000176   0x4658             MOV      R0,R11
   \   00000178   0x4641             MOV      R1,R8
   \   0000017A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000017C   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   0000017E   0x4288             CMP      R0,R1
   \   00000180   0xDB0A             BLT.N    ??CAN_LoadGroupEntry_14
    985          			{
    986          				//add new entry at the last position in this list
    987          				buf0 = LPC_CANAF_RAM->mask[cnt1];
   \   00000182   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   00000184   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000188   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   0000018C   0x0005             MOVS     R5,R0
    988          				LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   0000018E   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   00000190   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000194   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
    989          			}
    990          
    991          			//remove all remaining entry of this section one place up
    992          			bound1 = total - cnt1;
   \                     ??CAN_LoadGroupEntry_14: (+1)
   \   00000198   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000019C   0xEBB0 0x000B      SUBS     R0,R0,R11
   \   000001A0   0x4680             MOV      R8,R0
    993          			while(bound1--)
   \                     ??CAN_LoadGroupEntry_15: (+1)
   \   000001A2   0x4640             MOV      R0,R8
   \   000001A4   0xF1B0 0x0801      SUBS     R8,R0,#+1
   \   000001A8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000001AA   0x2800             CMP      R0,#+0
   \   000001AC   0xD00E             BEQ.N    ??CAN_LoadGroupEntry_9
    994          			{
    995          				cnt1++;
   \   000001AE   0xF11B 0x0B01      ADDS     R11,R11,#+1
    996          				buf1 = LPC_CANAF_RAM->mask[cnt1];
   \   000001B2   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   000001B4   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000001B8   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   000001BC   0x0006             MOVS     R6,R0
    997          				LPC_CANAF_RAM->mask[cnt1] = buf0;
   \   000001BE   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   000001C0   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000001C4   0xF840 0x502B      STR      R5,[R0, R11, LSL #+2]
    998          				buf0 = buf1;
   \   000001C8   0x0035             MOVS     R5,R6
   \   000001CA   0xE7EA             B.N      ??CAN_LoadGroupEntry_15
    999          			}
   1000          		}
   1001          		CANAF_gstd_cnt++;
   \                     ??CAN_LoadGroupEntry_9: (+1)
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable10
   \   000001D0   0x8800             LDRH     R0,[R0, #+0]
   \   000001D2   0x1C40             ADDS     R0,R0,#+1
   \   000001D4   0x.... 0x....      LDR.W    R1,??DataTable10
   \   000001D8   0x8008             STRH     R0,[R1, #+0]
   1002          		//update address values
   1003          		LPC_CANAF->EFF_sa     +=0x04 ;
   \   000001DA   0x....             LDR.N    R0,??DataTable6_5  ;; 0x4003c00c
   \   000001DC   0x6800             LDR      R0,[R0, #+0]
   \   000001DE   0x1D00             ADDS     R0,R0,#+4
   \   000001E0   0x....             LDR.N    R1,??DataTable6_5  ;; 0x4003c00c
   \   000001E2   0x6008             STR      R0,[R1, #+0]
   1004          		LPC_CANAF->EFF_GRP_sa +=0x04;
   \   000001E4   0x....             LDR.N    R0,??DataTable6_6  ;; 0x4003c010
   \   000001E6   0x6800             LDR      R0,[R0, #+0]
   \   000001E8   0x1D00             ADDS     R0,R0,#+4
   \   000001EA   0x....             LDR.N    R1,??DataTable6_6  ;; 0x4003c010
   \   000001EC   0x6008             STR      R0,[R1, #+0]
   1005          		LPC_CANAF->ENDofTable +=0x04;
   \   000001EE   0x....             LDR.N    R0,??DataTable6_7  ;; 0x4003c014
   \   000001F0   0x6800             LDR      R0,[R0, #+0]
   \   000001F2   0x1D00             ADDS     R0,R0,#+4
   \   000001F4   0x....             LDR.N    R1,??DataTable6_7  ;; 0x4003c014
   \   000001F6   0x6008             STR      R0,[R1, #+0]
   \   000001F8   0xE0DA             B.N      ??CAN_LoadGroupEntry_16
   1006          	}
   1007          
   1008          
   1009          /*********Add Group of Extended Identifier Frame Format************/
   1010          	else
   1011          	{
   1012          		if ((total >= 511)){//don't have enough space
   \                     ??CAN_LoadGroupEntry_6: (+1)
   \   000001FA   0xF9BD 0x0004      LDRSH    R0,[SP, #+4]
   \   000001FE   0xF5B0 0x7FFF      CMP      R0,#+510
   \   00000202   0xDD01             BLE.N    ??CAN_LoadGroupEntry_17
   1013          			return CAN_OBJECTS_FULL_ERROR;
   \   00000204   0x2002             MOVS     R0,#+2
   \   00000206   0xE0D7             B.N      ??CAN_LoadGroupEntry_3
   1014          		}
   1015          		lowerID  &= 0x1FFFFFFF; //mask ID
   \                     ??CAN_LoadGroupEntry_17: (+1)
   \   00000208   0xF029 0x4960      BIC      R9,R9,#0xE0000000
   1016          		upperID &= 0x1FFFFFFF;
   \   0000020C   0xF02A 0x4A60      BIC      R10,R10,#0xE0000000
   1017          		entry1   = (tmp << 29)|(lowerID << 0);
   \   00000210   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000212   0xEA59 0x7044      ORRS     R0,R9,R4, LSL #+29
   \   00000216   0x0007             MOVS     R7,R0
   1018          		entry2   = (tmp << 29)|(upperID << 0);
   \   00000218   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000021A   0xEA5A 0x7044      ORRS     R0,R10,R4, LSL #+29
   \   0000021E   0x9000             STR      R0,[SP, #+0]
   1019          
   1020          		cnt1 = ((CANAF_FullCAN_cnt+1)>>1) + ((CANAF_std_cnt + 1) >> 1) + CANAF_gstd_cnt + CANAF_ext_cnt;
   \   00000220   0x....             LDR.N    R0,??DataTable6_8
   \   00000222   0x8800             LDRH     R0,[R0, #+0]
   \   00000224   0x1C40             ADDS     R0,R0,#+1
   \   00000226   0x....             LDR.N    R1,??DataTable6_9
   \   00000228   0x8809             LDRH     R1,[R1, #+0]
   \   0000022A   0x1C49             ADDS     R1,R1,#+1
   \   0000022C   0x1049             ASRS     R1,R1,#+1
   \   0000022E   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   00000232   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000236   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   0000023A   0x1808             ADDS     R0,R1,R0
   \   0000023C   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000240   0xF9B1 0x1000      LDRSH    R1,[R1, #+0]
   \   00000244   0x1808             ADDS     R0,R1,R0
   \   00000246   0x4683             MOV      R11,R0
   1021          		//if this is the first Group standard ID entry
   1022          		if(CANAF_gext_cnt == 0)
   \   00000248   0x.... 0x....      LDR.W    R0,??DataTable11
   \   0000024C   0x8800             LDRH     R0,[R0, #+0]
   \   0000024E   0x2800             CMP      R0,#+0
   \   00000250   0xD10C             BNE.N    ??CAN_LoadGroupEntry_18
   1023          		{
   1024          			LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   00000252   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   00000254   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000258   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
   1025          			LPC_CANAF_RAM->mask[cnt1+1] = entry2;
   \   0000025C   0x9800             LDR      R0,[SP, #+0]
   \   0000025E   0x....             LDR.N    R1,??DataTable6_3  ;; 0x40038000
   \   00000260   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000264   0xEB01 0x018B      ADD      R1,R1,R11, LSL #+2
   \   00000268   0x6048             STR      R0,[R1, #+4]
   \   0000026A   0xE095             B.N      ??CAN_LoadGroupEntry_19
   1026          		}
   1027          		else
   1028          		{
   1029          			//find the position to add new Group entry
   1030          			bound1 = ((CANAF_FullCAN_cnt+1)>>1) + ((CANAF_std_cnt + 1) >> 1) + CANAF_gstd_cnt \
   1031          						+ CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \                     ??CAN_LoadGroupEntry_18: (+1)
   \   0000026C   0x....             LDR.N    R0,??DataTable6_8
   \   0000026E   0x8800             LDRH     R0,[R0, #+0]
   \   00000270   0x1C40             ADDS     R0,R0,#+1
   \   00000272   0x....             LDR.N    R1,??DataTable6_9
   \   00000274   0x8809             LDRH     R1,[R1, #+0]
   \   00000276   0x1C49             ADDS     R1,R1,#+1
   \   00000278   0x1049             ASRS     R1,R1,#+1
   \   0000027A   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000282   0x8809             LDRH     R1,[R1, #+0]
   \   00000284   0x1808             ADDS     R0,R1,R0
   \   00000286   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   0000028A   0x8809             LDRH     R1,[R1, #+0]
   \   0000028C   0x1808             ADDS     R0,R1,R0
   \   0000028E   0x.... 0x....      LDR.W    R1,??DataTable11
   \   00000292   0x8809             LDRH     R1,[R1, #+0]
   \   00000294   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   00000298   0x4680             MOV      R8,R0
   1032          			while(cnt1 < bound1)
   \                     ??CAN_LoadGroupEntry_20: (+1)
   \   0000029A   0x4658             MOV      R0,R11
   \   0000029C   0x4641             MOV      R1,R8
   \   0000029E   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   000002A0   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   000002A2   0x4288             CMP      R0,R1
   \   000002A4   0xDA2B             BGE.N    ??CAN_LoadGroupEntry_21
   1033          			{
   1034          				buf0 = LPC_CANAF_RAM->mask[cnt1];
   \   000002A6   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   000002A8   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000002AC   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   000002B0   0x0005             MOVS     R5,R0
   1035          				buf1 = LPC_CANAF_RAM->mask[cnt1+1];
   \   000002B2   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   000002B4   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000002B8   0xEB00 0x008B      ADD      R0,R0,R11, LSL #+2
   \   000002BC   0x6840             LDR      R0,[R0, #+4]
   \   000002BE   0x0006             MOVS     R6,R0
   1036          				LID  = buf0 & 0x1FFFFFFF; //mask ID
   \   000002C0   0xF025 0x4060      BIC      R0,R5,#0xE0000000
   \   000002C4   0x9003             STR      R0,[SP, #+12]
   1037          				UID  = buf1 & 0x1FFFFFFF;
   \   000002C6   0xF026 0x4060      BIC      R0,R6,#0xE0000000
   \   000002CA   0x9002             STR      R0,[SP, #+8]
   1038          				if (upperID <= LID)
   \   000002CC   0x9803             LDR      R0,[SP, #+12]
   \   000002CE   0x4550             CMP      R0,R10
   \   000002D0   0xD30D             BCC.N    ??CAN_LoadGroupEntry_22
   1039          				{
   1040          					//add new entry before this entry
   1041          					LPC_CANAF_RAM->mask[cnt1] = entry1;
   \   000002D2   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   000002D4   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000002D8   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
   1042          					LPC_CANAF_RAM->mask[++cnt1] = entry2;
   \   000002DC   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   000002E0   0x9800             LDR      R0,[SP, #+0]
   \   000002E2   0x....             LDR.N    R1,??DataTable6_3  ;; 0x40038000
   \   000002E4   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   000002E8   0xF841 0x002B      STR      R0,[R1, R11, LSL #+2]
   1043          					break;
   \   000002EC   0xE007             B.N      ??CAN_LoadGroupEntry_21
   1044          				}
   1045          				else if (lowerID >= UID)
   \                     ??CAN_LoadGroupEntry_22: (+1)
   \   000002EE   0x9802             LDR      R0,[SP, #+8]
   \   000002F0   0x4581             CMP      R9,R0
   \   000002F2   0xD302             BCC.N    ??CAN_LoadGroupEntry_23
   1046          				{
   1047          					//load next entry to compare
   1048          					cnt1 +=2;
   \   000002F4   0xF11B 0x0B02      ADDS     R11,R11,#+2
   \   000002F8   0xE7CF             B.N      ??CAN_LoadGroupEntry_20
   1049          				}
   1050          				else
   1051          					return CAN_CONFLICT_ID_ERROR;
   \                     ??CAN_LoadGroupEntry_23: (+1)
   \   000002FA   0x2006             MOVS     R0,#+6
   \   000002FC   0xE05C             B.N      ??CAN_LoadGroupEntry_3
   1052          			}
   1053          			if(cnt1 >= bound1)
   \                     ??CAN_LoadGroupEntry_21: (+1)
   \   000002FE   0x4658             MOV      R0,R11
   \   00000300   0x4641             MOV      R1,R8
   \   00000302   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000304   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \   00000306   0x4288             CMP      R0,R1
   \   00000308   0xDB19             BLT.N    ??CAN_LoadGroupEntry_24
   1054          			{
   1055          				//add new entry at the last position in this list
   1056          				buf0 = LPC_CANAF_RAM->mask[cnt1];
   \   0000030A   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   0000030C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000310   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   00000314   0x0005             MOVS     R5,R0
   1057          				buf1 = LPC_CANAF_RAM->mask[cnt1+1];
   \   00000316   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   00000318   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000031C   0xEB00 0x008B      ADD      R0,R0,R11, LSL #+2
   \   00000320   0x6840             LDR      R0,[R0, #+4]
   \   00000322   0x0006             MOVS     R6,R0
   1058          				LPC_CANAF_RAM->mask[cnt1]   = entry1;
   \   00000324   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   00000326   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000032A   0xF840 0x702B      STR      R7,[R0, R11, LSL #+2]
   1059          				LPC_CANAF_RAM->mask[++cnt1] = entry2;
   \   0000032E   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \   00000332   0x9800             LDR      R0,[SP, #+0]
   \   00000334   0x....             LDR.N    R1,??DataTable6_3  ;; 0x40038000
   \   00000336   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000033A   0xF841 0x002B      STR      R0,[R1, R11, LSL #+2]
   1060          			}
   1061          			//remove all remaining entry of this section two place up
   1062          			bound1 = total - cnt1 + 1;
   \                     ??CAN_LoadGroupEntry_24: (+1)
   \   0000033E   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000342   0xEBB0 0x000B      SUBS     R0,R0,R11
   \   00000346   0x1C40             ADDS     R0,R0,#+1
   \   00000348   0x4680             MOV      R8,R0
   1063          			cnt1++;
   \   0000034A   0xF11B 0x0B01      ADDS     R11,R11,#+1
   1064          			while(bound1>0)
   \                     ??CAN_LoadGroupEntry_25: (+1)
   \   0000034E   0xFA0F 0xF888      SXTH     R8,R8            ;; SignExt  R8,R8,#+16,#+16
   \   00000352   0xF1B8 0x0F01      CMP      R8,#+1
   \   00000356   0xDB1F             BLT.N    ??CAN_LoadGroupEntry_19
   1065          			{
   1066          				entry1 = LPC_CANAF_RAM->mask[cnt1];
   \   00000358   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   0000035A   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000035E   0xF850 0x002B      LDR      R0,[R0, R11, LSL #+2]
   \   00000362   0x0007             MOVS     R7,R0
   1067          				entry2 = LPC_CANAF_RAM->mask[cnt1+1];
   \   00000364   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   00000366   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   0000036A   0xEB00 0x008B      ADD      R0,R0,R11, LSL #+2
   \   0000036E   0x6840             LDR      R0,[R0, #+4]
   \   00000370   0x9000             STR      R0,[SP, #+0]
   1068          				LPC_CANAF_RAM->mask[cnt1]   = buf0;
   \   00000372   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   00000374   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000378   0xF840 0x502B      STR      R5,[R0, R11, LSL #+2]
   1069          				LPC_CANAF_RAM->mask[cnt1+1] = buf1;
   \   0000037C   0x....             LDR.N    R0,??DataTable6_3  ;; 0x40038000
   \   0000037E   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \   00000382   0xEB00 0x008B      ADD      R0,R0,R11, LSL #+2
   \   00000386   0x6046             STR      R6,[R0, #+4]
   1070          				buf0 = entry1;
   \   00000388   0x003D             MOVS     R5,R7
   1071          				buf1 = entry2;
   \   0000038A   0x9800             LDR      R0,[SP, #+0]
   \   0000038C   0x0006             MOVS     R6,R0
   1072          				cnt1   +=2;
   \   0000038E   0xF11B 0x0B02      ADDS     R11,R11,#+2
   1073          				bound1 -=2;
   \   00000392   0xF1B8 0x0802      SUBS     R8,R8,#+2
   \   00000396   0xE7DA             B.N      ??CAN_LoadGroupEntry_25
   1074          			}
   1075          		}
   1076          		CANAF_gext_cnt++;
   \                     ??CAN_LoadGroupEntry_19: (+1)
   \   00000398   0x.... 0x....      LDR.W    R0,??DataTable11
   \   0000039C   0x8800             LDRH     R0,[R0, #+0]
   \   0000039E   0x1C40             ADDS     R0,R0,#+1
   \   000003A0   0x.... 0x....      LDR.W    R1,??DataTable11
   \   000003A4   0x8008             STRH     R0,[R1, #+0]
   1077          		//update address values
   1078          		LPC_CANAF->ENDofTable +=0x08;
   \   000003A6   0x....             LDR.N    R0,??DataTable6_7  ;; 0x4003c014
   \   000003A8   0x6800             LDR      R0,[R0, #+0]
   \   000003AA   0x3008             ADDS     R0,R0,#+8
   \   000003AC   0x....             LDR.N    R1,??DataTable6_7  ;; 0x4003c014
   \   000003AE   0x6008             STR      R0,[R1, #+0]
   1079          	}
   1080          	LPC_CANAF->AFMR = 0x04;
   \                     ??CAN_LoadGroupEntry_16: (+1)
   \   000003B0   0x2004             MOVS     R0,#+4
   \   000003B2   0x....             LDR.N    R1,??DataTable6_10  ;; 0x4003c000
   \   000003B4   0x6008             STR      R0,[R1, #+0]
   1081           	return CAN_OK;
   \   000003B6   0x2001             MOVS     R0,#+1
   \                     ??CAN_LoadGroupEntry_3: (+1)
   \   000003B8   0xB007             ADD      SP,SP,#+28
   \   000003BA   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
   1082          }
   1083          
   1084          /********************************************************************//**
   1085           * @brief		Remove AFLUT entry (FullCAN entry and Explicit Standard entry)
   1086           * @param[in]	EntryType: the type of entry that want to remove, should be:
   1087           * 				- FULLCAN_ENTRY
   1088           * 				- EXPLICIT_STANDARD_ENTRY
   1089           * 				- GROUP_STANDARD_ENTRY
   1090           * 				- EXPLICIT_EXTEND_ENTRY
   1091           * 				- GROUP_EXTEND_ENTRY
   1092           * @param[in]	position: the position of this entry in its section
   1093           * Note: the first position is 0
   1094           * @return 		CAN_ERROR, could be:
   1095           * 				- CAN_OK: removing is successful
   1096           * 				- CAN_ENTRY_NOT_EXIT_ERROR: entry want to remove is not exit
   1097           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1098          CAN_ERROR CAN_RemoveEntry(AFLUT_ENTRY_Type EntryType, uint16_t position)
   1099          {
   \                     CAN_RemoveEntry: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x468A             MOV      R10,R1
   1100          	uint16_t cnt, bound, total;
   1101          	uint32_t buf0, buf1;
   1102          	CHECK_PARAM(PARAM_AFLUT_ENTRY_TYPE(EntryType));
   \   00000008   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000A   0x2C00             CMP      R4,#+0
   \   0000000C   0xD011             BEQ.N    ??CAN_RemoveEntry_0
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x2C01             CMP      R4,#+1
   \   00000012   0xD00E             BEQ.N    ??CAN_RemoveEntry_0
   \   00000014   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000016   0x2C02             CMP      R4,#+2
   \   00000018   0xD00B             BEQ.N    ??CAN_RemoveEntry_0
   \   0000001A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001C   0x2C03             CMP      R4,#+3
   \   0000001E   0xD008             BEQ.N    ??CAN_RemoveEntry_0
   \   00000020   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000022   0x2C04             CMP      R4,#+4
   \   00000024   0xD005             BEQ.N    ??CAN_RemoveEntry_0
   \   00000026   0xF240 0x414E      MOVW     R1,#+1102
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable15
   \   0000002E   0x.... 0x....      BL       check_failed
   1103          	CHECK_PARAM(PARAM_POSITION(position));
   \                     ??CAN_RemoveEntry_0: (+1)
   \   00000032   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000036   0xF5BA 0x7F00      CMP      R10,#+512
   \   0000003A   0xDB05             BLT.N    ??CAN_RemoveEntry_1
   \   0000003C   0xF240 0x414F      MOVW     R1,#+1103
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000044   0x.... 0x....      BL       check_failed
   1104          
   1105          	/* Setup Acceptance Filter Configuration
   1106          	Acceptance Filter Mode Register = Off */
   1107          	LPC_CANAF->AFMR = 0x00000001;
   \                     ??CAN_RemoveEntry_1: (+1)
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable17  ;; 0x4003c000
   \   0000004E   0x6008             STR      R0,[R1, #+0]
   1108          	total = ((CANAF_FullCAN_cnt+1)>>1)+((CANAF_std_cnt + 1) >> 1) + \
   1109          			CANAF_gstd_cnt + CANAF_ext_cnt + (CANAF_gext_cnt<<1);
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000054   0x8800             LDRH     R0,[R0, #+0]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   0000005C   0x8809             LDRH     R1,[R1, #+0]
   \   0000005E   0x1C49             ADDS     R1,R1,#+1
   \   00000060   0x1049             ASRS     R1,R1,#+1
   \   00000062   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000006A   0x8809             LDRH     R1,[R1, #+0]
   \   0000006C   0x1808             ADDS     R0,R1,R0
   \   0000006E   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000072   0x8809             LDRH     R1,[R1, #+0]
   \   00000074   0x1808             ADDS     R0,R1,R0
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable11
   \   0000007A   0x8809             LDRH     R1,[R1, #+0]
   \   0000007C   0xEB10 0x0041      ADDS     R0,R0,R1, LSL #+1
   \   00000080   0x0007             MOVS     R7,R0
   1110          
   1111          
   1112          /************** Remove FullCAN Entry *************/
   1113          	if(EntryType == FULLCAN_ENTRY)
   \   00000082   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000084   0x2C00             CMP      R4,#+0
   \   00000086   0xF040 0x8111      BNE.W    ??CAN_RemoveEntry_2
   1114          	{
   1115          		if((CANAF_FullCAN_cnt==0)||(position >= CANAF_FullCAN_cnt))
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   0000008E   0x8800             LDRH     R0,[R0, #+0]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD006             BEQ.N    ??CAN_RemoveEntry_3
   \   00000094   0x4650             MOV      R0,R10
   \   00000096   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \   0000009A   0x8809             LDRH     R1,[R1, #+0]
   \   0000009C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000009E   0x4288             CMP      R0,R1
   \   000000A0   0xD301             BCC.N    ??CAN_RemoveEntry_4
   1116          		{
   1117          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_3: (+1)
   \   000000A2   0x2007             MOVS     R0,#+7
   \   000000A4   0xE2F2             B.N      ??CAN_RemoveEntry_5
   1118          		}
   1119          		else
   1120          		{
   1121          			cnt = position >> 1;
   \                     ??CAN_RemoveEntry_4: (+1)
   \   000000A6   0x4650             MOV      R0,R10
   \   000000A8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000AA   0x0840             LSRS     R0,R0,#+1
   \   000000AC   0x0005             MOVS     R5,R0
   1122          			buf0 = LPC_CANAF_RAM->mask[cnt];
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   000000B2   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000B4   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000000B8   0x4680             MOV      R8,R0
   1123          			bound = (CANAF_FullCAN_cnt - position -1)>>1;
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   000000BE   0x8800             LDRH     R0,[R0, #+0]
   \   000000C0   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000000C4   0xEBB0 0x000A      SUBS     R0,R0,R10
   \   000000C8   0x1E40             SUBS     R0,R0,#+1
   \   000000CA   0x1040             ASRS     R0,R0,#+1
   \   000000CC   0x0006             MOVS     R6,R0
   1124          			if((position & 0x0001) == 0) //event position
   \   000000CE   0xEA5F 0x70CA      LSLS     R0,R10,#+31
   \   000000D2   0xD417             BMI.N    ??CAN_RemoveEntry_6
   1125          			{
   1126          				while(bound--)
   \                     ??CAN_RemoveEntry_7: (+1)
   \   000000D4   0x0030             MOVS     R0,R6
   \   000000D6   0x1E46             SUBS     R6,R0,#+1
   \   000000D8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000DA   0x2800             CMP      R0,#+0
   \   000000DC   0xD03A             BEQ.N    ??CAN_RemoveEntry_8
   1127          				{
   1128          					//remove all remaining FullCAN entry one place down
   1129          					buf1  = LPC_CANAF_RAM->mask[cnt+1];
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   000000E2   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000E4   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   000000E8   0x6840             LDR      R0,[R0, #+4]
   \   000000EA   0x4681             MOV      R9,R0
   1130          					LPC_CANAF_RAM->mask[cnt] = (buf1 >> 16) | (buf0 << 16);
   \   000000EC   0xEA5F 0x4008      LSLS     R0,R8,#+16
   \   000000F0   0xEA50 0x4019      ORRS     R0,R0,R9, LSR #+16
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   000000F8   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000FA   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1131          					buf0  = buf1;
   \   000000FE   0x46C8             MOV      R8,R9
   1132          					cnt++;
   \   00000100   0x1C6D             ADDS     R5,R5,#+1
   \   00000102   0xE7E7             B.N      ??CAN_RemoveEntry_7
   1133          				}
   1134          			}
   1135          			else //odd position
   1136          			{
   1137          				while(bound--)
   \                     ??CAN_RemoveEntry_6: (+1)
   \   00000104   0x0030             MOVS     R0,R6
   \   00000106   0x1E46             SUBS     R6,R0,#+1
   \   00000108   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000010A   0x2800             CMP      R0,#+0
   \   0000010C   0xD022             BEQ.N    ??CAN_RemoveEntry_8
   1138          				{
   1139          					//remove all remaining FullCAN entry one place down
   1140          					buf1  = LPC_CANAF_RAM->mask[cnt+1];
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   00000112   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000114   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   00000118   0x6840             LDR      R0,[R0, #+4]
   \   0000011A   0x4681             MOV      R9,R0
   1141          					LPC_CANAF_RAM->mask[cnt] = (buf0 & 0xFFFF0000)|(buf1 >> 16);
   \   0000011C   0xEA5F 0x4018      LSRS     R0,R8,#+16
   \   00000120   0x0400             LSLS     R0,R0,#+16
   \   00000122   0xEA50 0x4019      ORRS     R0,R0,R9, LSR #+16
   \   00000126   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   0000012A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000012C   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1142          					LPC_CANAF_RAM->mask[cnt+1] = LPC_CANAF_RAM->mask[cnt+1] << 16;
   \   00000130   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   00000134   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000136   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   0000013A   0x6840             LDR      R0,[R0, #+4]
   \   0000013C   0x0400             LSLS     R0,R0,#+16
   \   0000013E   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   00000142   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000144   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   00000148   0x6048             STR      R0,[R1, #+4]
   1143          					buf0  = buf1<<16;
   \   0000014A   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   0000014E   0x4680             MOV      R8,R0
   1144          					cnt++;
   \   00000150   0x1C6D             ADDS     R5,R5,#+1
   \   00000152   0xE7D7             B.N      ??CAN_RemoveEntry_6
   1145          				}
   1146          			}
   1147          			if((CANAF_FullCAN_cnt & 0x0001) == 0)
   \                     ??CAN_RemoveEntry_8: (+1)
   \   00000154   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000158   0x7800             LDRB     R0,[R0, #+0]
   \   0000015A   0x07C0             LSLS     R0,R0,#+31
   \   0000015C   0xD418             BMI.N    ??CAN_RemoveEntry_9
   1148          			{
   1149          				if((position & 0x0001)==0)
   \   0000015E   0xEA5F 0x70CA      LSLS     R0,R10,#+31
   \   00000162   0xD40B             BMI.N    ??CAN_RemoveEntry_10
   1150          					LPC_CANAF_RAM->mask[cnt] = (buf0 << 16) | (0x0000FFFF);
   \   00000164   0xEA5F 0x4008      LSLS     R0,R8,#+16
   \   00000168   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   0000016C   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000170   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   00000174   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000176   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   0000017A   0xE056             B.N      ??CAN_RemoveEntry_11
   1151          				else
   1152          					LPC_CANAF_RAM->mask[cnt] = buf0 | 0x0000FFFF;
   \                     ??CAN_RemoveEntry_10: (+1)
   \   0000017C   0xF448 0x407F      ORR      R0,R8,#0xFF00
   \   00000180   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   00000184   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   00000188   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000018A   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   0000018E   0xE04C             B.N      ??CAN_RemoveEntry_11
   1153          			}
   1154          			else
   1155          			{
   1156          				//remove all remaining section one place down
   1157          				cnt = (CANAF_FullCAN_cnt + 1)>>1;
   \                     ??CAN_RemoveEntry_9: (+1)
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000194   0x8800             LDRH     R0,[R0, #+0]
   \   00000196   0x1C40             ADDS     R0,R0,#+1
   \   00000198   0x1040             ASRS     R0,R0,#+1
   \   0000019A   0x0005             MOVS     R5,R0
   1158          				bound = total + CANAF_FullCAN_cnt * 3;
   \   0000019C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000019E   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   000001A2   0x8800             LDRH     R0,[R0, #+0]
   \   000001A4   0x2103             MOVS     R1,#+3
   \   000001A6   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   000001AA   0x0006             MOVS     R6,R0
   1159          				while(bound>cnt)
   \                     ??CAN_RemoveEntry_12: (+1)
   \   000001AC   0x0028             MOVS     R0,R5
   \   000001AE   0x0031             MOVS     R1,R6
   \   000001B0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001B2   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000001B4   0x4288             CMP      R0,R1
   \   000001B6   0xD20D             BCS.N    ??CAN_RemoveEntry_13
   1160          				{
   1161          					LPC_CANAF_RAM->mask[cnt-1] = LPC_CANAF_RAM->mask[cnt];
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   000001BC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001BE   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000001C2   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   000001C6   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001C8   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   000001CC   0xF841 0x0C04      STR      R0,[R1, #-4]
   1162          					cnt++;
   \   000001D0   0x1C6D             ADDS     R5,R5,#+1
   \   000001D2   0xE7EB             B.N      ??CAN_RemoveEntry_12
   1163          				}
   1164          				LPC_CANAF_RAM->mask[cnt-1]=0x00;
   \                     ??CAN_RemoveEntry_13: (+1)
   \   000001D4   0x2000             MOVS     R0,#+0
   \   000001D6   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   000001DA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000001DC   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   000001E0   0xF841 0x0C04      STR      R0,[R1, #-4]
   1165          				//update address values
   1166          				LPC_CANAF->SFF_sa 	  -=0x04;
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable9  ;; 0x4003c004
   \   000001E8   0x6800             LDR      R0,[R0, #+0]
   \   000001EA   0x1F00             SUBS     R0,R0,#+4
   \   000001EC   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x4003c004
   \   000001F0   0x6008             STR      R0,[R1, #+0]
   1167          				LPC_CANAF->SFF_GRP_sa -=0x04 ;
   \   000001F2   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x4003c008
   \   000001F6   0x6800             LDR      R0,[R0, #+0]
   \   000001F8   0x1F00             SUBS     R0,R0,#+4
   \   000001FA   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x4003c008
   \   000001FE   0x6008             STR      R0,[R1, #+0]
   1168          				LPC_CANAF->EFF_sa     -=0x04 ;
   \   00000200   0x.... 0x....      LDR.W    R0,??DataTable17_3  ;; 0x4003c00c
   \   00000204   0x6800             LDR      R0,[R0, #+0]
   \   00000206   0x1F00             SUBS     R0,R0,#+4
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable17_3  ;; 0x4003c00c
   \   0000020C   0x6008             STR      R0,[R1, #+0]
   1169          				LPC_CANAF->EFF_GRP_sa -=0x04;
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable17_4  ;; 0x4003c010
   \   00000212   0x6800             LDR      R0,[R0, #+0]
   \   00000214   0x1F00             SUBS     R0,R0,#+4
   \   00000216   0x.... 0x....      LDR.W    R1,??DataTable17_4  ;; 0x4003c010
   \   0000021A   0x6008             STR      R0,[R1, #+0]
   1170          				LPC_CANAF->ENDofTable -=0x04;
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable17_5  ;; 0x4003c014
   \   00000220   0x6800             LDR      R0,[R0, #+0]
   \   00000222   0x1F00             SUBS     R0,R0,#+4
   \   00000224   0x.... 0x....      LDR.W    R1,??DataTable17_5  ;; 0x4003c014
   \   00000228   0x6008             STR      R0,[R1, #+0]
   1171          			}
   1172          			CANAF_FullCAN_cnt--;
   \                     ??CAN_RemoveEntry_11: (+1)
   \   0000022A   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   0000022E   0x8800             LDRH     R0,[R0, #+0]
   \   00000230   0x1E40             SUBS     R0,R0,#+1
   \   00000232   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \   00000236   0x8008             STRH     R0,[R1, #+0]
   1173          
   1174          			//delete its FullCAN Object in the FullCAN Object section
   1175          			//remove all remaining FullCAN Object three place down
   1176          			cnt = total + position * 3;
   \   00000238   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000023A   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   0000023E   0x2003             MOVS     R0,#+3
   \   00000240   0xFB00 0x700A      MLA      R0,R0,R10,R7
   \   00000244   0x0005             MOVS     R5,R0
   1177          			bound = (CANAF_FullCAN_cnt - position + 1) * 3;
   \   00000246   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   0000024A   0x8800             LDRH     R0,[R0, #+0]
   \   0000024C   0xEBB0 0x000A      SUBS     R0,R0,R10
   \   00000250   0x1C40             ADDS     R0,R0,#+1
   \   00000252   0x2103             MOVS     R1,#+3
   \   00000254   0x4348             MULS     R0,R1,R0
   \   00000256   0x0006             MOVS     R6,R0
   1178          
   1179          			while(bound)
   \                     ??CAN_RemoveEntry_14: (+1)
   \   00000258   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000025A   0x2E00             CMP      R6,#+0
   \   0000025C   0xF000 0x8211      BEQ.W    ??CAN_RemoveEntry_15
   1180          			{
   1181          				LPC_CANAF_RAM->mask[cnt]=LPC_CANAF_RAM->mask[cnt+3];;
   \   00000260   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   00000264   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000266   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   0000026A   0x68C0             LDR      R0,[R0, #+12]
   \   0000026C   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   00000270   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000272   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1182          				LPC_CANAF_RAM->mask[cnt+1]=LPC_CANAF_RAM->mask[cnt+4];
   \   00000276   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   0000027A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000027C   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   00000280   0x6900             LDR      R0,[R0, #+16]
   \   00000282   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   00000286   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000288   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   0000028C   0x6048             STR      R0,[R1, #+4]
   1183          				LPC_CANAF_RAM->mask[cnt+2]=LPC_CANAF_RAM->mask[cnt+5];
   \   0000028E   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   00000292   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000294   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   00000298   0x6940             LDR      R0,[R0, #+20]
   \   0000029A   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   0000029E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000002A0   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   000002A4   0x6088             STR      R0,[R1, #+8]
   1184          				bound -=3;
   \   000002A6   0x1EF6             SUBS     R6,R6,#+3
   1185          				cnt   +=3;
   \   000002A8   0x1CED             ADDS     R5,R5,#+3
   \   000002AA   0xE7D5             B.N      ??CAN_RemoveEntry_14
   1186          			}
   1187          		}
   1188          	}
   1189          
   1190          /************** Remove Explicit Standard ID Entry *************/
   1191          	else if(EntryType == EXPLICIT_STANDARD_ENTRY)
   \                     ??CAN_RemoveEntry_2: (+1)
   \   000002AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000002AE   0x2C01             CMP      R4,#+1
   \   000002B0   0xF040 0x80DE      BNE.W    ??CAN_RemoveEntry_16
   1192          	{
   1193          		if((CANAF_std_cnt==0)||(position >= CANAF_std_cnt))
   \   000002B4   0x.... 0x....      LDR.W    R0,??DataTable15_2
   \   000002B8   0x8800             LDRH     R0,[R0, #+0]
   \   000002BA   0x2800             CMP      R0,#+0
   \   000002BC   0xD006             BEQ.N    ??CAN_RemoveEntry_17
   \   000002BE   0x4650             MOV      R0,R10
   \   000002C0   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   000002C4   0x8809             LDRH     R1,[R1, #+0]
   \   000002C6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002C8   0x4288             CMP      R0,R1
   \   000002CA   0xD301             BCC.N    ??CAN_RemoveEntry_18
   1194          		{
   1195          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_17: (+1)
   \   000002CC   0x2007             MOVS     R0,#+7
   \   000002CE   0xE1DD             B.N      ??CAN_RemoveEntry_5
   1196          		}
   1197          		else
   1198          		{
   1199          			cnt = ((CANAF_FullCAN_cnt+1)>>1)+ (position >> 1);
   \                     ??CAN_RemoveEntry_18: (+1)
   \   000002D0   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   000002D4   0x8800             LDRH     R0,[R0, #+0]
   \   000002D6   0x1C41             ADDS     R1,R0,#+1
   \   000002D8   0x4650             MOV      R0,R10
   \   000002DA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002DC   0x0840             LSRS     R0,R0,#+1
   \   000002DE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000002E0   0xEB10 0x0061      ADDS     R0,R0,R1, ASR #+1
   \   000002E4   0x0005             MOVS     R5,R0
   1200          			buf0 = LPC_CANAF_RAM->mask[cnt];
   \   000002E6   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   000002EA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000002EC   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000002F0   0x4680             MOV      R8,R0
   1201          			bound = (CANAF_std_cnt - position - 1)>>1;
   \   000002F2   0x.... 0x....      LDR.W    R0,??DataTable15_2
   \   000002F6   0x8800             LDRH     R0,[R0, #+0]
   \   000002F8   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   000002FC   0xEBB0 0x000A      SUBS     R0,R0,R10
   \   00000300   0x1E40             SUBS     R0,R0,#+1
   \   00000302   0x1040             ASRS     R0,R0,#+1
   \   00000304   0x0006             MOVS     R6,R0
   1202          			if((position & 0x0001) == 0) //event position
   \   00000306   0xEA5F 0x70CA      LSLS     R0,R10,#+31
   \   0000030A   0xD417             BMI.N    ??CAN_RemoveEntry_19
   1203          			{
   1204          				while(bound--)
   \                     ??CAN_RemoveEntry_20: (+1)
   \   0000030C   0x0030             MOVS     R0,R6
   \   0000030E   0x1E46             SUBS     R6,R0,#+1
   \   00000310   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000312   0x2800             CMP      R0,#+0
   \   00000314   0xD03A             BEQ.N    ??CAN_RemoveEntry_21
   1205          				{
   1206          					//remove all remaining FullCAN entry one place down
   1207          					buf1  = LPC_CANAF_RAM->mask[cnt+1];
   \   00000316   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   0000031A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000031C   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   00000320   0x6840             LDR      R0,[R0, #+4]
   \   00000322   0x4681             MOV      R9,R0
   1208          					LPC_CANAF_RAM->mask[cnt] = (buf1 >> 16) | (buf0 << 16);
   \   00000324   0xEA5F 0x4008      LSLS     R0,R8,#+16
   \   00000328   0xEA50 0x4019      ORRS     R0,R0,R9, LSR #+16
   \   0000032C   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   00000330   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000332   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1209          					buf0  = buf1;
   \   00000336   0x46C8             MOV      R8,R9
   1210          					cnt++;
   \   00000338   0x1C6D             ADDS     R5,R5,#+1
   \   0000033A   0xE7E7             B.N      ??CAN_RemoveEntry_20
   1211          				}
   1212          			}
   1213          			else //odd position
   1214          			{
   1215          				while(bound--)
   \                     ??CAN_RemoveEntry_19: (+1)
   \   0000033C   0x0030             MOVS     R0,R6
   \   0000033E   0x1E46             SUBS     R6,R0,#+1
   \   00000340   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000342   0x2800             CMP      R0,#+0
   \   00000344   0xD022             BEQ.N    ??CAN_RemoveEntry_21
   1216          				{
   1217          					//remove all remaining FullCAN entry one place down
   1218          					buf1  = LPC_CANAF_RAM->mask[cnt+1];
   \   00000346   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   0000034A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000034C   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   00000350   0x6840             LDR      R0,[R0, #+4]
   \   00000352   0x4681             MOV      R9,R0
   1219          					LPC_CANAF_RAM->mask[cnt] = (buf0 & 0xFFFF0000)|(buf1 >> 16);
   \   00000354   0xEA5F 0x4018      LSRS     R0,R8,#+16
   \   00000358   0x0400             LSLS     R0,R0,#+16
   \   0000035A   0xEA50 0x4019      ORRS     R0,R0,R9, LSR #+16
   \   0000035E   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   00000362   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000364   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1220          					LPC_CANAF_RAM->mask[cnt+1] = LPC_CANAF_RAM->mask[cnt+1] << 16;
   \   00000368   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   0000036C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000036E   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   00000372   0x6840             LDR      R0,[R0, #+4]
   \   00000374   0x0400             LSLS     R0,R0,#+16
   \   00000376   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   0000037A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000037C   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   00000380   0x6048             STR      R0,[R1, #+4]
   1221          					buf0  = buf1<<16;
   \   00000382   0xEA5F 0x4009      LSLS     R0,R9,#+16
   \   00000386   0x4680             MOV      R8,R0
   1222          					cnt++;
   \   00000388   0x1C6D             ADDS     R5,R5,#+1
   \   0000038A   0xE7D7             B.N      ??CAN_RemoveEntry_19
   1223          				}
   1224          			}
   1225          			if((CANAF_std_cnt & 0x0001) == 0)
   \                     ??CAN_RemoveEntry_21: (+1)
   \   0000038C   0x.... 0x....      LDR.W    R0,??DataTable15_2
   \   00000390   0x7800             LDRB     R0,[R0, #+0]
   \   00000392   0x07C0             LSLS     R0,R0,#+31
   \   00000394   0xD418             BMI.N    ??CAN_RemoveEntry_22
   1226          			{
   1227          				if((position & 0x0001)==0)
   \   00000396   0xEA5F 0x70CA      LSLS     R0,R10,#+31
   \   0000039A   0xD40B             BMI.N    ??CAN_RemoveEntry_23
   1228          					LPC_CANAF_RAM->mask[cnt] = (buf0 << 16) | (0x0000FFFF);
   \   0000039C   0xEA5F 0x4008      LSLS     R0,R8,#+16
   \   000003A0   0xF440 0x407F      ORR      R0,R0,#0xFF00
   \   000003A4   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   000003A8   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   000003AC   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000003AE   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   000003B2   0xE055             B.N      ??CAN_RemoveEntry_24
   1229          				else
   1230          					LPC_CANAF_RAM->mask[cnt] = buf0 | 0x0000FFFF;
   \                     ??CAN_RemoveEntry_23: (+1)
   \   000003B4   0xF448 0x407F      ORR      R0,R8,#0xFF00
   \   000003B8   0xF050 0x00FF      ORRS     R0,R0,#0xFF
   \   000003BC   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   000003C0   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000003C2   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   \   000003C6   0xE04B             B.N      ??CAN_RemoveEntry_24
   1231          			}
   1232          			else
   1233          			{
   1234          				//remove all remaining section one place down
   1235          				cnt = ((CANAF_FullCAN_cnt + 1)>>1) + ((CANAF_std_cnt + 1) >> 1);
   \                     ??CAN_RemoveEntry_22: (+1)
   \   000003C8   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   000003CC   0x8800             LDRH     R0,[R0, #+0]
   \   000003CE   0x1C40             ADDS     R0,R0,#+1
   \   000003D0   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   000003D4   0x8809             LDRH     R1,[R1, #+0]
   \   000003D6   0x1C49             ADDS     R1,R1,#+1
   \   000003D8   0x1049             ASRS     R1,R1,#+1
   \   000003DA   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000003DE   0x0005             MOVS     R5,R0
   1236          				bound = total + CANAF_FullCAN_cnt * 3;
   \   000003E0   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000003E2   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   000003E6   0x8800             LDRH     R0,[R0, #+0]
   \   000003E8   0x2103             MOVS     R1,#+3
   \   000003EA   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   000003EE   0x0006             MOVS     R6,R0
   1237          				while(bound>cnt)
   \                     ??CAN_RemoveEntry_25: (+1)
   \   000003F0   0x0028             MOVS     R0,R5
   \   000003F2   0x0031             MOVS     R1,R6
   \   000003F4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000003F6   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000003F8   0x4288             CMP      R0,R1
   \   000003FA   0xD20D             BCS.N    ??CAN_RemoveEntry_26
   1238          				{
   1239          					LPC_CANAF_RAM->mask[cnt-1] = LPC_CANAF_RAM->mask[cnt];
   \   000003FC   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   00000400   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000402   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000406   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   0000040A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000040C   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   00000410   0xF841 0x0C04      STR      R0,[R1, #-4]
   1240          					cnt++;
   \   00000414   0x1C6D             ADDS     R5,R5,#+1
   \   00000416   0xE7EB             B.N      ??CAN_RemoveEntry_25
   1241          				}
   1242          				LPC_CANAF_RAM->mask[cnt-1]=0x00;
   \                     ??CAN_RemoveEntry_26: (+1)
   \   00000418   0x2000             MOVS     R0,#+0
   \   0000041A   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   0000041E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000420   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   00000424   0xF841 0x0C04      STR      R0,[R1, #-4]
   1243          				//update address value
   1244          				LPC_CANAF->SFF_GRP_sa -=0x04 ;
   \   00000428   0x.... 0x....      LDR.W    R0,??DataTable17_2  ;; 0x4003c008
   \   0000042C   0x6800             LDR      R0,[R0, #+0]
   \   0000042E   0x1F00             SUBS     R0,R0,#+4
   \   00000430   0x.... 0x....      LDR.W    R1,??DataTable17_2  ;; 0x4003c008
   \   00000434   0x6008             STR      R0,[R1, #+0]
   1245          				LPC_CANAF->EFF_sa     -=0x04 ;
   \   00000436   0x.... 0x....      LDR.W    R0,??DataTable17_3  ;; 0x4003c00c
   \   0000043A   0x6800             LDR      R0,[R0, #+0]
   \   0000043C   0x1F00             SUBS     R0,R0,#+4
   \   0000043E   0x.... 0x....      LDR.W    R1,??DataTable17_3  ;; 0x4003c00c
   \   00000442   0x6008             STR      R0,[R1, #+0]
   1246          				LPC_CANAF->EFF_GRP_sa -=0x04;
   \   00000444   0x.... 0x....      LDR.W    R0,??DataTable17_4  ;; 0x4003c010
   \   00000448   0x6800             LDR      R0,[R0, #+0]
   \   0000044A   0x1F00             SUBS     R0,R0,#+4
   \   0000044C   0x.... 0x....      LDR.W    R1,??DataTable17_4  ;; 0x4003c010
   \   00000450   0x6008             STR      R0,[R1, #+0]
   1247          				LPC_CANAF->ENDofTable -=0x04;
   \   00000452   0x.... 0x....      LDR.W    R0,??DataTable17_5  ;; 0x4003c014
   \   00000456   0x6800             LDR      R0,[R0, #+0]
   \   00000458   0x1F00             SUBS     R0,R0,#+4
   \   0000045A   0x.... 0x....      LDR.W    R1,??DataTable17_5  ;; 0x4003c014
   \   0000045E   0x6008             STR      R0,[R1, #+0]
   1248          			}
   1249          			CANAF_std_cnt--;
   \                     ??CAN_RemoveEntry_24: (+1)
   \   00000460   0x.... 0x....      LDR.W    R0,??DataTable15_2
   \   00000464   0x8800             LDRH     R0,[R0, #+0]
   \   00000466   0x1E40             SUBS     R0,R0,#+1
   \   00000468   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   0000046C   0x8008             STRH     R0,[R1, #+0]
   \   0000046E   0xE108             B.N      ??CAN_RemoveEntry_15
   1250          		}
   1251          	}
   1252          
   1253          /************** Remove Group of Standard ID Entry *************/
   1254          	else if(EntryType == GROUP_STANDARD_ENTRY)
   \                     ??CAN_RemoveEntry_16: (+1)
   \   00000470   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000472   0x2C02             CMP      R4,#+2
   \   00000474   0xD15D             BNE.N    ??CAN_RemoveEntry_27
   1255          	{
   1256          		if((CANAF_gstd_cnt==0)||(position >= CANAF_gstd_cnt))
   \   00000476   0x.... 0x....      LDR.W    R0,??DataTable10
   \   0000047A   0x8800             LDRH     R0,[R0, #+0]
   \   0000047C   0x2800             CMP      R0,#+0
   \   0000047E   0xD006             BEQ.N    ??CAN_RemoveEntry_28
   \   00000480   0x4650             MOV      R0,R10
   \   00000482   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000486   0x8809             LDRH     R1,[R1, #+0]
   \   00000488   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000048A   0x4288             CMP      R0,R1
   \   0000048C   0xD301             BCC.N    ??CAN_RemoveEntry_29
   1257          		{
   1258          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_28: (+1)
   \   0000048E   0x2007             MOVS     R0,#+7
   \   00000490   0xE0FC             B.N      ??CAN_RemoveEntry_5
   1259          		}
   1260          		else
   1261          		{
   1262          			cnt = ((CANAF_FullCAN_cnt + 1)>>1) + ((CANAF_std_cnt + 1) >> 1)+ position + 1;
   \                     ??CAN_RemoveEntry_29: (+1)
   \   00000492   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000496   0x8800             LDRH     R0,[R0, #+0]
   \   00000498   0x1C40             ADDS     R0,R0,#+1
   \   0000049A   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   0000049E   0x8809             LDRH     R1,[R1, #+0]
   \   000004A0   0x1C49             ADDS     R1,R1,#+1
   \   000004A2   0x1049             ASRS     R1,R1,#+1
   \   000004A4   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   000004A8   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   000004AC   0x1C40             ADDS     R0,R0,#+1
   \   000004AE   0x0005             MOVS     R5,R0
   1263          			bound = total + CANAF_FullCAN_cnt * 3;
   \   000004B0   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000004B2   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   000004B6   0x8800             LDRH     R0,[R0, #+0]
   \   000004B8   0x2103             MOVS     R1,#+3
   \   000004BA   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   000004BE   0x0006             MOVS     R6,R0
   1264          			while (cnt<bound)
   \                     ??CAN_RemoveEntry_30: (+1)
   \   000004C0   0x0028             MOVS     R0,R5
   \   000004C2   0x0031             MOVS     R1,R6
   \   000004C4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000004C6   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   000004C8   0x4288             CMP      R0,R1
   \   000004CA   0xD20D             BCS.N    ??CAN_RemoveEntry_31
   1265          			{
   1266          				LPC_CANAF_RAM->mask[cnt-1] = LPC_CANAF_RAM->mask[cnt];
   \   000004CC   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   000004D0   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000004D2   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000004D6   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   000004DA   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000004DC   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   000004E0   0xF841 0x0C04      STR      R0,[R1, #-4]
   1267          				cnt++;
   \   000004E4   0x1C6D             ADDS     R5,R5,#+1
   \   000004E6   0xE7EB             B.N      ??CAN_RemoveEntry_30
   1268          			}
   1269          			LPC_CANAF_RAM->mask[cnt-1]=0x00;
   \                     ??CAN_RemoveEntry_31: (+1)
   \   000004E8   0x2000             MOVS     R0,#+0
   \   000004EA   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   000004EE   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000004F0   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   000004F4   0xF841 0x0C04      STR      R0,[R1, #-4]
   1270          		}
   1271          		CANAF_gstd_cnt--;
   \   000004F8   0x.... 0x....      LDR.W    R0,??DataTable10
   \   000004FC   0x8800             LDRH     R0,[R0, #+0]
   \   000004FE   0x1E40             SUBS     R0,R0,#+1
   \   00000500   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000504   0x8008             STRH     R0,[R1, #+0]
   1272          		//update address value
   1273          		LPC_CANAF->EFF_sa     -=0x04;
   \   00000506   0x.... 0x....      LDR.W    R0,??DataTable17_3  ;; 0x4003c00c
   \   0000050A   0x6800             LDR      R0,[R0, #+0]
   \   0000050C   0x1F00             SUBS     R0,R0,#+4
   \   0000050E   0x.... 0x....      LDR.W    R1,??DataTable17_3  ;; 0x4003c00c
   \   00000512   0x6008             STR      R0,[R1, #+0]
   1274          		LPC_CANAF->EFF_GRP_sa -=0x04;
   \   00000514   0x.... 0x....      LDR.W    R0,??DataTable17_4  ;; 0x4003c010
   \   00000518   0x6800             LDR      R0,[R0, #+0]
   \   0000051A   0x1F00             SUBS     R0,R0,#+4
   \   0000051C   0x.... 0x....      LDR.W    R1,??DataTable17_4  ;; 0x4003c010
   \   00000520   0x6008             STR      R0,[R1, #+0]
   1275          		LPC_CANAF->ENDofTable -=0x04;
   \   00000522   0x.... 0x....      LDR.W    R0,??DataTable17_5  ;; 0x4003c014
   \   00000526   0x6800             LDR      R0,[R0, #+0]
   \   00000528   0x1F00             SUBS     R0,R0,#+4
   \   0000052A   0x.... 0x....      LDR.W    R1,??DataTable17_5  ;; 0x4003c014
   \   0000052E   0x6008             STR      R0,[R1, #+0]
   \   00000530   0xE0A7             B.N      ??CAN_RemoveEntry_15
   1276          	}
   1277          
   1278          /************** Remove Explicit Extended ID Entry *************/
   1279          	else if(EntryType == EXPLICIT_EXTEND_ENTRY)
   \                     ??CAN_RemoveEntry_27: (+1)
   \   00000532   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000534   0x2C03             CMP      R4,#+3
   \   00000536   0xD158             BNE.N    ??CAN_RemoveEntry_32
   1280          	{
   1281          		if((CANAF_ext_cnt==0)||(position >= CANAF_ext_cnt))
   \   00000538   0x.... 0x....      LDR.W    R0,??DataTable10_1
   \   0000053C   0x8800             LDRH     R0,[R0, #+0]
   \   0000053E   0x2800             CMP      R0,#+0
   \   00000540   0xD006             BEQ.N    ??CAN_RemoveEntry_33
   \   00000542   0x4650             MOV      R0,R10
   \   00000544   0x.... 0x....      LDR.W    R1,??DataTable10_1
   \   00000548   0x8809             LDRH     R1,[R1, #+0]
   \   0000054A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000054C   0x4288             CMP      R0,R1
   \   0000054E   0xD301             BCC.N    ??CAN_RemoveEntry_34
   1282          		{
   1283          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_33: (+1)
   \   00000550   0x2007             MOVS     R0,#+7
   \   00000552   0xE09B             B.N      ??CAN_RemoveEntry_5
   1284          		}
   1285          		else
   1286          		{
   1287          			cnt = ((CANAF_FullCAN_cnt + 1)>>1) + ((CANAF_std_cnt + 1) >> 1)+ CANAF_gstd_cnt + position + 1;
   \                     ??CAN_RemoveEntry_34: (+1)
   \   00000554   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000558   0x8800             LDRH     R0,[R0, #+0]
   \   0000055A   0x1C40             ADDS     R0,R0,#+1
   \   0000055C   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \   00000560   0x8809             LDRH     R1,[R1, #+0]
   \   00000562   0x1C49             ADDS     R1,R1,#+1
   \   00000564   0x1049             ASRS     R1,R1,#+1
   \   00000566   0xEB11 0x0060      ADDS     R0,R1,R0, ASR #+1
   \   0000056A   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000056E   0x8809             LDRH     R1,[R1, #+0]
   \   00000570   0x1808             ADDS     R0,R1,R0
   \   00000572   0xEB1A 0x0000      ADDS     R0,R10,R0
   \   00000576   0x1C40             ADDS     R0,R0,#+1
   \   00000578   0x0005             MOVS     R5,R0
   1288          			bound = total + CANAF_FullCAN_cnt * 3;
   \   0000057A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000057C   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000580   0x8800             LDRH     R0,[R0, #+0]
   \   00000582   0x2103             MOVS     R1,#+3
   \   00000584   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   00000588   0x0006             MOVS     R6,R0
   1289          			while (cnt<bound)
   \                     ??CAN_RemoveEntry_35: (+1)
   \   0000058A   0x0028             MOVS     R0,R5
   \   0000058C   0x0031             MOVS     R1,R6
   \   0000058E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000590   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000592   0x4288             CMP      R0,R1
   \   00000594   0xD20D             BCS.N    ??CAN_RemoveEntry_36
   1290          			{
   1291          				LPC_CANAF_RAM->mask[cnt-1] = LPC_CANAF_RAM->mask[cnt];
   \   00000596   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   0000059A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000059C   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000005A0   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   000005A4   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000005A6   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   000005AA   0xF841 0x0C04      STR      R0,[R1, #-4]
   1292          				cnt++;
   \   000005AE   0x1C6D             ADDS     R5,R5,#+1
   \   000005B0   0xE7EB             B.N      ??CAN_RemoveEntry_35
   1293          			}
   1294          			LPC_CANAF_RAM->mask[cnt-1]=0x00;
   \                     ??CAN_RemoveEntry_36: (+1)
   \   000005B2   0x2000             MOVS     R0,#+0
   \   000005B4   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   000005B8   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000005BA   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   000005BE   0xF841 0x0C04      STR      R0,[R1, #-4]
   1295          		}
   1296          		CANAF_ext_cnt--;
   \   000005C2   0x....             LDR.N    R0,??DataTable10_1
   \   000005C4   0x8800             LDRH     R0,[R0, #+0]
   \   000005C6   0x1E40             SUBS     R0,R0,#+1
   \   000005C8   0x....             LDR.N    R1,??DataTable10_1
   \   000005CA   0x8008             STRH     R0,[R1, #+0]
   1297          		LPC_CANAF->EFF_GRP_sa -=0x04;
   \   000005CC   0x.... 0x....      LDR.W    R0,??DataTable17_4  ;; 0x4003c010
   \   000005D0   0x6800             LDR      R0,[R0, #+0]
   \   000005D2   0x1F00             SUBS     R0,R0,#+4
   \   000005D4   0x.... 0x....      LDR.W    R1,??DataTable17_4  ;; 0x4003c010
   \   000005D8   0x6008             STR      R0,[R1, #+0]
   1298          		LPC_CANAF->ENDofTable -=0x04;
   \   000005DA   0x.... 0x....      LDR.W    R0,??DataTable17_5  ;; 0x4003c014
   \   000005DE   0x6800             LDR      R0,[R0, #+0]
   \   000005E0   0x1F00             SUBS     R0,R0,#+4
   \   000005E2   0x.... 0x....      LDR.W    R1,??DataTable17_5  ;; 0x4003c014
   \   000005E6   0x6008             STR      R0,[R1, #+0]
   \   000005E8   0xE04B             B.N      ??CAN_RemoveEntry_15
   1299          	}
   1300          
   1301          /************** Remove Group of Extended ID Entry *************/
   1302          	else
   1303          	{
   1304          		if((CANAF_gext_cnt==0)||(position >= CANAF_gext_cnt))
   \                     ??CAN_RemoveEntry_32: (+1)
   \   000005EA   0x.... 0x....      LDR.W    R0,??DataTable11
   \   000005EE   0x8800             LDRH     R0,[R0, #+0]
   \   000005F0   0x2800             CMP      R0,#+0
   \   000005F2   0xD006             BEQ.N    ??CAN_RemoveEntry_37
   \   000005F4   0x4650             MOV      R0,R10
   \   000005F6   0x.... 0x....      LDR.W    R1,??DataTable11
   \   000005FA   0x8809             LDRH     R1,[R1, #+0]
   \   000005FC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000005FE   0x4288             CMP      R0,R1
   \   00000600   0xD301             BCC.N    ??CAN_RemoveEntry_38
   1305          		{
   1306          			return CAN_ENTRY_NOT_EXIT_ERROR;
   \                     ??CAN_RemoveEntry_37: (+1)
   \   00000602   0x2007             MOVS     R0,#+7
   \   00000604   0xE042             B.N      ??CAN_RemoveEntry_5
   1307          		}
   1308          		else
   1309          		{
   1310          			cnt = total - (CANAF_gext_cnt<<1) + (position<<1);
   \                     ??CAN_RemoveEntry_38: (+1)
   \   00000606   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000608   0x.... 0x....      LDR.W    R0,??DataTable11
   \   0000060C   0x8800             LDRH     R0,[R0, #+0]
   \   0000060E   0xEBB7 0x0040      SUBS     R0,R7,R0, LSL #+1
   \   00000612   0xFA1F 0xFA8A      UXTH     R10,R10          ;; ZeroExt  R10,R10,#+16,#+16
   \   00000616   0xEB10 0x004A      ADDS     R0,R0,R10, LSL #+1
   \   0000061A   0x0005             MOVS     R5,R0
   1311          			bound = total + CANAF_FullCAN_cnt * 3;
   \   0000061C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000061E   0x.... 0x....      LDR.W    R0,??DataTable15_1
   \   00000622   0x8800             LDRH     R0,[R0, #+0]
   \   00000624   0x2103             MOVS     R1,#+3
   \   00000626   0xFB01 0x7000      MLA      R0,R1,R0,R7
   \   0000062A   0x0006             MOVS     R6,R0
   1312          			while (cnt<bound)
   \                     ??CAN_RemoveEntry_39: (+1)
   \   0000062C   0x0028             MOVS     R0,R5
   \   0000062E   0x0031             MOVS     R1,R6
   \   00000630   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000632   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000634   0x4288             CMP      R0,R1
   \   00000636   0xD218             BCS.N    ??CAN_RemoveEntry_40
   1313          			{
   1314          				//remove all remaining entry two place up
   1315          				LPC_CANAF_RAM->mask[cnt] = LPC_CANAF_RAM->mask[cnt+2];
   \   00000638   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   0000063C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000063E   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   00000642   0x6880             LDR      R0,[R0, #+8]
   \   00000644   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   00000648   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000064A   0xF841 0x0025      STR      R0,[R1, R5, LSL #+2]
   1316          				LPC_CANAF_RAM->mask[cnt+1] = LPC_CANAF_RAM->mask[cnt+3];
   \   0000064E   0x.... 0x....      LDR.W    R0,??DataTable17_1  ;; 0x40038000
   \   00000652   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000654   0xEB00 0x0085      ADD      R0,R0,R5, LSL #+2
   \   00000658   0x68C0             LDR      R0,[R0, #+12]
   \   0000065A   0x.... 0x....      LDR.W    R1,??DataTable17_1  ;; 0x40038000
   \   0000065E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000660   0xEB01 0x0185      ADD      R1,R1,R5, LSL #+2
   \   00000664   0x6048             STR      R0,[R1, #+4]
   1317          				cnt+=2;
   \   00000666   0x1CAD             ADDS     R5,R5,#+2
   \   00000668   0xE7E0             B.N      ??CAN_RemoveEntry_39
   1318          			}
   1319          		}
   1320          		CANAF_gext_cnt--;
   \                     ??CAN_RemoveEntry_40: (+1)
   \   0000066A   0x....             LDR.N    R0,??DataTable11
   \   0000066C   0x8800             LDRH     R0,[R0, #+0]
   \   0000066E   0x1E40             SUBS     R0,R0,#+1
   \   00000670   0x....             LDR.N    R1,??DataTable11
   \   00000672   0x8008             STRH     R0,[R1, #+0]
   1321          		LPC_CANAF->ENDofTable -=0x08;
   \   00000674   0x.... 0x....      LDR.W    R0,??DataTable17_5  ;; 0x4003c014
   \   00000678   0x6800             LDR      R0,[R0, #+0]
   \   0000067A   0x3808             SUBS     R0,R0,#+8
   \   0000067C   0x.... 0x....      LDR.W    R1,??DataTable17_5  ;; 0x4003c014
   \   00000680   0x6008             STR      R0,[R1, #+0]
   1322          	}
   1323          	LPC_CANAF->AFMR = 0x04;
   \                     ??CAN_RemoveEntry_15: (+1)
   \   00000682   0x2004             MOVS     R0,#+4
   \   00000684   0x.... 0x....      LDR.W    R1,??DataTable17  ;; 0x4003c000
   \   00000688   0x6008             STR      R0,[R1, #+0]
   1324          	return CAN_OK;
   \   0000068A   0x2001             MOVS     R0,#+1
   \                     ??CAN_RemoveEntry_5: (+1)
   \   0000068C   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
   1325          }
   1326          
   1327          /********************************************************************//**
   1328           * @brief		Send message data
   1329           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1330           * 				- CAN1: CAN 1
   1331           * 				- CAN2: CAN 2
   1332           * @param[in]	CAN_Msg point to the CAN_MSG_Type Structure, it contains message
   1333           * 				information such as: ID, DLC, RTR, ID Format
   1334           * @return 		Status:
   1335           * 				- SUCCESS: send message successfully
   1336           * 				- ERROR: send message unsuccessfully
   1337           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1338          Status CAN_SendMsg (LPC_CAN_TypeDef *CANx, CAN_MSG_Type *CAN_Msg)
   1339          {
   \                     CAN_SendMsg: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1340          	uint32_t data;
   1341          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD009             BEQ.N    ??CAN_SendMsg_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable17_7  ;; 0x40048000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD005             BEQ.N    ??CAN_SendMsg_0
   \   00000016   0xF240 0x513D      MOVW     R1,#+1341
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable15
   \   0000001E   0x.... 0x....      BL       check_failed
   1342          	CHECK_PARAM(PARAM_ID_FORMAT(CAN_Msg->format));
   \                     ??CAN_SendMsg_0: (+1)
   \   00000022   0x7B68             LDRB     R0,[R5, #+13]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD008             BEQ.N    ??CAN_SendMsg_1
   \   00000028   0x7B68             LDRB     R0,[R5, #+13]
   \   0000002A   0x2801             CMP      R0,#+1
   \   0000002C   0xD005             BEQ.N    ??CAN_SendMsg_1
   \   0000002E   0xF240 0x513E      MOVW     R1,#+1342
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000036   0x.... 0x....      BL       check_failed
   1343          	if(CAN_Msg->format==STD_ID_FORMAT)
   \                     ??CAN_SendMsg_1: (+1)
   \   0000003A   0x7B68             LDRB     R0,[R5, #+13]
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD10A             BNE.N    ??CAN_SendMsg_2
   1344          	{
   1345          		CHECK_PARAM(PARAM_ID_11(CAN_Msg->id));
   \   00000040   0x6828             LDR      R0,[R5, #+0]
   \   00000042   0x0AC0             LSRS     R0,R0,#+11
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD010             BEQ.N    ??CAN_SendMsg_3
   \   00000048   0xF240 0x5141      MOVW     R1,#+1345
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000050   0x.... 0x....      BL       check_failed
   \   00000054   0xE009             B.N      ??CAN_SendMsg_3
   1346          	}
   1347          	else
   1348          	{
   1349          		CHECK_PARAM(PARAM_ID_29(CAN_Msg->id));
   \                     ??CAN_SendMsg_2: (+1)
   \   00000056   0x6828             LDR      R0,[R5, #+0]
   \   00000058   0x0F40             LSRS     R0,R0,#+29
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xD005             BEQ.N    ??CAN_SendMsg_3
   \   0000005E   0xF240 0x5145      MOVW     R1,#+1349
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000066   0x.... 0x....      BL       check_failed
   1350          	}
   1351          	CHECK_PARAM(PARAM_DLC(CAN_Msg->len));
   \                     ??CAN_SendMsg_3: (+1)
   \   0000006A   0x7B28             LDRB     R0,[R5, #+12]
   \   0000006C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006E   0x0900             LSRS     R0,R0,#+4
   \   00000070   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD005             BEQ.N    ??CAN_SendMsg_4
   \   00000076   0xF240 0x5147      MOVW     R1,#+1351
   \   0000007A   0x.... 0x....      LDR.W    R0,??DataTable15
   \   0000007E   0x.... 0x....      BL       check_failed
   1352          	CHECK_PARAM(PARAM_FRAME_TYPE(CAN_Msg->type));
   \                     ??CAN_SendMsg_4: (+1)
   \   00000082   0x7BA8             LDRB     R0,[R5, #+14]
   \   00000084   0x2800             CMP      R0,#+0
   \   00000086   0xD008             BEQ.N    ??CAN_SendMsg_5
   \   00000088   0x7BA8             LDRB     R0,[R5, #+14]
   \   0000008A   0x2801             CMP      R0,#+1
   \   0000008C   0xD005             BEQ.N    ??CAN_SendMsg_5
   \   0000008E   0xF44F 0x61A9      MOV      R1,#+1352
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000096   0x.... 0x....      BL       check_failed
   1353          
   1354          	//Check status of Transmit Buffer 1
   1355          	if ((CANx->SR & 0x00000004)>>2)
   \                     ??CAN_SendMsg_5: (+1)
   \   0000009A   0x69E0             LDR      R0,[R4, #+28]
   \   0000009C   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD03E             BEQ.N    ??CAN_SendMsg_6
   1356          	{
   1357          		/* Transmit Channel 1 is available */
   1358          		/* Write frame informations and frame data into its CANxTFI1,
   1359          		 * CANxTID1, CANxTDA1, CANxTDB1 register */
   1360          		CANx->TFI1 &= ~0x000F000;
   \   000000A4   0x6B20             LDR      R0,[R4, #+48]
   \   000000A6   0xF430 0x4070      BICS     R0,R0,#0xF000
   \   000000AA   0x6320             STR      R0,[R4, #+48]
   1361          		CANx->TFI1 |= (CAN_Msg->len)<<16;
   \   000000AC   0x6B20             LDR      R0,[R4, #+48]
   \   000000AE   0x7B29             LDRB     R1,[R5, #+12]
   \   000000B0   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   000000B4   0x6320             STR      R0,[R4, #+48]
   1362          		if(CAN_Msg->type == REMOTE_FRAME)
   \   000000B6   0x7BA8             LDRB     R0,[R5, #+14]
   \   000000B8   0x2801             CMP      R0,#+1
   \   000000BA   0xD104             BNE.N    ??CAN_SendMsg_7
   1363          		{
   1364          			CANx->TFI1 |= (1<<30); //set bit RTR
   \   000000BC   0x6B20             LDR      R0,[R4, #+48]
   \   000000BE   0xF050 0x4080      ORRS     R0,R0,#0x40000000
   \   000000C2   0x6320             STR      R0,[R4, #+48]
   \   000000C4   0xE003             B.N      ??CAN_SendMsg_8
   1365          		}
   1366          		else
   1367          		{
   1368          			CANx->TFI1 &= ~(1<<30);
   \                     ??CAN_SendMsg_7: (+1)
   \   000000C6   0x6B20             LDR      R0,[R4, #+48]
   \   000000C8   0xF030 0x4080      BICS     R0,R0,#0x40000000
   \   000000CC   0x6320             STR      R0,[R4, #+48]
   1369          		}
   1370          		if(CAN_Msg->format == EXT_ID_FORMAT)
   \                     ??CAN_SendMsg_8: (+1)
   \   000000CE   0x7B68             LDRB     R0,[R5, #+13]
   \   000000D0   0x2801             CMP      R0,#+1
   \   000000D2   0xD104             BNE.N    ??CAN_SendMsg_9
   1371          		{
   1372          			CANx->TFI1 |= (1<<31); //set bit FF
   \   000000D4   0x6B20             LDR      R0,[R4, #+48]
   \   000000D6   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   000000DA   0x6320             STR      R0,[R4, #+48]
   \   000000DC   0xE003             B.N      ??CAN_SendMsg_10
   1373          		}
   1374          		else
   1375          		{
   1376          			CANx->TFI1 &= ~(1<<31);
   \                     ??CAN_SendMsg_9: (+1)
   \   000000DE   0x6B20             LDR      R0,[R4, #+48]
   \   000000E0   0xF020 0x4000      BIC      R0,R0,#0x80000000
   \   000000E4   0x6320             STR      R0,[R4, #+48]
   1377          		}
   1378          
   1379          		/* Write CAN ID*/
   1380          		CANx->TID1 = CAN_Msg->id;
   \                     ??CAN_SendMsg_10: (+1)
   \   000000E6   0x6828             LDR      R0,[R5, #+0]
   \   000000E8   0x6360             STR      R0,[R4, #+52]
   1381          
   1382          		/*Write first 4 data bytes*/
   1383          		data = (CAN_Msg->dataA[0])|(((CAN_Msg->dataA[1]))<<8)|((CAN_Msg->dataA[2])<<16)|((CAN_Msg->dataA[3])<<24);
   \   000000EA   0x7928             LDRB     R0,[R5, #+4]
   \   000000EC   0x7969             LDRB     R1,[R5, #+5]
   \   000000EE   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \   000000F2   0x79A9             LDRB     R1,[R5, #+6]
   \   000000F4   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   000000F8   0x79E9             LDRB     R1,[R5, #+7]
   \   000000FA   0xEA50 0x6001      ORRS     R0,R0,R1, LSL #+24
   \   000000FE   0x0006             MOVS     R6,R0
   1384          //		CANx->TDA1 = *((uint32_t *) &(CAN_Msg->dataA));
   1385          		CANx->TDA1 = data;
   \   00000100   0x63A6             STR      R6,[R4, #+56]
   1386          
   1387          		/*Write second 4 data bytes*/
   1388          		data = (CAN_Msg->dataB[0])|(((CAN_Msg->dataB[1]))<<8)|((CAN_Msg->dataB[2])<<16)|((CAN_Msg->dataB[3])<<24);
   \   00000102   0x7A28             LDRB     R0,[R5, #+8]
   \   00000104   0x7A69             LDRB     R1,[R5, #+9]
   \   00000106   0xEA50 0x2001      ORRS     R0,R0,R1, LSL #+8
   \   0000010A   0x7AA9             LDRB     R1,[R5, #+10]
   \   0000010C   0xEA50 0x4001      ORRS     R0,R0,R1, LSL #+16
   \   00000110   0x7AE9             LDRB     R1,[R5, #+11]
   \   00000112   0xEA50 0x6001      ORRS     R0,R0,R1, LSL #+24
   \   00000116   0x0006             MOVS     R6,R0
   1389          //		CANx->TDB1 = *((uint32_t *) &(CAN_Msg->dataB));
   1390          		CANx->TDB1 = data;
   \   00000118   0x63E6             STR      R6,[R4, #+60]
   1391          
   1392          		 /*Write transmission request*/
   1393          		 CANx->CMR = 0x21;
   \   0000011A   0x2021             MOVS     R0,#+33
   \   0000011C   0x6060             STR      R0,[R4, #+4]
   1394          		 return SUCCESS;
   \   0000011E   0x2001             MOVS     R0,#+1
   \   00000120   0xE002             B.N      ??CAN_SendMsg_11
   1395          	}
   1396          	//check status of Transmit Buffer 2
   1397          	else if((CANx->SR & 0x00000004)>>10)
   \                     ??CAN_SendMsg_6: (+1)
   \   00000122   0x69E0             LDR      R0,[R4, #+28]
   1398          	{
   1399          		/* Transmit Channel 2 is available */
   1400          		/* Write frame informations and frame data into its CANxTFI2,
   1401          		 * CANxTID2, CANxTDA2, CANxTDB2 register */
   1402          		CANx->TFI2 &= ~0x000F000;
   1403          		CANx->TFI2 |= (CAN_Msg->len)<<16;
   1404          		if(CAN_Msg->type == REMOTE_FRAME)
   1405          		{
   1406          			CANx->TFI2 |= (1<<30); //set bit RTR
   1407          		}
   1408          		else
   1409          		{
   1410          			CANx->TFI2 &= ~(1<<30);
   1411          		}
   1412          		if(CAN_Msg->format == EXT_ID_FORMAT)
   1413          		{
   1414          			CANx->TFI2 |= (1<<31); //set bit FF
   1415          		}
   1416          		else
   1417          		{
   1418          			CANx->TFI2 &= ~(1<<31);
   1419          		}
   1420          
   1421          		/* Write CAN ID*/
   1422          		CANx->TID2 = CAN_Msg->id;
   1423          
   1424          		/*Write first 4 data bytes*/
   1425          		data = (CAN_Msg->dataA[0])|(((CAN_Msg->dataA[1]))<<8)|((CAN_Msg->dataA[2])<<16)|((CAN_Msg->dataA[3])<<24);
   1426          //		CANx->TDA2 = *((uint32_t *) &(CAN_Msg->dataA));
   1427          		CANx->TDA2 = data;
   1428          
   1429          		/*Write second 4 data bytes*/
   1430          		data = (CAN_Msg->dataB[0])|(((CAN_Msg->dataB[1]))<<8)|((CAN_Msg->dataB[2])<<16)|((CAN_Msg->dataB[3])<<24);
   1431          //		CANx->TDB2 = *((uint32_t *) &(CAN_Msg->dataB));
   1432          		CANx->TDB2 = data;
   1433          
   1434          		/*Write transmission request*/
   1435          		CANx->CMR = 0x41;
   1436          		return SUCCESS;
   1437          	}
   1438          	//check status of Transmit Buffer 3
   1439          	else if ((CANx->SR & 0x00000004)>>18)
   \   00000124   0x69E0             LDR      R0,[R4, #+28]
   1440          	{
   1441          		/* Transmit Channel 3 is available */
   1442          		/* Write frame informations and frame data into its CANxTFI3,
   1443          		 * CANxTID3, CANxTDA3, CANxTDB3 register */
   1444          		CANx->TFI3 &= ~0x000F000;
   1445          		CANx->TFI3 |= (CAN_Msg->len)<<16;
   1446          		if(CAN_Msg->type == REMOTE_FRAME)
   1447          		{
   1448          			CANx->TFI3 |= (1<<30); //set bit RTR
   1449          		}
   1450          		else
   1451          		{
   1452          			CANx->TFI3 &= ~(1<<30);
   1453          		}
   1454          		if(CAN_Msg->format == EXT_ID_FORMAT)
   1455          		{
   1456          			CANx->TFI3 |= (1<<31); //set bit FF
   1457          		}
   1458          		else
   1459          		{
   1460          			CANx->TFI3 &= ~(1<<31);
   1461          		}
   1462          
   1463          		/* Write CAN ID*/
   1464          		CANx->TID3 = CAN_Msg->id;
   1465          
   1466          		/*Write first 4 data bytes*/
   1467          		data = (CAN_Msg->dataA[0])|(((CAN_Msg->dataA[1]))<<8)|((CAN_Msg->dataA[2])<<16)|((CAN_Msg->dataA[3])<<24);
   1468          //		CANx->TDA3 = *((uint32_t *) &(CAN_Msg->dataA));
   1469          		CANx->TDA3 = data;
   1470          
   1471          		/*Write second 4 data bytes*/
   1472          		data = (CAN_Msg->dataB[0])|(((CAN_Msg->dataB[1]))<<8)|((CAN_Msg->dataB[2])<<16)|((CAN_Msg->dataB[3])<<24);
   1473          //		CANx->TDB3 = *((uint32_t *) &(CAN_Msg->dataB));
   1474          		CANx->TDB3 = data;
   1475          
   1476          		/*Write transmission request*/
   1477          		CANx->CMR = 0x81;
   1478          		return SUCCESS;
   1479          	}
   1480          	else
   1481          	{
   1482          		return ERROR;
   \   00000126   0x2000             MOVS     R0,#+0
   \                     ??CAN_SendMsg_11: (+1)
   \   00000128   0xBD70             POP      {R4-R6,PC}       ;; return
   1483          	}
   1484          }
   1485          
   1486          /********************************************************************//**
   1487           * @brief		Receive message data
   1488           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1489           * 				- CAN1: CAN 1
   1490           * 				- CAN2: CAN 2
   1491           * @param[in]	CAN_Msg point to the CAN_MSG_Type Struct, it will contain received
   1492           *  			message information such as: ID, DLC, RTR, ID Format
   1493           * @return 		Status:
   1494           * 				- SUCCESS: receive message successfully
   1495           * 				- ERROR: receive message unsuccessfully
   1496           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1497          Status CAN_ReceiveMsg (LPC_CAN_TypeDef *CANx, CAN_MSG_Type *CAN_Msg)
   1498          {
   \                     CAN_ReceiveMsg: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1499          	uint32_t data;
   1500          
   1501          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD009             BEQ.N    ??CAN_ReceiveMsg_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable17_7  ;; 0x40048000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD005             BEQ.N    ??CAN_ReceiveMsg_0
   \   00000016   0xF240 0x51DD      MOVW     R1,#+1501
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable15
   \   0000001E   0x.... 0x....      BL       check_failed
   1502          
   1503          	//check status of Receive Buffer
   1504          	if((CANx->SR &0x00000001))
   \                     ??CAN_ReceiveMsg_0: (+1)
   \   00000022   0x69E0             LDR      R0,[R4, #+28]
   \   00000024   0x07C0             LSLS     R0,R0,#+31
   \   00000026   0xD529             BPL.N    ??CAN_ReceiveMsg_1
   1505          	{
   1506          		/* Receive message is available */
   1507          		/* Read frame informations */
   1508          		CAN_Msg->format   = (uint8_t)(((CANx->RFS) & 0x80000000)>>31);
   \   00000028   0x6A20             LDR      R0,[R4, #+32]
   \   0000002A   0x0FC0             LSRS     R0,R0,#+31
   \   0000002C   0x7368             STRB     R0,[R5, #+13]
   1509          		CAN_Msg->type     = (uint8_t)(((CANx->RFS) & 0x40000000)>>30);
   \   0000002E   0x6A20             LDR      R0,[R4, #+32]
   \   00000030   0x0F80             LSRS     R0,R0,#+30
   \   00000032   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000036   0x73A8             STRB     R0,[R5, #+14]
   1510          		CAN_Msg->len      = (uint8_t)(((CANx->RFS) & 0x000F0000)>>16);
   \   00000038   0x6A20             LDR      R0,[R4, #+32]
   \   0000003A   0x0C00             LSRS     R0,R0,#+16
   \   0000003C   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   00000040   0x7328             STRB     R0,[R5, #+12]
   1511          
   1512          
   1513          		/* Read CAN message identifier */
   1514          		CAN_Msg->id = CANx->RID;
   \   00000042   0x6A60             LDR      R0,[R4, #+36]
   \   00000044   0x6028             STR      R0,[R5, #+0]
   1515          
   1516          		/* Read the data if received message was DATA FRAME */
   1517          		if (CAN_Msg->type == DATA_FRAME)
   \   00000046   0x7BA8             LDRB     R0,[R5, #+14]
   \   00000048   0x2800             CMP      R0,#+0
   \   0000004A   0xD115             BNE.N    ??CAN_ReceiveMsg_2
   1518          		{
   1519          			/* Read first 4 data bytes */
   1520          //			*((uint32_t *) &CAN_Msg->dataA) = CANx->RDA;
   1521          			data = CANx->RDA;
   \   0000004C   0x6AA0             LDR      R0,[R4, #+40]
   \   0000004E   0x0006             MOVS     R6,R0
   1522          			*((uint8_t *) &CAN_Msg->dataA[0])= data & 0x000000FF;
   \   00000050   0x712E             STRB     R6,[R5, #+4]
   1523          			*((uint8_t *) &CAN_Msg->dataA[1])= (data & 0x0000FF00)>>8;;
   \   00000052   0x0A30             LSRS     R0,R6,#+8
   \   00000054   0x7168             STRB     R0,[R5, #+5]
   1524          			*((uint8_t *) &CAN_Msg->dataA[2])= (data & 0x00FF0000)>>16;
   \   00000056   0x0C30             LSRS     R0,R6,#+16
   \   00000058   0x71A8             STRB     R0,[R5, #+6]
   1525          			*((uint8_t *) &CAN_Msg->dataA[3])= (data & 0xFF000000)>>24;
   \   0000005A   0x0E30             LSRS     R0,R6,#+24
   \   0000005C   0x71E8             STRB     R0,[R5, #+7]
   1526          
   1527          			/* Read second 4 data bytes */
   1528          //			*((uint32_t *) &CAN_Msg->dataB) = CANx->RDB;
   1529          			data = CANx->RDB;
   \   0000005E   0x6AE0             LDR      R0,[R4, #+44]
   \   00000060   0x0006             MOVS     R6,R0
   1530          			*((uint8_t *) &CAN_Msg->dataB[0])= data & 0x000000FF;
   \   00000062   0x722E             STRB     R6,[R5, #+8]
   1531          			*((uint8_t *) &CAN_Msg->dataB[1])= (data & 0x0000FF00)>>8;
   \   00000064   0x0A30             LSRS     R0,R6,#+8
   \   00000066   0x7268             STRB     R0,[R5, #+9]
   1532          			*((uint8_t *) &CAN_Msg->dataB[2])= (data & 0x00FF0000)>>16;
   \   00000068   0x0C30             LSRS     R0,R6,#+16
   \   0000006A   0x72A8             STRB     R0,[R5, #+10]
   1533          			*((uint8_t *) &CAN_Msg->dataB[3])= (data & 0xFF000000)>>24;
   \   0000006C   0x0E30             LSRS     R0,R6,#+24
   \   0000006E   0x72E8             STRB     R0,[R5, #+11]
   1534          
   1535          		/*release receive buffer*/
   1536          		CANx->CMR = 0x04;
   \   00000070   0x2004             MOVS     R0,#+4
   \   00000072   0x6060             STR      R0,[R4, #+4]
   1537          		}
   1538          		else
   1539          		{
   1540          			/* Received Frame is a Remote Frame, not have data, we just receive
   1541          			 * message information only */
   1542          			return SUCCESS;
   1543          		}
   1544          	}
   1545          	else
   1546          	{
   1547          		// no receive message available
   1548          		return ERROR;
   1549          	}
   1550          	return SUCCESS;
   \   00000074   0x2001             MOVS     R0,#+1
   \   00000076   0xE002             B.N      ??CAN_ReceiveMsg_3
   \                     ??CAN_ReceiveMsg_2: (+1)
   \   00000078   0x2001             MOVS     R0,#+1
   \   0000007A   0xE000             B.N      ??CAN_ReceiveMsg_3
   \                     ??CAN_ReceiveMsg_1: (+1)
   \   0000007C   0x2000             MOVS     R0,#+0
   \                     ??CAN_ReceiveMsg_3: (+1)
   \   0000007E   0xBD70             POP      {R4-R6,PC}       ;; return
   1551          }
   1552          
   1553          /********************************************************************//**
   1554           * @brief		Receive FullCAN Object
   1555           * @param[in]	CANAFx: CAN Acceptance Filter register, should be LPC_CANAF
   1556           * @param[in]	CAN_Msg point to the CAN_MSG_Type Struct, it will contain received
   1557           *  			message information such as: ID, DLC, RTR, ID Format
   1558           * @return 		CAN_ERROR, could be:
   1559           * 				- CAN_FULL_OBJ_NOT_RCV: FullCAN Object is not be received
   1560           * 				- CAN_OK: Received FullCAN Object successful
   1561           *
   1562           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1563          CAN_ERROR FCAN_ReadObj (LPC_CANAF_TypeDef* CANAFx, CAN_MSG_Type *CAN_Msg)
   1564          {
   \                     FCAN_ReadObj: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   1565          	uint32_t *pSrc, data;
   1566          	uint32_t interrut_word, msg_idx, test_bit, head_idx, tail_idx;
   1567          
   1568          	CHECK_PARAM(PARAM_CANAFx(CANAFx));
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable17  ;; 0x4003c000
   \   0000000C   0x4284             CMP      R4,R0
   \   0000000E   0xD005             BEQ.N    ??FCAN_ReadObj_0
   \   00000010   0xF44F 0x61C4      MOV      R1,#+1568
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable15
   \   00000018   0x.... 0x....      BL       check_failed
   1569          
   1570          	interrut_word = 0;
   \                     ??FCAN_ReadObj_0: (+1)
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0x4680             MOV      R8,R0
   1571          
   1572          	if (LPC_CANAF->FCANIC0 != 0)
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable17_8  ;; 0x4003c024
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD008             BEQ.N    ??FCAN_ReadObj_1
   1573          	{
   1574          		interrut_word = LPC_CANAF->FCANIC0;
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable17_8  ;; 0x4003c024
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x4680             MOV      R8,R0
   1575          		head_idx = 0;
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x9000             STR      R0,[SP, #+0]
   1576          		tail_idx = 31;
   \   00000036   0x201F             MOVS     R0,#+31
   \   00000038   0x4683             MOV      R11,R0
   \   0000003A   0xE00C             B.N      ??FCAN_ReadObj_2
   1577          	}
   1578          	else if (LPC_CANAF->FCANIC1 != 0)
   \                     ??FCAN_ReadObj_1: (+1)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable17_9  ;; 0x4003c028
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x2800             CMP      R0,#+0
   \   00000044   0xD007             BEQ.N    ??FCAN_ReadObj_2
   1579          	{
   1580          		interrut_word = LPC_CANAF->FCANIC1;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable17_9  ;; 0x4003c028
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x4680             MOV      R8,R0
   1581          		head_idx = 32;
   \   0000004E   0x2020             MOVS     R0,#+32
   \   00000050   0x9000             STR      R0,[SP, #+0]
   1582          		tail_idx = 63;
   \   00000052   0x203F             MOVS     R0,#+63
   \   00000054   0x4683             MOV      R11,R0
   1583          	}
   1584          
   1585          	if (interrut_word != 0)
   \                     ??FCAN_ReadObj_2: (+1)
   \   00000056   0xF1B8 0x0F00      CMP      R8,#+0
   \   0000005A   0xD050             BEQ.N    ??FCAN_ReadObj_3
   1586          	{
   1587          		/* Detect for interrupt pending */
   1588          		msg_idx = 0;
   \   0000005C   0x2000             MOVS     R0,#+0
   \   0000005E   0x4681             MOV      R9,R0
   1589          		for (msg_idx = head_idx; msg_idx <= tail_idx; msg_idx++)
   \   00000060   0x9800             LDR      R0,[SP, #+0]
   \   00000062   0x4681             MOV      R9,R0
   \                     ??FCAN_ReadObj_4: (+1)
   \   00000064   0x45CB             CMP      R11,R9
   \   00000066   0xD34A             BCC.N    ??FCAN_ReadObj_3
   1590          		{
   1591          			test_bit = interrut_word & 0x1;
   \   00000068   0xF018 0x0001      ANDS     R0,R8,#0x1
   \   0000006C   0x4682             MOV      R10,R0
   1592          			interrut_word = interrut_word >> 1;
   \   0000006E   0xEA5F 0x0858      LSRS     R8,R8,#+1
   1593          
   1594          			if (test_bit)
   \   00000072   0xF1BA 0x0F00      CMP      R10,#+0
   \   00000076   0xD03F             BEQ.N    ??FCAN_ReadObj_5
   1595          			{
   1596          				pSrc = (uint32_t *) (LPC_CANAF->ENDofTable + LPC_CANAF_RAM_BASE + msg_idx * 12);
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable17_5  ;; 0x4003c014
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x210C             MOVS     R1,#+12
   \   00000080   0xFB01 0x0009      MLA      R0,R1,R9,R0
   \   00000084   0xF100 0x4080      ADD      R0,R0,#+1073741824
   \   00000088   0xF510 0x3060      ADDS     R0,R0,#+229376
   \   0000008C   0x0006             MOVS     R6,R0
   1597          
   1598          	    	 	/* Has been finished updating the content */
   1599          	    	 	if ((*pSrc & 0x03000000L) == 0x03000000L)
   \   0000008E   0x6830             LDR      R0,[R6, #+0]
   \   00000090   0xF010 0x7040      ANDS     R0,R0,#0x3000000
   \   00000094   0xF1B0 0x7F40      CMP      R0,#+50331648
   \   00000098   0xD12E             BNE.N    ??FCAN_ReadObj_5
   1600          	    	 	{
   1601          	    	 		/*clear semaphore*/
   1602          	    	 		*pSrc &= 0xFCFFFFFF;
   \   0000009A   0x6830             LDR      R0,[R6, #+0]
   \   0000009C   0xF030 0x7040      BICS     R0,R0,#0x3000000
   \   000000A0   0x6030             STR      R0,[R6, #+0]
   1603          
   1604          	    	 		/*Set to DatA*/
   1605          	    	 		pSrc++;
   \   000000A2   0x1D36             ADDS     R6,R6,#+4
   1606          	    	 		/* Copy to dest buf */
   1607          //	    	 		*((uint32_t *) &CAN_Msg->dataA) = *pSrc;
   1608          	    	 		data = *pSrc;
   \   000000A4   0x6830             LDR      R0,[R6, #+0]
   \   000000A6   0x0007             MOVS     R7,R0
   1609          	    			*((uint8_t *) &CAN_Msg->dataA[0])= data & 0x000000FF;
   \   000000A8   0x712F             STRB     R7,[R5, #+4]
   1610          	    			*((uint8_t *) &CAN_Msg->dataA[1])= (data & 0x0000FF00)>>8;
   \   000000AA   0x0A38             LSRS     R0,R7,#+8
   \   000000AC   0x7168             STRB     R0,[R5, #+5]
   1611          	    			*((uint8_t *) &CAN_Msg->dataA[2])= (data & 0x00FF0000)>>16;
   \   000000AE   0x0C38             LSRS     R0,R7,#+16
   \   000000B0   0x71A8             STRB     R0,[R5, #+6]
   1612          	    			*((uint8_t *) &CAN_Msg->dataA[3])= (data & 0xFF000000)>>24;
   \   000000B2   0x0E38             LSRS     R0,R7,#+24
   \   000000B4   0x71E8             STRB     R0,[R5, #+7]
   1613          
   1614          	    	 		/*Set to DatB*/
   1615          	    	 		pSrc++;
   \   000000B6   0x1D36             ADDS     R6,R6,#+4
   1616          	    	 		/* Copy to dest buf */
   1617          //	    	 		*((uint32_t *) &CAN_Msg->dataB) = *pSrc;
   1618          	    	 		data = *pSrc;
   \   000000B8   0x6830             LDR      R0,[R6, #+0]
   \   000000BA   0x0007             MOVS     R7,R0
   1619          	    			*((uint8_t *) &CAN_Msg->dataB[0])= data & 0x000000FF;
   \   000000BC   0x722F             STRB     R7,[R5, #+8]
   1620          	    			*((uint8_t *) &CAN_Msg->dataB[1])= (data & 0x0000FF00)>>8;
   \   000000BE   0x0A38             LSRS     R0,R7,#+8
   \   000000C0   0x7268             STRB     R0,[R5, #+9]
   1621          	    			*((uint8_t *) &CAN_Msg->dataB[2])= (data & 0x00FF0000)>>16;
   \   000000C2   0x0C38             LSRS     R0,R7,#+16
   \   000000C4   0x72A8             STRB     R0,[R5, #+10]
   1622          	    			*((uint8_t *) &CAN_Msg->dataB[3])= (data & 0xFF000000)>>24;
   \   000000C6   0x0E38             LSRS     R0,R7,#+24
   \   000000C8   0x72E8             STRB     R0,[R5, #+11]
   1623          	    	 		/*Back to Dat1*/
   1624          	    	 		pSrc -= 2;
   \   000000CA   0x3E08             SUBS     R6,R6,#+8
   1625          
   1626          	    	 		CAN_Msg->id = *pSrc & 0x7FF;
   \   000000CC   0x6830             LDR      R0,[R6, #+0]
   \   000000CE   0x0540             LSLS     R0,R0,#+21       ;; ZeroExtS R0,R0,#+21,#+21
   \   000000D0   0x0D40             LSRS     R0,R0,#+21
   \   000000D2   0x6028             STR      R0,[R5, #+0]
   1627          	    	 		CAN_Msg->len = (uint8_t) (*pSrc >> 16) & 0x0F;
   \   000000D4   0x6830             LDR      R0,[R6, #+0]
   \   000000D6   0x0C00             LSRS     R0,R0,#+16
   \   000000D8   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   000000DC   0x7328             STRB     R0,[R5, #+12]
   1628          					CAN_Msg->format = 0; //FullCAN Object ID always is 11-bit value
   \   000000DE   0x2000             MOVS     R0,#+0
   \   000000E0   0x7368             STRB     R0,[R5, #+13]
   1629          					CAN_Msg->type = (uint8_t)(*pSrc >> 30) &0x01;
   \   000000E2   0x6830             LDR      R0,[R6, #+0]
   \   000000E4   0x0F80             LSRS     R0,R0,#+30
   \   000000E6   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   000000EA   0x73A8             STRB     R0,[R5, #+14]
   1630          	    	 		/*Re-read semaphore*/
   1631          	    	 		if ((*pSrc & 0x03000000L) == 0)
   \   000000EC   0x6830             LDR      R0,[R6, #+0]
   \   000000EE   0xF010 0x7F40      TST      R0,#0x3000000
   \   000000F2   0xD101             BNE.N    ??FCAN_ReadObj_5
   1632          	    	 		{
   1633          	    	 			return CAN_OK;
   \   000000F4   0x2001             MOVS     R0,#+1
   \   000000F6   0xE003             B.N      ??FCAN_ReadObj_6
   1634          	    	 		}
   1635          	    	 	}
   1636          			}
   1637          		}
   \                     ??FCAN_ReadObj_5: (+1)
   \   000000F8   0xF119 0x0901      ADDS     R9,R9,#+1
   \   000000FC   0xE7B2             B.N      ??FCAN_ReadObj_4
   1638          	}
   1639          	return CAN_FULL_OBJ_NOT_RCV;
   \                     ??FCAN_ReadObj_3: (+1)
   \   000000FE   0x2003             MOVS     R0,#+3
   \                     ??FCAN_ReadObj_6: (+1)
   \   00000100   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
   1640          }
   1641          /********************************************************************//**
   1642           * @brief		Get CAN Control Status
   1643           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1644           * 				- CAN1: CAN 1
   1645           * 				- CAN2: CAN 2
   1646           * @param[in]	arg: type of CAN status to get from CAN status register
   1647           * 				Should be:
   1648           * 				- CANCTRL_GLOBAL_STS: CAN Global Status
   1649           * 				- CANCTRL_INT_CAP: CAN Interrupt and Capture
   1650           * 				- CANCTRL_ERR_WRN: CAN Error Warning Limit
   1651           * 				- CANCTRL_STS: CAN Control Status
   1652           * @return 		Current Control Status that you want to get value
   1653           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1654          uint32_t CAN_GetCTRLStatus (LPC_CAN_TypeDef* CANx, CAN_CTRL_STS_Type arg)
   1655          {
   \                     CAN_GetCTRLStatus: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1656          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD008             BEQ.N    ??CAN_GetCTRLStatus_0
   \   0000000E   0x.... 0x....      LDR.W    R0,??DataTable17_7  ;; 0x40048000
   \   00000012   0x4284             CMP      R4,R0
   \   00000014   0xD004             BEQ.N    ??CAN_GetCTRLStatus_0
   \   00000016   0xF44F 0x61CF      MOV      R1,#+1656
   \   0000001A   0x....             LDR.N    R0,??DataTable15
   \   0000001C   0x.... 0x....      BL       check_failed
   1657          	CHECK_PARAM(PARAM_CTRL_STS_TYPE(arg));
   \                     ??CAN_GetCTRLStatus_0: (+1)
   \   00000020   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000022   0x2D00             CMP      R5,#+0
   \   00000024   0xD00D             BEQ.N    ??CAN_GetCTRLStatus_1
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0x2D01             CMP      R5,#+1
   \   0000002A   0xD00A             BEQ.N    ??CAN_GetCTRLStatus_1
   \   0000002C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002E   0x2D02             CMP      R5,#+2
   \   00000030   0xD007             BEQ.N    ??CAN_GetCTRLStatus_1
   \   00000032   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000034   0x2D03             CMP      R5,#+3
   \   00000036   0xD004             BEQ.N    ??CAN_GetCTRLStatus_1
   \   00000038   0xF240 0x6179      MOVW     R1,#+1657
   \   0000003C   0x....             LDR.N    R0,??DataTable15
   \   0000003E   0x.... 0x....      BL       check_failed
   1658          
   1659          	switch (arg)
   \                     ??CAN_GetCTRLStatus_1: (+1)
   \   00000042   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000044   0x2D00             CMP      R5,#+0
   \   00000046   0xD003             BEQ.N    ??CAN_GetCTRLStatus_2
   \   00000048   0x2D02             CMP      R5,#+2
   \   0000004A   0xD005             BEQ.N    ??CAN_GetCTRLStatus_3
   \   0000004C   0xD302             BCC.N    ??CAN_GetCTRLStatus_4
   \   0000004E   0xE005             B.N      ??CAN_GetCTRLStatus_5
   1660          	{
   1661          	case CANCTRL_GLOBAL_STS:
   1662          		return CANx->GSR;
   \                     ??CAN_GetCTRLStatus_2: (+1)
   \   00000050   0x68A0             LDR      R0,[R4, #+8]
   \   00000052   0xE004             B.N      ??CAN_GetCTRLStatus_6
   1663          
   1664          	case CANCTRL_INT_CAP:
   1665          		return CANx->ICR;
   \                     ??CAN_GetCTRLStatus_4: (+1)
   \   00000054   0x68E0             LDR      R0,[R4, #+12]
   \   00000056   0xE002             B.N      ??CAN_GetCTRLStatus_6
   1666          
   1667          	case CANCTRL_ERR_WRN:
   1668          		return CANx->EWL;
   \                     ??CAN_GetCTRLStatus_3: (+1)
   \   00000058   0x69A0             LDR      R0,[R4, #+24]
   \   0000005A   0xE000             B.N      ??CAN_GetCTRLStatus_6
   1669          
   1670          	default: // CANCTRL_STS
   1671          		return CANx->SR;
   \                     ??CAN_GetCTRLStatus_5: (+1)
   \   0000005C   0x69E0             LDR      R0,[R4, #+28]
   \                     ??CAN_GetCTRLStatus_6: (+1)
   \   0000005E   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1672          	}
   1673          }
   1674          /********************************************************************//**
   1675           * @brief		Get CAN Central Status
   1676           * @param[in]	CANCRx point to LPC_CANCR_TypeDef
   1677           * @param[in]	arg: type of CAN status to get from CAN Central status register
   1678           * 				Should be:
   1679           * 				- CANCR_TX_STS: Central CAN Tx Status
   1680           * 				- CANCR_RX_STS: Central CAN Rx Status
   1681           * 				- CANCR_MS: Central CAN Miscellaneous Status
   1682           * @return 		Current Central Status that you want to get value
   1683           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1684          uint32_t CAN_GetCRStatus (LPC_CANCR_TypeDef* CANCRx, CAN_CR_STS_Type arg)
   1685          {
   \                     CAN_GetCRStatus: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1686          	CHECK_PARAM(PARAM_CANCRx(CANCRx));
   \   00000006   0x.... 0x....      LDR.W    R0,??DataTable17_10  ;; 0x40040000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD004             BEQ.N    ??CAN_GetCRStatus_0
   \   0000000E   0xF240 0x6196      MOVW     R1,#+1686
   \   00000012   0x....             LDR.N    R0,??DataTable15
   \   00000014   0x.... 0x....      BL       check_failed
   1687          	CHECK_PARAM(PARAM_CR_STS_TYPE(arg));
   \                     ??CAN_GetCRStatus_0: (+1)
   \   00000018   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001A   0x2D00             CMP      R5,#+0
   \   0000001C   0xD00A             BEQ.N    ??CAN_GetCRStatus_1
   \   0000001E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000020   0x2D01             CMP      R5,#+1
   \   00000022   0xD007             BEQ.N    ??CAN_GetCRStatus_1
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x2D02             CMP      R5,#+2
   \   00000028   0xD004             BEQ.N    ??CAN_GetCRStatus_1
   \   0000002A   0xF240 0x6197      MOVW     R1,#+1687
   \   0000002E   0x....             LDR.N    R0,??DataTable15
   \   00000030   0x.... 0x....      BL       check_failed
   1688          
   1689          	switch (arg)
   \                     ??CAN_GetCRStatus_1: (+1)
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0x2D00             CMP      R5,#+0
   \   00000038   0xD002             BEQ.N    ??CAN_GetCRStatus_2
   \   0000003A   0x2D01             CMP      R5,#+1
   \   0000003C   0xD002             BEQ.N    ??CAN_GetCRStatus_3
   \   0000003E   0xE003             B.N      ??CAN_GetCRStatus_4
   1690          	{
   1691          	case CANCR_TX_STS:
   1692          		return CANCRx->CANTxSR;
   \                     ??CAN_GetCRStatus_2: (+1)
   \   00000040   0x6820             LDR      R0,[R4, #+0]
   \   00000042   0xE002             B.N      ??CAN_GetCRStatus_5
   1693          
   1694          	case CANCR_RX_STS:
   1695          		return CANCRx->CANRxSR;
   \                     ??CAN_GetCRStatus_3: (+1)
   \   00000044   0x6860             LDR      R0,[R4, #+4]
   \   00000046   0xE000             B.N      ??CAN_GetCRStatus_5
   1696          
   1697          	default:	// CANCR_MS
   1698          		return CANCRx->CANMSR;
   \                     ??CAN_GetCRStatus_4: (+1)
   \   00000048   0x68A0             LDR      R0,[R4, #+8]
   \                     ??CAN_GetCRStatus_5: (+1)
   \   0000004A   0xBD32             POP      {R1,R4,R5,PC}    ;; return
   1699          	}
   1700          }
   1701          /********************************************************************//**
   1702           * @brief		Enable/Disable CAN Interrupt
   1703           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1704           * 				- CAN1: CAN 1
   1705           * 				- CAN2: CAN 2
   1706           * @param[in]	arg: type of CAN interrupt that you want to enable/disable
   1707           * 				Should be:
   1708           * 				- CANINT_RIE: CAN Receiver Interrupt Enable
   1709           * 				- CANINT_TIE1: CAN Transmit Interrupt Enable
   1710           * 				- CANINT_EIE: CAN Error Warning Interrupt Enable
   1711           * 				- CANINT_DOIE: CAN Data Overrun Interrupt Enable
   1712           * 				- CANINT_WUIE: CAN Wake-Up Interrupt Enable
   1713           * 				- CANINT_EPIE: CAN Error Passive Interrupt Enable
   1714           * 				- CANINT_ALIE: CAN Arbitration Lost Interrupt Enable
   1715           * 				- CANINT_BEIE: CAN Bus Error Interrupt Enable
   1716           * 				- CANINT_IDIE: CAN ID Ready Interrupt Enable
   1717           * 				- CANINT_TIE2: CAN Transmit Interrupt Enable for Buffer2
   1718           * 				- CANINT_TIE3: CAN Transmit Interrupt Enable for Buffer3
   1719           * 				- CANINT_FCE: FullCAN Interrupt Enable
   1720           * @param[in]	NewState: New state of this function, should be:
   1721           * 				- ENABLE
   1722           * 				- DISABLE
   1723           * @return 		none
   1724           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1725          void CAN_IRQCmd (LPC_CAN_TypeDef* CANx, CAN_INT_EN_Type arg, FunctionalState NewState)
   1726          {
   \                     CAN_IRQCmd: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   1727          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable17_6  ;; 0x40044000
   \   0000000C   0x4284             CMP      R4,R0
   \   0000000E   0xD008             BEQ.N    ??CAN_IRQCmd_0
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable17_7  ;; 0x40048000
   \   00000014   0x4284             CMP      R4,R0
   \   00000016   0xD004             BEQ.N    ??CAN_IRQCmd_0
   \   00000018   0xF240 0x61BF      MOVW     R1,#+1727
   \   0000001C   0x....             LDR.N    R0,??DataTable15
   \   0000001E   0x.... 0x....      BL       check_failed
   1728          	CHECK_PARAM(PARAM_INT_EN_TYPE(arg));
   \                     ??CAN_IRQCmd_0: (+1)
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0x2D00             CMP      R5,#+0
   \   00000026   0xD025             BEQ.N    ??CAN_IRQCmd_1
   \   00000028   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002A   0x2D01             CMP      R5,#+1
   \   0000002C   0xD022             BEQ.N    ??CAN_IRQCmd_1
   \   0000002E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000030   0x2D02             CMP      R5,#+2
   \   00000032   0xD01F             BEQ.N    ??CAN_IRQCmd_1
   \   00000034   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000036   0x2D03             CMP      R5,#+3
   \   00000038   0xD01C             BEQ.N    ??CAN_IRQCmd_1
   \   0000003A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003C   0x2D04             CMP      R5,#+4
   \   0000003E   0xD019             BEQ.N    ??CAN_IRQCmd_1
   \   00000040   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000042   0x2D05             CMP      R5,#+5
   \   00000044   0xD016             BEQ.N    ??CAN_IRQCmd_1
   \   00000046   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000048   0x2D06             CMP      R5,#+6
   \   0000004A   0xD013             BEQ.N    ??CAN_IRQCmd_1
   \   0000004C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004E   0x2D07             CMP      R5,#+7
   \   00000050   0xD010             BEQ.N    ??CAN_IRQCmd_1
   \   00000052   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000054   0x2D08             CMP      R5,#+8
   \   00000056   0xD00D             BEQ.N    ??CAN_IRQCmd_1
   \   00000058   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005A   0x2D09             CMP      R5,#+9
   \   0000005C   0xD00A             BEQ.N    ??CAN_IRQCmd_1
   \   0000005E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000060   0x2D0A             CMP      R5,#+10
   \   00000062   0xD007             BEQ.N    ??CAN_IRQCmd_1
   \   00000064   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000066   0x2D0B             CMP      R5,#+11
   \   00000068   0xD004             BEQ.N    ??CAN_IRQCmd_1
   \   0000006A   0xF44F 0x61D8      MOV      R1,#+1728
   \   0000006E   0x....             LDR.N    R0,??DataTable15
   \   00000070   0x.... 0x....      BL       check_failed
   1729          	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
   \                     ??CAN_IRQCmd_1: (+1)
   \   00000074   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000076   0x2E00             CMP      R6,#+0
   \   00000078   0xD007             BEQ.N    ??CAN_IRQCmd_2
   \   0000007A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000007C   0x2E01             CMP      R6,#+1
   \   0000007E   0xD004             BEQ.N    ??CAN_IRQCmd_2
   \   00000080   0xF240 0x61C1      MOVW     R1,#+1729
   \   00000084   0x....             LDR.N    R0,??DataTable15
   \   00000086   0x.... 0x....      BL       check_failed
   1730          
   1731          	if(NewState == ENABLE)
   \                     ??CAN_IRQCmd_2: (+1)
   \   0000008A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000008C   0x2E01             CMP      R6,#+1
   \   0000008E   0xD112             BNE.N    ??CAN_IRQCmd_3
   1732          	{
   1733          		if(arg==CANINT_FCE)
   \   00000090   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000092   0x2D0B             CMP      R5,#+11
   \   00000094   0xD109             BNE.N    ??CAN_IRQCmd_4
   1734          		{
   1735          			LPC_CANAF->AFMR = 0x01;
   \   00000096   0x2001             MOVS     R0,#+1
   \   00000098   0x....             LDR.N    R1,??DataTable17  ;; 0x4003c000
   \   0000009A   0x6008             STR      R0,[R1, #+0]
   1736          			LPC_CANAF->FCANIE = 0x01;
   \   0000009C   0x2001             MOVS     R0,#+1
   \   0000009E   0x....             LDR.N    R1,??DataTable17_11  ;; 0x4003c020
   \   000000A0   0x6008             STR      R0,[R1, #+0]
   1737          			LPC_CANAF->AFMR = 0x04;
   \   000000A2   0x2004             MOVS     R0,#+4
   \   000000A4   0x....             LDR.N    R1,??DataTable17  ;; 0x4003c000
   \   000000A6   0x6008             STR      R0,[R1, #+0]
   \   000000A8   0xE017             B.N      ??CAN_IRQCmd_5
   1738          		}
   1739          		else
   1740          			CANx->IER |= (1 << arg);
   \                     ??CAN_IRQCmd_4: (+1)
   \   000000AA   0x6920             LDR      R0,[R4, #+16]
   \   000000AC   0x2101             MOVS     R1,#+1
   \   000000AE   0x40A9             LSLS     R1,R1,R5
   \   000000B0   0x4308             ORRS     R0,R1,R0
   \   000000B2   0x6120             STR      R0,[R4, #+16]
   \   000000B4   0xE011             B.N      ??CAN_IRQCmd_5
   1741          	}
   1742          	else
   1743          	{
   1744          		if(arg==CANINT_FCE){
   \                     ??CAN_IRQCmd_3: (+1)
   \   000000B6   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000B8   0x2D0B             CMP      R5,#+11
   \   000000BA   0xD109             BNE.N    ??CAN_IRQCmd_6
   1745          			LPC_CANAF->AFMR = 0x01;
   \   000000BC   0x2001             MOVS     R0,#+1
   \   000000BE   0x....             LDR.N    R1,??DataTable17  ;; 0x4003c000
   \   000000C0   0x6008             STR      R0,[R1, #+0]
   1746          			LPC_CANAF->FCANIE = 0x01;
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0x....             LDR.N    R1,??DataTable17_11  ;; 0x4003c020
   \   000000C6   0x6008             STR      R0,[R1, #+0]
   1747          			LPC_CANAF->AFMR = 0x00;
   \   000000C8   0x2000             MOVS     R0,#+0
   \   000000CA   0x....             LDR.N    R1,??DataTable17  ;; 0x4003c000
   \   000000CC   0x6008             STR      R0,[R1, #+0]
   \   000000CE   0xE004             B.N      ??CAN_IRQCmd_5
   1748          		}
   1749          		else
   1750          			CANx->IER &= ~(1 << arg);
   \                     ??CAN_IRQCmd_6: (+1)
   \   000000D0   0x6920             LDR      R0,[R4, #+16]
   \   000000D2   0x2101             MOVS     R1,#+1
   \   000000D4   0x40A9             LSLS     R1,R1,R5
   \   000000D6   0x4388             BICS     R0,R0,R1
   \   000000D8   0x6120             STR      R0,[R4, #+16]
   1751          	}
   1752          }
   \                     ??CAN_IRQCmd_5: (+1)
   \   000000DA   0xBD70             POP      {R4-R6,PC}       ;; return
   1753          /*********************************************************************//**
   1754           * @brief		Install interrupt call-back function
   1755           * @param[in]	arg: CAN interrupt type, should be:
   1756           * 	  			- CANINT_RIE: CAN Receiver Interrupt Enable
   1757           * 				- CANINT_TIE1: CAN Transmit Interrupt Enable
   1758           * 				- CANINT_EIE: CAN Error Warning Interrupt Enable
   1759           * 				- CANINT_DOIE: CAN Data Overrun Interrupt Enable
   1760           * 				- CANINT_WUIE: CAN Wake-Up Interrupt Enable
   1761           * 				- CANINT_EPIE: CAN Error Passive Interrupt Enable
   1762           * 				- CANINT_ALIE: CAN Arbitration Lost Interrupt Enable
   1763           * 				- CANINT_BEIE: CAN Bus Error Interrupt Enable
   1764           * 				- CANINT_IDIE: CAN ID Ready Interrupt Enable
   1765           * 				- CANINT_TIE2: CAN Transmit Interrupt Enable for Buffer2
   1766           * 				- CANINT_TIE3: CAN Transmit Interrupt Enable for Buffer3
   1767           * 				- CANINT_FCE: FullCAN Interrupt Enable
   1768           * @param[in]	pnCANCbs: pointer point to call-back function
   1769           * @return		None
   1770           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1771          void CAN_SetupCBS(CAN_INT_EN_Type arg,fnCANCbs_Type* pnCANCbs)
   1772          {
   \                     CAN_SetupCBS: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1773          	CHECK_PARAM(PARAM_INT_EN_TYPE(arg));
   \   00000006   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000008   0x2C00             CMP      R4,#+0
   \   0000000A   0xD025             BEQ.N    ??CAN_SetupCBS_0
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x2C01             CMP      R4,#+1
   \   00000010   0xD022             BEQ.N    ??CAN_SetupCBS_0
   \   00000012   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000014   0x2C02             CMP      R4,#+2
   \   00000016   0xD01F             BEQ.N    ??CAN_SetupCBS_0
   \   00000018   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001A   0x2C03             CMP      R4,#+3
   \   0000001C   0xD01C             BEQ.N    ??CAN_SetupCBS_0
   \   0000001E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000020   0x2C04             CMP      R4,#+4
   \   00000022   0xD019             BEQ.N    ??CAN_SetupCBS_0
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2C05             CMP      R4,#+5
   \   00000028   0xD016             BEQ.N    ??CAN_SetupCBS_0
   \   0000002A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002C   0x2C06             CMP      R4,#+6
   \   0000002E   0xD013             BEQ.N    ??CAN_SetupCBS_0
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x2C07             CMP      R4,#+7
   \   00000034   0xD010             BEQ.N    ??CAN_SetupCBS_0
   \   00000036   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000038   0x2C08             CMP      R4,#+8
   \   0000003A   0xD00D             BEQ.N    ??CAN_SetupCBS_0
   \   0000003C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000003E   0x2C09             CMP      R4,#+9
   \   00000040   0xD00A             BEQ.N    ??CAN_SetupCBS_0
   \   00000042   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000044   0x2C0A             CMP      R4,#+10
   \   00000046   0xD007             BEQ.N    ??CAN_SetupCBS_0
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x2C0B             CMP      R4,#+11
   \   0000004C   0xD004             BEQ.N    ??CAN_SetupCBS_0
   \   0000004E   0xF240 0x61ED      MOVW     R1,#+1773
   \   00000052   0x....             LDR.N    R0,??DataTable15
   \   00000054   0x.... 0x....      BL       check_failed
   1774          	_apfnCANCbs[arg] = pnCANCbs;
   \                     ??CAN_SetupCBS_0: (+1)
   \   00000058   0x....             LDR.N    R0,??DataTable17_12
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0xF840 0x5024      STR      R5,[R0, R4, LSL #+2]
   1775          }
   \   00000060   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1776          /********************************************************************//**
   1777           * @brief		Setting Acceptance Filter mode
   1778           * @param[in]	CANAFx point to LPC_CANAF_TypeDef object, should be: CANAF
   1779           * @param[in]	AFMode: type of AF mode that you want to set, should be:
   1780           * 				- CAN_Normal: Normal mode
   1781           * 				- CAN_AccOff: Acceptance Filter Off Mode
   1782           * 				- CAN_AccBP: Acceptance Fileter Bypass Mode
   1783           * 				- CAN_eFCAN: FullCAN Mode Enhancement
   1784           * @return 		none
   1785           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1786          void CAN_SetAFMode (LPC_CANAF_TypeDef* CANAFx, CAN_AFMODE_Type AFMode)
   1787          {
   \                     CAN_SetAFMode: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   1788          	CHECK_PARAM(PARAM_CANAFx(CANAFx));
   \   00000006   0x....             LDR.N    R0,??DataTable17  ;; 0x4003c000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD004             BEQ.N    ??CAN_SetAFMode_0
   \   0000000C   0xF240 0x61FC      MOVW     R1,#+1788
   \   00000010   0x....             LDR.N    R0,??DataTable15
   \   00000012   0x.... 0x....      BL       check_failed
   1789          	CHECK_PARAM(PARAM_AFMODE_TYPE(AFMode));
   \                     ??CAN_SetAFMode_0: (+1)
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0x2D00             CMP      R5,#+0
   \   0000001A   0xD00D             BEQ.N    ??CAN_SetAFMode_1
   \   0000001C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001E   0x2D01             CMP      R5,#+1
   \   00000020   0xD00A             BEQ.N    ??CAN_SetAFMode_1
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0x2D02             CMP      R5,#+2
   \   00000026   0xD007             BEQ.N    ??CAN_SetAFMode_1
   \   00000028   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002A   0x2D03             CMP      R5,#+3
   \   0000002C   0xD004             BEQ.N    ??CAN_SetAFMode_1
   \   0000002E   0xF240 0x61FD      MOVW     R1,#+1789
   \   00000032   0x....             LDR.N    R0,??DataTable15
   \   00000034   0x.... 0x....      BL       check_failed
   1790          
   1791          	switch(AFMode)
   \                     ??CAN_SetAFMode_1: (+1)
   \   00000038   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003A   0x2D00             CMP      R5,#+0
   \   0000003C   0xD005             BEQ.N    ??CAN_SetAFMode_2
   \   0000003E   0x2D02             CMP      R5,#+2
   \   00000040   0xD009             BEQ.N    ??CAN_SetAFMode_3
   \   00000042   0xD305             BCC.N    ??CAN_SetAFMode_4
   \   00000044   0x2D03             CMP      R5,#+3
   \   00000046   0xD009             BEQ.N    ??CAN_SetAFMode_5
   \   00000048   0xE00A             B.N      ??CAN_SetAFMode_6
   1792          	{
   1793          	case CAN_Normal:
   1794          		CANAFx->AFMR = 0x00;
   \                     ??CAN_SetAFMode_2: (+1)
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x6020             STR      R0,[R4, #+0]
   1795          		break;
   \   0000004E   0xE007             B.N      ??CAN_SetAFMode_6
   1796          	case CAN_AccOff:
   1797          		CANAFx->AFMR = 0x01;
   \                     ??CAN_SetAFMode_4: (+1)
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x6020             STR      R0,[R4, #+0]
   1798          		break;
   \   00000054   0xE004             B.N      ??CAN_SetAFMode_6
   1799          	case CAN_AccBP:
   1800          		CANAFx->AFMR = 0x02;
   \                     ??CAN_SetAFMode_3: (+1)
   \   00000056   0x2002             MOVS     R0,#+2
   \   00000058   0x6020             STR      R0,[R4, #+0]
   1801          		break;
   \   0000005A   0xE001             B.N      ??CAN_SetAFMode_6
   1802          	case CAN_eFCAN:
   1803          		CANAFx->AFMR = 0x04;
   \                     ??CAN_SetAFMode_5: (+1)
   \   0000005C   0x2004             MOVS     R0,#+4
   \   0000005E   0x6020             STR      R0,[R4, #+0]
   1804          		break;
   1805          	}
   1806          }
   \                     ??CAN_SetAFMode_6: (+1)
   \   00000060   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1807          
   1808          /********************************************************************//**
   1809           * @brief		Enable/Disable CAN Mode
   1810           * @param[in]	CANx pointer to LPC_CAN_TypeDef, should be:
   1811           * 				- CAN1: CAN 1
   1812           * 				- CAN2: CAN 2
   1813           * @param[in]	mode: type of CAN mode that you want to enable/disable, should be:
   1814           * 				- CAN_OPERATING_MODE: Normal Operating Mode
   1815           * 				- CAN_RESET_MODE: Reset Mode
   1816           * 				- CAN_LISTENONLY_MODE: Listen Only Mode
   1817           * 				- CAN_SELFTEST_MODE: Self Test Mode
   1818           * 				- CAN_TXPRIORITY_MODE: Transmit Priority Mode
   1819           * 				- CAN_SLEEP_MODE: Sleep Mode
   1820           * 				- CAN_RXPOLARITY_MODE: Receive Polarity Mode
   1821           * 				- CAN_TEST_MODE: Test Mode
   1822           * @param[in]	NewState: New State of this function, should be:
   1823           * 				- ENABLE
   1824           * 				- DISABLE
   1825           * @return 		none
   1826           *********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1827          void CAN_ModeConfig(LPC_CAN_TypeDef* CANx, CAN_MODE_Type mode, FunctionalState NewState)
   1828          {
   \                     CAN_ModeConfig: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   1829          	CHECK_PARAM(PARAM_CANx(CANx));
   \   00000008   0x....             LDR.N    R0,??DataTable17_6  ;; 0x40044000
   \   0000000A   0x4284             CMP      R4,R0
   \   0000000C   0xD007             BEQ.N    ??CAN_ModeConfig_0
   \   0000000E   0x....             LDR.N    R0,??DataTable17_7  ;; 0x40048000
   \   00000010   0x4284             CMP      R4,R0
   \   00000012   0xD004             BEQ.N    ??CAN_ModeConfig_0
   \   00000014   0xF240 0x7125      MOVW     R1,#+1829
   \   00000018   0x....             LDR.N    R0,??DataTable17_13
   \   0000001A   0x.... 0x....      BL       check_failed
   1830          	CHECK_PARAM(PARAM_MODE_TYPE(mode));
   \                     ??CAN_ModeConfig_0: (+1)
   \   0000001E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000020   0x2D00             CMP      R5,#+0
   \   00000022   0xD019             BEQ.N    ??CAN_ModeConfig_1
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x2D01             CMP      R5,#+1
   \   00000028   0xD016             BEQ.N    ??CAN_ModeConfig_1
   \   0000002A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000002C   0x2D02             CMP      R5,#+2
   \   0000002E   0xD013             BEQ.N    ??CAN_ModeConfig_1
   \   00000030   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000032   0x2D03             CMP      R5,#+3
   \   00000034   0xD010             BEQ.N    ??CAN_ModeConfig_1
   \   00000036   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000038   0x2D04             CMP      R5,#+4
   \   0000003A   0xD00D             BEQ.N    ??CAN_ModeConfig_1
   \   0000003C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003E   0x2D05             CMP      R5,#+5
   \   00000040   0xD00A             BEQ.N    ??CAN_ModeConfig_1
   \   00000042   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000044   0x2D06             CMP      R5,#+6
   \   00000046   0xD007             BEQ.N    ??CAN_ModeConfig_1
   \   00000048   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000004A   0x2D07             CMP      R5,#+7
   \   0000004C   0xD004             BEQ.N    ??CAN_ModeConfig_1
   \   0000004E   0xF240 0x7126      MOVW     R1,#+1830
   \   00000052   0x....             LDR.N    R0,??DataTable17_13
   \   00000054   0x.... 0x....      BL       check_failed
   1831          	CHECK_PARAM(PARAM_FUNCTIONALSTATE(NewState));
   \                     ??CAN_ModeConfig_1: (+1)
   \   00000058   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005A   0x2E00             CMP      R6,#+0
   \   0000005C   0xD007             BEQ.N    ??CAN_ModeConfig_2
   \   0000005E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000060   0x2E01             CMP      R6,#+1
   \   00000062   0xD004             BEQ.N    ??CAN_ModeConfig_2
   \   00000064   0xF240 0x7127      MOVW     R1,#+1831
   \   00000068   0x....             LDR.N    R0,??DataTable17_13
   \   0000006A   0x.... 0x....      BL       check_failed
   1832          
   1833          	switch(mode)
   \                     ??CAN_ModeConfig_2: (+1)
   \   0000006E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000070   0x2D00             CMP      R5,#+0
   \   00000072   0xD00B             BEQ.N    ??CAN_ModeConfig_3
   \   00000074   0x2D02             CMP      R5,#+2
   \   00000076   0xD019             BEQ.N    ??CAN_ModeConfig_4
   \   00000078   0xD30B             BCC.N    ??CAN_ModeConfig_5
   \   0000007A   0x2D04             CMP      R5,#+4
   \   0000007C   0xD038             BEQ.N    ??CAN_ModeConfig_6
   \   0000007E   0xD326             BCC.N    ??CAN_ModeConfig_7
   \   00000080   0x2D06             CMP      R5,#+6
   \   00000082   0xD04F             BEQ.N    ??CAN_ModeConfig_8
   \   00000084   0xD341             BCC.N    ??CAN_ModeConfig_9
   \   00000086   0x2D07             CMP      R5,#+7
   \   00000088   0xD059             BEQ.N    ??CAN_ModeConfig_10
   \   0000008A   0xE064             B.N      ??CAN_ModeConfig_11
   1834          	{
   1835          	case CAN_OPERATING_MODE:
   1836          		CANx->MOD = 0x00;
   \                     ??CAN_ModeConfig_3: (+1)
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x6020             STR      R0,[R4, #+0]
   1837          		break;
   \   00000090   0xE061             B.N      ??CAN_ModeConfig_11
   1838          	case CAN_RESET_MODE:
   1839          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_5: (+1)
   \   00000092   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000094   0x2E01             CMP      R6,#+1
   \   00000096   0xD104             BNE.N    ??CAN_ModeConfig_12
   1840          			CANx->MOD |=CAN_MOD_RM;
   \   00000098   0x6820             LDR      R0,[R4, #+0]
   \   0000009A   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000009E   0x6020             STR      R0,[R4, #+0]
   \   000000A0   0xE003             B.N      ??CAN_ModeConfig_13
   1841          		else
   1842          			CANx->MOD &= ~CAN_MOD_RM;
   \                     ??CAN_ModeConfig_12: (+1)
   \   000000A2   0x6820             LDR      R0,[R4, #+0]
   \   000000A4   0x0840             LSRS     R0,R0,#+1
   \   000000A6   0x0040             LSLS     R0,R0,#+1
   \   000000A8   0x6020             STR      R0,[R4, #+0]
   1843          		break;
   \                     ??CAN_ModeConfig_13: (+1)
   \   000000AA   0xE054             B.N      ??CAN_ModeConfig_11
   1844          	case CAN_LISTENONLY_MODE:
   1845          		CANx->MOD |=CAN_MOD_RM;
   \                     ??CAN_ModeConfig_4: (+1)
   \   000000AC   0x6820             LDR      R0,[R4, #+0]
   \   000000AE   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000B2   0x6020             STR      R0,[R4, #+0]
   1846          		if(NewState == ENABLE)
   \   000000B4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000B6   0x2E01             CMP      R6,#+1
   \   000000B8   0xD104             BNE.N    ??CAN_ModeConfig_14
   1847          			CANx->MOD |=CAN_MOD_LOM;
   \   000000BA   0x6820             LDR      R0,[R4, #+0]
   \   000000BC   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000C0   0x6020             STR      R0,[R4, #+0]
   \   000000C2   0xE003             B.N      ??CAN_ModeConfig_15
   1848          		else
   1849          			CANx->MOD &=~CAN_MOD_LOM;
   \                     ??CAN_ModeConfig_14: (+1)
   \   000000C4   0x6820             LDR      R0,[R4, #+0]
   \   000000C6   0xF030 0x0002      BICS     R0,R0,#0x2
   \   000000CA   0x6020             STR      R0,[R4, #+0]
   1850          		break;
   \                     ??CAN_ModeConfig_15: (+1)
   \   000000CC   0xE043             B.N      ??CAN_ModeConfig_11
   1851          	case CAN_SELFTEST_MODE:
   1852          		CANx->MOD |=CAN_MOD_RM;
   \                     ??CAN_ModeConfig_7: (+1)
   \   000000CE   0x6820             LDR      R0,[R4, #+0]
   \   000000D0   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000D4   0x6020             STR      R0,[R4, #+0]
   1853          		if(NewState == ENABLE)
   \   000000D6   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000D8   0x2E01             CMP      R6,#+1
   \   000000DA   0xD104             BNE.N    ??CAN_ModeConfig_16
   1854          			CANx->MOD |=CAN_MOD_STM;
   \   000000DC   0x6820             LDR      R0,[R4, #+0]
   \   000000DE   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000E2   0x6020             STR      R0,[R4, #+0]
   \   000000E4   0xE003             B.N      ??CAN_ModeConfig_17
   1855          		else
   1856          			CANx->MOD &=~CAN_MOD_STM;
   \                     ??CAN_ModeConfig_16: (+1)
   \   000000E6   0x6820             LDR      R0,[R4, #+0]
   \   000000E8   0xF030 0x0004      BICS     R0,R0,#0x4
   \   000000EC   0x6020             STR      R0,[R4, #+0]
   1857          		break;
   \                     ??CAN_ModeConfig_17: (+1)
   \   000000EE   0xE032             B.N      ??CAN_ModeConfig_11
   1858          	case CAN_TXPRIORITY_MODE:
   1859          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_6: (+1)
   \   000000F0   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000F2   0x2E01             CMP      R6,#+1
   \   000000F4   0xD104             BNE.N    ??CAN_ModeConfig_18
   1860          			CANx->MOD |=CAN_MOD_TPM;
   \   000000F6   0x6820             LDR      R0,[R4, #+0]
   \   000000F8   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000FC   0x6020             STR      R0,[R4, #+0]
   \   000000FE   0xE003             B.N      ??CAN_ModeConfig_19
   1861          		else
   1862          			CANx->MOD &=~CAN_MOD_TPM;
   \                     ??CAN_ModeConfig_18: (+1)
   \   00000100   0x6820             LDR      R0,[R4, #+0]
   \   00000102   0xF030 0x0008      BICS     R0,R0,#0x8
   \   00000106   0x6020             STR      R0,[R4, #+0]
   1863          		break;
   \                     ??CAN_ModeConfig_19: (+1)
   \   00000108   0xE025             B.N      ??CAN_ModeConfig_11
   1864          	case CAN_SLEEP_MODE:
   1865          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_9: (+1)
   \   0000010A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000010C   0x2E01             CMP      R6,#+1
   \   0000010E   0xD104             BNE.N    ??CAN_ModeConfig_20
   1866          			CANx->MOD |=CAN_MOD_SM;
   \   00000110   0x6820             LDR      R0,[R4, #+0]
   \   00000112   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000116   0x6020             STR      R0,[R4, #+0]
   \   00000118   0xE003             B.N      ??CAN_ModeConfig_21
   1867          		else
   1868          			CANx->MOD &=~CAN_MOD_SM;
   \                     ??CAN_ModeConfig_20: (+1)
   \   0000011A   0x6820             LDR      R0,[R4, #+0]
   \   0000011C   0xF030 0x0010      BICS     R0,R0,#0x10
   \   00000120   0x6020             STR      R0,[R4, #+0]
   1869          		break;
   \                     ??CAN_ModeConfig_21: (+1)
   \   00000122   0xE018             B.N      ??CAN_ModeConfig_11
   1870          	case CAN_RXPOLARITY_MODE:
   1871          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_8: (+1)
   \   00000124   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000126   0x2E01             CMP      R6,#+1
   \   00000128   0xD104             BNE.N    ??CAN_ModeConfig_22
   1872          			CANx->MOD |=CAN_MOD_RPM;
   \   0000012A   0x6820             LDR      R0,[R4, #+0]
   \   0000012C   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000130   0x6020             STR      R0,[R4, #+0]
   \   00000132   0xE003             B.N      ??CAN_ModeConfig_23
   1873          		else
   1874          			CANx->MOD &=~CAN_MOD_RPM;
   \                     ??CAN_ModeConfig_22: (+1)
   \   00000134   0x6820             LDR      R0,[R4, #+0]
   \   00000136   0xF030 0x0020      BICS     R0,R0,#0x20
   \   0000013A   0x6020             STR      R0,[R4, #+0]
   1875          		break;
   \                     ??CAN_ModeConfig_23: (+1)
   \   0000013C   0xE00B             B.N      ??CAN_ModeConfig_11
   1876          	case CAN_TEST_MODE:
   1877          		if(NewState == ENABLE)
   \                     ??CAN_ModeConfig_10: (+1)
   \   0000013E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000140   0x2E01             CMP      R6,#+1
   \   00000142   0xD104             BNE.N    ??CAN_ModeConfig_24
   1878          			CANx->MOD |=CAN_MOD_TM;
   \   00000144   0x6820             LDR      R0,[R4, #+0]
   \   00000146   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   0000014A   0x6020             STR      R0,[R4, #+0]
   \   0000014C   0xE003             B.N      ??CAN_ModeConfig_25
   1879          		else
   1880          			CANx->MOD &=~CAN_MOD_TM;
   \                     ??CAN_ModeConfig_24: (+1)
   \   0000014E   0x6820             LDR      R0,[R4, #+0]
   \   00000150   0xF030 0x0080      BICS     R0,R0,#0x80
   \   00000154   0x6020             STR      R0,[R4, #+0]
   1881          		break;
   1882          	}
   1883          }
   \                     ??CAN_ModeConfig_25: (+1)
   \                     ??CAN_ModeConfig_11: (+1)
   \   00000156   0xBD70             POP      {R4-R6,PC}       ;; return
   1884          /*********************************************************************//**
   1885           * @brief		Standard CAN interrupt handler, this function will check
   1886           * 				all interrupt status of CAN channels, then execute the call
   1887           * 				back function if they're already installed
   1888           * @param[in]	CANx point to CAN peripheral selected, should be: CAN1 or CAN2
   1889           * @return		None
   1890           **********************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1891          void CAN_IntHandler(LPC_CAN_TypeDef* CANx)
   1892          {
   \                     CAN_IntHandler: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   1893          	uint8_t t;
   1894          	//scan interrupt pending
   1895          	if(LPC_CANAF->FCANIE)
   \   00000004   0x....             LDR.N    R0,??DataTable17_11  ;; 0x4003c020
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD002             BEQ.N    ??CAN_IntHandler_0
   1896          	{
   1897          		_apfnCANCbs[11]();
   \   0000000C   0x....             LDR.N    R0,??DataTable17_12
   \   0000000E   0x6AC0             LDR      R0,[R0, #+44]
   \   00000010   0x4780             BLX      R0
   1898          	}
   1899          	//scan interrupt channels
   1900          	for(t=0;t<11;t++)
   \                     ??CAN_IntHandler_0: (+1)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x0005             MOVS     R5,R0
   \                     ??CAN_IntHandler_1: (+1)
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0x2D0B             CMP      R5,#+11
   \   0000001A   0xDA0A             BGE.N    ??CAN_IntHandler_2
   1901          	{
   1902          		if(((CANx->ICR)>>t)&0x01)
   \   0000001C   0x68E0             LDR      R0,[R4, #+12]
   \   0000001E   0x40E8             LSRS     R0,R0,R5
   \   00000020   0x07C0             LSLS     R0,R0,#+31
   \   00000022   0xD504             BPL.N    ??CAN_IntHandler_3
   1903          		{
   1904          			_apfnCANCbs[t]();
   \   00000024   0x....             LDR.N    R0,??DataTable17_12
   \   00000026   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000028   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   0000002C   0x4780             BLX      R0
   1905          		}
   1906          	}
   \                     ??CAN_IntHandler_3: (+1)
   \   0000002E   0x1C6D             ADDS     R5,R5,#+1
   \   00000030   0xE7F1             B.N      ??CAN_IntHandler_1
   1907          }
   \                     ??CAN_IntHandler_2: (+1)
   \   00000032   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x40044000         DC32     0x40044000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x40048000         DC32     0x40048000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x0007A121         DC32     0x7a121

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     CAN_BIT_TIME

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x4003C004         DC32     0x4003c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x4003C008         DC32     0x4003c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x4003C00C         DC32     0x4003c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x4003C010         DC32     0x4003c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x4003C014         DC32     0x4003c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x4003C000         DC32     0x4003c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     FULLCAN_ENABLE

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     CANAF_FullCAN_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     CANAF_std_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     CANAF_gstd_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     CANAF_ext_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     CANAF_gext_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x40044000         DC32     0x40044000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x40048000         DC32     0x40048000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x4003C008         DC32     0x4003c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x4003C00C         DC32     0x4003c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x4003C010         DC32     0x4003c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x4003C014         DC32     0x4003c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     CANAF_FullCAN_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     CANAF_std_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x4003C000         DC32     0x4003c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x4003C004         DC32     0x4003c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     CANAF_gstd_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x........         DC32     CANAF_ext_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x........         DC32     CANAF_gext_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \   00000000   0x........         DC32     CANAF_FullCAN_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_2:
   \   00000000   0x........         DC32     CANAF_std_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   0x4003C000         DC32     0x4003c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \   00000000   0x4003C008         DC32     0x4003c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \   00000000   0x4003C00C         DC32     0x4003c00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \   00000000   0x4003C010         DC32     0x4003c010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_5:
   \   00000000   0x4003C014         DC32     0x4003c014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_6:
   \   00000000   0x40044000         DC32     0x40044000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_7:
   \   00000000   0x40048000         DC32     0x40048000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_8:
   \   00000000   0x4003C024         DC32     0x4003c024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_9:
   \   00000000   0x4003C028         DC32     0x4003c028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_10:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_11:
   \   00000000   0x4003C020         DC32     0x4003c020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_12:
   \   00000000   0x........         DC32     _apfnCANCbs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_13:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x45 0x3A          DC8 45H, 3AH, 5CH, 0D0H, 0C2H, 0CFH, 0EEH, 0C4H
   \              0x5C 0xD0    
   \              0xC2 0xCF    
   \              0xEE 0xC4    
   \   00000008   0xBF 0x5C          DC8 0BFH, 5CH, 0D2H, 0C6H, 0BDH, 0BBH, 0D7H, 0CAH
   \              0xD2 0xC6    
   \              0xBD 0xBB    
   \              0xD7 0xCA    
   \   00000010   0xC1 0xCF          DC8 0C1H, 0CFH, 4CH, 48H, 54H, 5CH, 0D7H, 0D4H
   \              0x4C 0x48    
   \              0x54 0x5C    
   \              0xD7 0xD4    
   \   00000018   0xD6 0xFA          DC8 0D6H, 0FAH, 0BDH, 0C9H, 0B7H, 0D1H, 0BBH, 0FAH
   \              0xBD 0xC9    
   \              0xB7 0xD1    
   \              0xBB 0xFA    
   \   00000020   0x5C 0xC8          DC8 5CH, 0C8H, 0EDH, 0BCH, 0FEH, 5CH, 4DH, 69H
   \              0xED 0xBC    
   \              0xFE 0x5C    
   \              0x4D 0x69    
   \   00000028   0x63 0x72          DC8 63H, 72H, 69H, 75H, 6DH, 5FH, 4CH, 50H
   \              0x69 0x75    
   \              0x6D 0x5F    
   \              0x4C 0x50    
   \   00000030   0x43 0x31          DC8 43H, 31H, 37H, 36H, 38H, 2DH, 53H, 4BH
   \              0x37 0x36    
   \              0x38 0x2D    
   \              0x53 0x4B    
   \   00000038   0x5F 0x75          DC8 5FH, 75H, 43H, 4FH, 53H, 2DH, 49H, 49H
   \              0x43 0x4F    
   \              0x53 0x2D    
   \              0x49 0x49    
   \   00000040   0x49 0x2D          DC8 49H, 2DH, 52H, 65H, 6CH, 65H, 61H, 73H
   \              0x52 0x65    
   \              0x6C 0x65    
   \              0x61 0x73    
   \   00000048   0x65 0x5C          DC8 65H, 5CH, 53H, 6FH, 66H, 74H, 77H, 61H
   \              0x53 0x6F    
   \              0x66 0x74    
   \              0x77 0x61    
   \   00000050   0x72 0x65          DC8 72H, 65H, 5CH, 45H, 76H, 61H, 6CH, 42H
   \              0x5C 0x45    
   \              0x76 0x61    
   \              0x6C 0x42    
   \   00000058   0x6F 0x61          DC8 6FH, 61H, 72H, 64H, 73H, 5CH, 4EH, 58H
   \              0x72 0x64    
   \              0x73 0x5C    
   \              0x4E 0x58    
   \   00000060   0x50 0x5C          DC8 50H, 5CH, 4CH, 50H, 43H, 31H, 37H, 36H
   \              0x4C 0x50    
   \              0x43 0x31    
   \              0x37 0x36    
   \   00000068   0x38 0x2D          DC8 38H, 2DH, 53H, 4BH, 5CH, 4CH, 50H, 43H
   \              0x53 0x4B    
   \              0x5C 0x4C    
   \              0x50 0x43    
   \   00000070   0x31 0x37          DC8 31H, 37H, 58H, 58H, 43H, 4DH, 53H, 49H
   \              0x58 0x58    
   \              0x43 0x4D    
   \              0x53 0x49    
   \   00000078   0x53 0x5C          DC8 53H, 5CH, 44H, 72H, 69H, 76H, 65H, 72H
   \              0x44 0x72    
   \              0x69 0x76    
   \              0x65 0x72    
   \   00000080   0x73 0x5C          DC8 73H, 5CH, 73H, 6FH, 75H, 72H, 63H, 65H
   \              0x73 0x6F    
   \              0x75 0x72    
   \              0x63 0x65    
   \   00000088   0x5C 0x6C          DC8 5CH, 6CH, 70H, 63H, 31H, 37H, 78H, 78H
   \              0x70 0x63    
   \              0x31 0x37    
   \              0x78 0x78    
   \   00000090   0x5F 0x63          DC8 5FH, 63H, 61H, 6EH, 2EH, 63H, 0
   \              0x61 0x6E    
   \              0x2E 0x63    
   \              0x00         
   \   00000097   0x00               DC8 0
   1908          
   1909          /**
   1910           * @}
   1911           */
   1912          
   1913          #endif /* _CAN */
   1914          
   1915          /**
   1916           * @}
   1917           */
   1918          
   1919          /* --------------------------------- End Of File ------------------------------ */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CAN_DeInit
         8   -> CLKPWR_ConfigPPWR
         8   -> check_failed
      16   CAN_GetCRStatus
        16   -> check_failed
      16   CAN_GetCTRLStatus
        16   -> check_failed
      16   CAN_IRQCmd
        16   -> check_failed
      24   CAN_Init
        24   -> CAN_SetBaudRate
        24   -> CLKPWR_ConfigPPWR
        24   -> CLKPWR_SetPCLKDiv
        24   -> check_failed
      16   CAN_IntHandler
        16   -- Indirect call
      48   CAN_LoadExplicitEntry
        48   -> check_failed
      56   CAN_LoadFullCANEntry
        56   -> check_failed
      64   CAN_LoadGroupEntry
        64   -> check_failed
      16   CAN_ModeConfig
        16   -> check_failed
      16   CAN_ReceiveMsg
        16   -> check_failed
      32   CAN_RemoveEntry
        32   -> check_failed
      16   CAN_SendMsg
        16   -> check_failed
      16   CAN_SetAFMode
        16   -> check_failed
      24   CAN_SetBaudRate
        24   -> CLKPWR_GetPCLK
        24   -> check_failed
      64   CAN_SetupAFLUT
        64   -> check_failed
      16   CAN_SetupCBS
        16   -> check_failed
      40   FCAN_ReadObj
        40   -> check_failed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable11
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable15_2
       4  ??DataTable17
       4  ??DataTable17_1
       4  ??DataTable17_10
       4  ??DataTable17_11
       4  ??DataTable17_12
       4  ??DataTable17_13
       4  ??DataTable17_2
       4  ??DataTable17_3
       4  ??DataTable17_4
       4  ??DataTable17_5
       4  ??DataTable17_6
       4  ??DataTable17_7
       4  ??DataTable17_8
       4  ??DataTable17_9
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       4  ??DataTable9
     152  ?_0
       4  CAN1x
       4  CAN2x
       4  CANAFRAMx
       2  CANAF_FullCAN_cnt
       2  CANAF_ext_cnt
       2  CANAF_gext_cnt
       2  CANAF_gstd_cnt
       2  CANAF_std_cnt
       4  CANAFx
      68  CAN_BIT_TIME
      62  CAN_DeInit
      76  CAN_GetCRStatus
      96  CAN_GetCTRLStatus
     220  CAN_IRQCmd
     200  CAN_Init
      52  CAN_IntHandler
    1060  CAN_LoadExplicitEntry
    1138  CAN_LoadFullCANEntry
     958  CAN_LoadGroupEntry
     344  CAN_ModeConfig
     128  CAN_ReceiveMsg
    1680  CAN_RemoveEntry
     298  CAN_SendMsg
      98  CAN_SetAFMode
     176  CAN_SetBaudRate
    2146  CAN_SetupAFLUT
      98  CAN_SetupCBS
     260  FCAN_ReadObj
       1  FULLCAN_ENABLE
      48  _apfnCANCbs

 
    59 bytes in section .bss
    16 bytes in section .data
   220 bytes in section .rodata
 9 294 bytes in section .text
 
 9 294 bytes of CODE  memory
   220 bytes of CONST memory
    75 bytes of DATA  memory

Errors: none
Warnings: 5
