###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       06/Apr/2017  11:01:06
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\source\lpc17xx_dac.c
#    Command line =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\source\lpc17xx_dac.c
#        -lCN
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List
#        --diag_suppress Pe174 -o
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 7.5\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\BSP\OS\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\LPC1768\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CSP\MCU\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\Generic\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Ports\ARM-Cortex-M3\CSP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uCOS-III\Source\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-LIB\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-CPU\ARM-Cortex-M3\IAR\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Core\CM3\CoreSupport\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Core\CM3\DeviceSupport\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\include\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Driver\NXP\LPC17xx\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Driver\NXP\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Line\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\OS\uCOS-III\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\OS\
#        -I
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\..\..\..\..\..\uC-Serial\Source\
#        -On --use_c++_inline -I "C:\Program Files\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Chinese (Simplified)_People's Republic of China.936
#    List file    =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\List\lpc17xx_dac.lst
#    Object file  =  
#        E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\uCOS-III\IAR\FLASH\Obj\lpc17xx_dac.o
#
###############################################################################

E:\新项目\移交资料LHT\自助缴费机\软件\Micrium_LPC1768-SK_uCOS-III-Release\Software\EvalBoards\NXP\LPC1768-SK\LPC17XXCMSIS\Drivers\source\lpc17xx_dac.c
      1          /**
      2           * @file	: lpc17xx_dac.c
      3           * @brief	: Contains all functions support for DAC firmware library on LPC17xx
      4           * @version	: 1.0
      5           * @date	: 3. April. 2009
      6           * @author	: HieuNguyen
      7           **************************************************************************
      8           * Software that is described herein is for illustrative purposes only
      9           * which provides customers with programming information regarding the
     10           * products. This software is supplied "AS IS" without any warranties.
     11           * NXP Semiconductors assumes no responsibility or liability for the
     12           * use of the software, conveys no license or title under any patent,
     13           * copyright, or mask work right to the product. NXP Semiconductors
     14           * reserves the right to make changes in the software without
     15           * notification. NXP Semiconductors also make no representation or
     16           * warranty that such application will be suitable for the specified
     17           * use without further testing or modification.
     18           **********************************************************************/
     19          
     20          /* Peripheral group ----------------------------------------------------------- */
     21          /** @addtogroup DAC
     22           * @{
     23           */
     24          
     25          /* Includes ------------------------------------------------------------------- */
     26          #include "lpc17xx_dac.h"
     27          #include "lpc17xx_clkpwr.h"
     28          
     29          /* If this source file built with example, the LPC17xx FW library configuration
     30           * file in each example directory ("lpc17xx_libcfg.h") must be included,
     31           * otherwise the default FW library configuration file must be included instead
     32           */
     33          #ifdef __BUILD_WITH_EXAMPLE__
     34          #include "lpc17xx_libcfg.h"
     35          #else
     36          #include "lpc17xx_libcfg_default.h"
     37          #endif /* __BUILD_WITH_EXAMPLE__ */
     38          
     39          
     40          #ifdef _DAC
     41          
     42          /* Public Functions ----------------------------------------------------------- */
     43          /** @addtogroup DAC_Public_Functions
     44           * @{
     45           */
     46          
     47          /*********************************************************************//**
     48           * @brief 		Initial ADC configuration
     49           * 					- Maximum	current is 700 uA
     50           * 					- Value to AOUT is 0
     51           * @param[in] 	DACx pointer to LPC_DAC_TypeDef
     52           * @return 		None
     53           ***********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     54          void 	DAC_Init(LPC_DAC_TypeDef *DACx)
     55          {
   \                     DAC_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     56          	CHECK_PARAM(PARAM_DACx(DACx));
   \   00000004   0x....             LDR.N    R0,??DataTable4  ;; 0x4008c000
   \   00000006   0x4284             CMP      R4,R0
   \   00000008   0xD003             BEQ.N    ??DAC_Init_0
   \   0000000A   0x2138             MOVS     R1,#+56
   \   0000000C   0x....             LDR.N    R0,??DataTable4_1
   \   0000000E   0x.... 0x....      BL       check_failed
     57          	/* Set default clock divider for DAC */
     58          	// CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_DAC, CLKPWR_PCLKSEL_CCLK_DIV_4);
     59          	//Set maximum current output
     60          	DAC_SetBias(LPC_DAC,DAC_MAX_CURRENT_700uA);
   \                     ??DAC_Init_0: (+1)
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x....             LDR.N    R0,??DataTable4  ;; 0x4008c000
   \   00000016   0x.... 0x....      BL       DAC_SetBias
     61          
     62          
     63          }
   \   0000001A   0xBD10             POP      {R4,PC}          ;; return
     64          
     65          /*********************************************************************//**
     66           * @brief 		Update value to DAC
     67           * @param[in] 	DACx pointer to LPC_DAC_TypeDef
     68           * @param[in] 	dac_value : value 10 bit to be converted to output
     69           * @return 		None
     70           ***********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     71          void    DAC_UpdateValue (LPC_DAC_TypeDef *DACx,uint32_t dac_value)
     72          {
   \                     DAC_UpdateValue: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     73          	uint32_t tmp;
     74          	CHECK_PARAM(PARAM_DACx(DACx));
   \   00000006   0x....             LDR.N    R0,??DataTable4  ;; 0x4008c000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD003             BEQ.N    ??DAC_UpdateValue_0
   \   0000000C   0x214A             MOVS     R1,#+74
   \   0000000E   0x....             LDR.N    R0,??DataTable4_1
   \   00000010   0x.... 0x....      BL       check_failed
     75          	tmp = DACx->DACR & DAC_BIAS_EN;
   \                     ??DAC_UpdateValue_0: (+1)
   \   00000014   0x6820             LDR      R0,[R4, #+0]
   \   00000016   0xF410 0x3080      ANDS     R0,R0,#0x10000
   \   0000001A   0x0006             MOVS     R6,R0
     76          	tmp |= DAC_VALUE(dac_value);
   \   0000001C   0xF64F 0x70C0      MOVW     R0,#+65472
   \   00000020   0xEA10 0x1085      ANDS     R0,R0,R5, LSL #+6
   \   00000024   0x4306             ORRS     R6,R0,R6
     77          	//DACx->DACR	&= ~DAC_VALUE(0x3FF);
     78          	//DACx->DACR 	|=  DAC_VALUE(dac_value);
     79          	// Update value
     80          	DACx->DACR = tmp;
   \   00000026   0x6026             STR      R6,[R4, #+0]
     81          }
   \   00000028   0xBD70             POP      {R4-R6,PC}       ;; return
     82          
     83          /*********************************************************************//**
     84           * @brief 		Set Maximum current for DAC
     85           * @param[in] 	DACx pointer to LPC_DAC_TypeDef
     86           * @param[in] 	bias : 0 is 700 uA
     87           * 					   1    350 uA
     88           * @return 		None
     89           ***********************************************************************/

   \                                 In section .text, align 2, keep-with-next
     90          void    DAC_SetBias (LPC_DAC_TypeDef *DACx,uint32_t bias)
     91          {
   \                     DAC_SetBias: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     92          	CHECK_PARAM(PARAM_DAC_CURRENT_OPT(bias));
   \   00000006   0x2D00             CMP      R5,#+0
   \   00000008   0xD005             BEQ.N    ??DAC_SetBias_0
   \   0000000A   0x2D01             CMP      R5,#+1
   \   0000000C   0xD003             BEQ.N    ??DAC_SetBias_0
   \   0000000E   0x215C             MOVS     R1,#+92
   \   00000010   0x....             LDR.N    R0,??DataTable4_1
   \   00000012   0x.... 0x....      BL       check_failed
     93          	DACx->DACR &=~DAC_BIAS_EN;
   \                     ??DAC_SetBias_0: (+1)
   \   00000016   0x6820             LDR      R0,[R4, #+0]
   \   00000018   0xF430 0x3080      BICS     R0,R0,#0x10000
   \   0000001C   0x6020             STR      R0,[R4, #+0]
     94          	if (bias  == DAC_MAX_CURRENT_350uA)
   \   0000001E   0x2D01             CMP      R5,#+1
   \   00000020   0xD103             BNE.N    ??DAC_SetBias_1
     95          	{
     96          		DACx->DACR |= DAC_BIAS_EN;
   \   00000022   0x6820             LDR      R0,[R4, #+0]
   \   00000024   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   00000028   0x6020             STR      R0,[R4, #+0]
     97          	}
     98          }
   \                     ??DAC_SetBias_1: (+1)
   \   0000002A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     99          /*********************************************************************//**
    100           * @brief 		To enable the DMA operation and control DMA timer
    101           * @param[in]	DACx pointer to LPC_DAC_TypeDef
    102           * @param[in] 	DAC_ConverterConfigStruct pointer to DAC_CONVERTER_CFG_Type
    103           * 					- DBLBUF_ENA :  enable/disable DACR double buffering feature
    104           * 					- CNT_ENA    :  enable/disable timer out counter
    105           * 					- DMA_ENA    :	enable/disable DMA access
    106           * @return 		None
    107           ***********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    108          void    DAC_ConfigDAConverterControl (LPC_DAC_TypeDef *DACx,DAC_CONVERTER_CFG_Type *DAC_ConverterConfigStruct)
    109          {
   \                     DAC_ConfigDAConverterControl: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    110          	CHECK_PARAM(PARAM_DACx(DACx));
   \   00000006   0x....             LDR.N    R0,??DataTable4  ;; 0x4008c000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD003             BEQ.N    ??DAC_ConfigDAConverterControl_0
   \   0000000C   0x216E             MOVS     R1,#+110
   \   0000000E   0x....             LDR.N    R0,??DataTable4_1
   \   00000010   0x.... 0x....      BL       check_failed
    111          	DACx->DACCTRL &= ~DAC_DACCTRL_MASK;
   \                     ??DAC_ConfigDAConverterControl_0: (+1)
   \   00000014   0x6860             LDR      R0,[R4, #+4]
   \   00000016   0x0900             LSRS     R0,R0,#+4
   \   00000018   0x0100             LSLS     R0,R0,#+4
   \   0000001A   0x6060             STR      R0,[R4, #+4]
    112          	if (DAC_ConverterConfigStruct->DBLBUF_ENA)
   \   0000001C   0x7828             LDRB     R0,[R5, #+0]
   \   0000001E   0x2800             CMP      R0,#+0
   \   00000020   0xD003             BEQ.N    ??DAC_ConfigDAConverterControl_1
    113          		DACx->DACCTRL	|= DAC_DBLBUF_ENA;
   \   00000022   0x6860             LDR      R0,[R4, #+4]
   \   00000024   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000028   0x6060             STR      R0,[R4, #+4]
    114          	if (DAC_ConverterConfigStruct->CNT_ENA)
   \                     ??DAC_ConfigDAConverterControl_1: (+1)
   \   0000002A   0x7868             LDRB     R0,[R5, #+1]
   \   0000002C   0x2800             CMP      R0,#+0
   \   0000002E   0xD003             BEQ.N    ??DAC_ConfigDAConverterControl_2
    115          		DACx->DACCTRL	|= DAC_CNT_ENA;
   \   00000030   0x6860             LDR      R0,[R4, #+4]
   \   00000032   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000036   0x6060             STR      R0,[R4, #+4]
    116          	if (DAC_ConverterConfigStruct->DMA_ENA)
   \                     ??DAC_ConfigDAConverterControl_2: (+1)
   \   00000038   0x78A8             LDRB     R0,[R5, #+2]
   \   0000003A   0x2800             CMP      R0,#+0
   \   0000003C   0xD003             BEQ.N    ??DAC_ConfigDAConverterControl_3
    117          		DACx->DACCTRL	|= DAC_DMA_ENA;
   \   0000003E   0x6860             LDR      R0,[R4, #+4]
   \   00000040   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000044   0x6060             STR      R0,[R4, #+4]
    118          }
   \                     ??DAC_ConfigDAConverterControl_3: (+1)
   \   00000046   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    119          /*********************************************************************//**
    120           * @brief 		Set reload value for interrupt/DMA counter
    121           * @param[in] 	DACx pointer to LPC_DAC_TypeDef
    122           * @param[in] 	time_out time out to reload for interrupt/DMA counter
    123           * @return 		None
    124           ***********************************************************************/

   \                                 In section .text, align 2, keep-with-next
    125          void 	DAC_SetDMATimeOut(LPC_DAC_TypeDef *DACx, uint32_t time_out)
    126          {
   \                     DAC_SetDMATimeOut: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    127          	CHECK_PARAM(PARAM_DACx(DACx));
   \   00000006   0x....             LDR.N    R0,??DataTable4  ;; 0x4008c000
   \   00000008   0x4284             CMP      R4,R0
   \   0000000A   0xD003             BEQ.N    ??DAC_SetDMATimeOut_0
   \   0000000C   0x217F             MOVS     R1,#+127
   \   0000000E   0x....             LDR.N    R0,??DataTable4_1
   \   00000010   0x.... 0x....      BL       check_failed
    128          	DACx->DACCNTVAL = DAC_CCNT_VALUE(time_out);
   \                     ??DAC_SetDMATimeOut_0: (+1)
   \   00000014   0xF015 0x00FF      ANDS     R0,R5,#0xFF
   \   00000018   0x8120             STRH     R0,[R4, #+8]
    129          }
   \   0000001A   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x4008C000         DC32     0x4008c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x45 0x3A          DC8 45H, 3AH, 5CH, 0D0H, 0C2H, 0CFH, 0EEH, 0C4H
   \              0x5C 0xD0    
   \              0xC2 0xCF    
   \              0xEE 0xC4    
   \   00000008   0xBF 0x5C          DC8 0BFH, 5CH, 0D2H, 0C6H, 0BDH, 0BBH, 0D7H, 0CAH
   \              0xD2 0xC6    
   \              0xBD 0xBB    
   \              0xD7 0xCA    
   \   00000010   0xC1 0xCF          DC8 0C1H, 0CFH, 4CH, 48H, 54H, 5CH, 0D7H, 0D4H
   \              0x4C 0x48    
   \              0x54 0x5C    
   \              0xD7 0xD4    
   \   00000018   0xD6 0xFA          DC8 0D6H, 0FAH, 0BDH, 0C9H, 0B7H, 0D1H, 0BBH, 0FAH
   \              0xBD 0xC9    
   \              0xB7 0xD1    
   \              0xBB 0xFA    
   \   00000020   0x5C 0xC8          DC8 5CH, 0C8H, 0EDH, 0BCH, 0FEH, 5CH, 4DH, 69H
   \              0xED 0xBC    
   \              0xFE 0x5C    
   \              0x4D 0x69    
   \   00000028   0x63 0x72          DC8 63H, 72H, 69H, 75H, 6DH, 5FH, 4CH, 50H
   \              0x69 0x75    
   \              0x6D 0x5F    
   \              0x4C 0x50    
   \   00000030   0x43 0x31          DC8 43H, 31H, 37H, 36H, 38H, 2DH, 53H, 4BH
   \              0x37 0x36    
   \              0x38 0x2D    
   \              0x53 0x4B    
   \   00000038   0x5F 0x75          DC8 5FH, 75H, 43H, 4FH, 53H, 2DH, 49H, 49H
   \              0x43 0x4F    
   \              0x53 0x2D    
   \              0x49 0x49    
   \   00000040   0x49 0x2D          DC8 49H, 2DH, 52H, 65H, 6CH, 65H, 61H, 73H
   \              0x52 0x65    
   \              0x6C 0x65    
   \              0x61 0x73    
   \   00000048   0x65 0x5C          DC8 65H, 5CH, 53H, 6FH, 66H, 74H, 77H, 61H
   \              0x53 0x6F    
   \              0x66 0x74    
   \              0x77 0x61    
   \   00000050   0x72 0x65          DC8 72H, 65H, 5CH, 45H, 76H, 61H, 6CH, 42H
   \              0x5C 0x45    
   \              0x76 0x61    
   \              0x6C 0x42    
   \   00000058   0x6F 0x61          DC8 6FH, 61H, 72H, 64H, 73H, 5CH, 4EH, 58H
   \              0x72 0x64    
   \              0x73 0x5C    
   \              0x4E 0x58    
   \   00000060   0x50 0x5C          DC8 50H, 5CH, 4CH, 50H, 43H, 31H, 37H, 36H
   \              0x4C 0x50    
   \              0x43 0x31    
   \              0x37 0x36    
   \   00000068   0x38 0x2D          DC8 38H, 2DH, 53H, 4BH, 5CH, 4CH, 50H, 43H
   \              0x53 0x4B    
   \              0x5C 0x4C    
   \              0x50 0x43    
   \   00000070   0x31 0x37          DC8 31H, 37H, 58H, 58H, 43H, 4DH, 53H, 49H
   \              0x58 0x58    
   \              0x43 0x4D    
   \              0x53 0x49    
   \   00000078   0x53 0x5C          DC8 53H, 5CH, 44H, 72H, 69H, 76H, 65H, 72H
   \              0x44 0x72    
   \              0x69 0x76    
   \              0x65 0x72    
   \   00000080   0x73 0x5C          DC8 73H, 5CH, 73H, 6FH, 75H, 72H, 63H, 65H
   \              0x73 0x6F    
   \              0x75 0x72    
   \              0x63 0x65    
   \   00000088   0x5C 0x6C          DC8 5CH, 6CH, 70H, 63H, 31H, 37H, 78H, 78H
   \              0x70 0x63    
   \              0x31 0x37    
   \              0x78 0x78    
   \   00000090   0x5F 0x64          DC8 5FH, 64H, 61H, 63H, 2EH, 63H, 0
   \              0x61 0x63    
   \              0x2E 0x63    
   \              0x00         
   \   00000097   0x00               DC8 0
    130          
    131          /**
    132           * @}
    133           */
    134          
    135          #endif /* _DAC */
    136          
    137          /**
    138           * @}
    139           */
    140          
    141          /* --------------------------------- End Of File ------------------------------ */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   DAC_ConfigDAConverterControl
        16   -> check_failed
       8   DAC_Init
         8   -> DAC_SetBias
         8   -> check_failed
      16   DAC_SetBias
        16   -> check_failed
      16   DAC_SetDMATimeOut
        16   -> check_failed
      16   DAC_UpdateValue
        16   -> check_failed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
     152  ?_0
      72  DAC_ConfigDAConverterControl
      28  DAC_Init
      44  DAC_SetBias
      28  DAC_SetDMATimeOut
      42  DAC_UpdateValue

 
 152 bytes in section .rodata
 222 bytes in section .text
 
 222 bytes of CODE  memory
 152 bytes of CONST memory

Errors: none
Warnings: none
